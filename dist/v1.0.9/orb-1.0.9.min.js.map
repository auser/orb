{"version":3,"sources":["orb.js"],"names":["e","exports","module","define","amd","f","window","global","self","orb","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_dereq_","utils","pgrid","pgridwidget","query","./orb.export.excel","./orb.pgrid","./orb.query","./orb.ui.pgridwidget","./orb.utils",2,"calcVariance","datafield","intersection","datasource","population","variance","avg","len","forEachIntersection","val","NaN","callback","all","Aggregations","toAggregateFunc","func","sum","count","min","max","prod","stdev","Math","sqrt","stdevp","var","varp",3,"Dimension","AxeType","COLUMNS","ROWS","DATA","type","getfieldindex","field","fields","name","fill","filteredDataSource","dimensionsCount","isArray","rowIndex","dataLength","row","dim","root","findex","depth","subfield","subvalue","subdimvals","undefined","values","push","dimid","rowIndexes","dimensionsByDepth","this","config","columnFields","rowFields","dataFields","update","ffield","sort","order","donottoggle","parents","reverse","Type","./orb.dimension",4,"getpropertyvalue","property","configs","defaultvalue","mergefieldconfigs","merged","sorts","subtotals","functions","arguments","nnconfig","subTotal","aggregateFuncName","aggregateFunc","formatFunc","createfield","rootconfig","axetype","fieldconfig","defaultfieldconfig","axeconfig","fieldAxeconfig","axe","rowSettings","columnSettings","dataSettings","Field","caption","customfunc","visible","collapsible","collapsed","aggregation","GrandTotalConfig","options","rowsvisible","columnsvisible","SubTotalConfig","setdefaults","defaults","SortConfig","filtering","themeManager","createSubOptions","defaultFormatFunc","toString","_aggregatefunc","_formatfunc","isString","ensureFieldConfig","obj","captionToName","getfield","axefields","fieldname","fieldindex","fi","dataSource","canMoveFields","dataHeadersLocation","grandTotal","width","height","toolbar","theme","current","dataSourceFieldNames","dataSourceFieldCaptions","fcaptionIndex","indexOf","nameToCaption","fnameIndex","setTheme","newTheme","allFields","map","rows","columns","data","dataFieldsCount","runtimeVisibility","getField","getRowField","getColumnField","getDataField","availablefields","filter","notequalfield","otherfield","every","getDataSourceFieldCaptions","row0","fieldNames","ownProperties","headers","getInteractions","cellType","interactions","getPreFilters","prefilters","preFilters","forEach","filteredField","prefilterConfig","expressionFilter","opname","moveField","oldaxetype","newaxetype","position","oldaxe","oldposition","newaxe","fieldConfig","defaultFieldConfig","newAxeSubtotalsState","areSubtotalsVisible","splice","toggleSubtotals","axeFields","newState","toggleGrandtotal","isGrandtotalVisible","./orb.aggregation","./orb.axe","./orb.filtering","./orb.themes",5,"id","parent","value","isRoot","isLeaf","getRowIndexes","result","j",6,"uiheaders","uriHeader","docHeader","docFooter","createButtonCell","buttonStyle","buttonTextColor","createButtons","buttons","cellsCountBefore","cellsCountAfter","prefix","str","reduce","tr","toBase64","btoa","unescape","encodeURIComponent","currTheme","override","themeColor","themes","themeFadeout","fadeoutColor","headerStyle","cellsHorizontalCount","layout","pivotTable","sep","rowHeaders","columnHeaders","currRow","rowStr","header","HeaderType","DATA_HEADER","hspan","vspan","rowHeadersAndDataCells","dataRow","dataRows","dataCell","index","./orb.ui.header",7,"ALL","NONE","BLANK","operator","term","staticValue","excludeStatic","ops","get","regexpMode","regexpSupported","isRegExp","ignoreCase","RegExp","source","test","found","isAlwaysTrue","Operators","MATCH","NOTMATCH","EQ","NEQ","GT","GTE","LT","LTE","search",8,"configuration","refresh","refreshFilters","refreshFilteredDataSource","computeValues","filterFields","filters","exclude","fieldFilter","computeValue","colIndexes","origRowIndexes","res","ri","rowindex","colrowindex","emptyIntersection","datafields","fieldnameIndex","datafieldIndex","defaultfield","dfi","computeRowValues","rowDim","rid","_iCache","slice","p","rowindexes","subdim","cid","ur","vr","dataMatrix","applyFilter","refreshData","getFieldValues","filterFunc","values1","containsBlank","isNumber","isDate","b","vi","getFieldFilter","isFieldFiltered","getData","rowdim","coldim","datafieldName","calcAggregation","./orb.config",9,"queryBase","extractResult","aggs","outerArgs","multi","ai","multiFieldNames","getCaptionName","datafieldname","measureFunc","fieldsConfig","cleanOptions","compute","setDefaultAggFunctions","param","valname","aggFunctions","funcIndex","funcName","pgridQuery","filterDimensions","upperDims","some","upperDim","innerArgs","opts","setup","parameters","fIndex","colFields","df","dfname","dfcaption","hasOwnProperty","applyFilters","sortedFilters","f1","f2","currAxe","filterIndex","filtered","rowdims","coldims","rdi","concat","cdi","arrayQuery","array","setCaptionName","fname","fcaption","toAggregate","include","aggFunc",10,"states","set","key","state",11,"isBootstrap","currentTheme","red","blue","green","orange","flower","gray","black","white","validateTheme","themeName","trim","getPivotClasses","container","table","getButtonClasses","pivotButton","orbButton","scrollBar","getFilterClasses","getGridClasses","getDialogClasses","classes","overlay","dialog","content","title","body","hexToRgb","hex","exec","parseInt","g","rgbaToHex","rgba","matches","match","alpah","parseFloat","applyAlphaAndToHex","alpha","floor","substr","color",12,"axeModel","isMultiDataFields","toggleFieldExpansion","hIndex","toToggle","allExpanded","SUB_TOTAL","expanded","collapse","expand",13,"axeUi","columnsAxe","generateLeafsHeaders","pushsubtotal","pheader","leafsHeaders","subtotalHeader","infos","currparent","prevpar","grandpar","prevgrandpar","leafIndex","datafieldindex","dataHeader","getUiInfo","pi","parentDim","di","build","GRAND_TOTAL","INNER","./orb.ui.axe",14,"CellBase","typeStr","getTypeName","template","cssclass","isvisible","getState","setState","EMPTY","DATA_VALUE","FIELD_BUTTON","WRAPPER","headerType","getHeaderClass","getCellClass","rowHeaderType","colHeaderType","datafieldscount","isParentExpanded","hparent","isexpanded","par","calcSpan","ignoreVisibility","subSpan","tspan","addone","isRowsAxe","subheaders","subheader","rowinfo","colinfo","rowDimension","columnDimension","rowType","colType","buttonCell","emptyCell","./orb.state",15,"uirows","uicols","OrbReactComps","buildUi","createVisibleFunc","rowvisible","colvisible","rowsHeaders","columnsLeafHeaders","arr","rowHeadersRow","rowLeafHeader","colHeaderIndex","columnLeafHeader","renderElement","pivotComponent","Dialog","create","setProps","oldAxeType","newAxeType","changeTheme","render","element","pivotTableFactory","React","createFactory","PivotTable","pivottable","drilldown","pivotStyle","getComputedStyle","getDOMNode","show","comp","Grid","props","style","fontFamily","getPropertyValue","fontSize","./orb.ui.cols","./orb.ui.rows","./react/orb.react.compiled",16,"rowsAxe","addDataHeaders","lastInfosArray","dimension","infosMaxIndex","valIndex","subTotalHeader","newHeader","grandtotalHeader","lastrow",17,"ns","identifier","parts","split","prop","Object","prototype","apply","escapeRegex","re","replace","findInArray","predicate","item","jsonStringify","censorKeywords","censor","JSON","stringify","object","InvalidCharacterError","message","chars","input","block","charCode","String","idx","output","charAt","charCodeAt","atob","bs","buffer","bc","fromCharCode",18,"getAllColumnsWidth","tblObject","node","tbl","widthArray","arrayIndex","currWidth","cellIndex","cells","currCell","__orb","_visible","cellwidth","ceil","_textWidth","_colSpan","_paddingLeft","_paddingRight","_borderLeftWidth","_borderRightWidth","cspan","_rowSpan","inhibit","size","getClassname","compProps","cell","classname","leftmost","topmost","ScrollEvent","scrollBarComp","raise","getScrollPercent","FilterManager","reactComp","initialFilterObject","checkboxVisible","checkbox","isVisible","parentNode","display","applyInitialFilterObject","staticInfos","toExclude","isSearchMode","toggleRegexpButtonVisibility","isRegexMode","toggleRegexpButtonState","lastSearchTerm","elems","searchBox","applyFilterTerm","savedCheckedValues","updateCheckboxes","updateAllCheckbox","addEventListeners","filterContainer","addEventListener","valueChecked","searchChanged","clearSearchButton","clearSearchBox","okButton","checkedObj","getCheckedValues","onFilter","cancelButton","destroy","ResizeManager","outerContainerElem","valuesTableElem","resizeGripElem","minContainerWidth","minContainerHeight","mousedownpos","x","y","isMouseDown","resizeMouseDown","button","document","cursor","pageX","pageY","stopPropagation","preventDefault","resizeMouseUp","resizeMouseMove","resizeGripSize","getBoundingClientRect","outerContainerSize","valuesTableSize","outerContainerWidth","right","left","outerContainerHeight","bottom","top","offset","newContainerWidth","newContainerHeight","resizeManager","INDETERMINATE","checkboxes","operatorBox","allCheckbox","addCheckbox","enableRegexButton","resizeGrip","init","filterContainerElement","children","onOperatorChanged","newOperator","regexpActiveChanged","reactUtils","removeClass","removeEventListener","addClass","className","target","checked","defaultVisible","opterm","previousIsSearchMode","indeterminate","valuesCount","checkedCount","excludeUnchecked","checkedList","allchecked","valInList","createOverlay","overlayElement","createElement","appendChild","react","comps","pivotId","themeChangeCallbacks","createClass","getInitialState","DragManager","registerThemeChanged","updateClasses","moveButton","expandRow","collapseRow","compCallback","unregisterThemeChanged","thisnode","componentDidUpdate","synchronizeCompsWidths","componentDidMount","dataCellsContainerNode","refs","dataCellsContainer","dataCellsTableNode","dataCellsTable","colHeadersContainerNode","colHeadersContainer","rowHeadersContainerNode","rowHeadersContainer","horizontalScrollBar","setScrollClient","scrollPercent","scrollAmount","getSize","scrollLeft","verticalScrollBar","scrollTop","onWheel","elem","scrollbar","amount","currentTarget","deltaX","deltaY","scroll","deltaMode","pivotWrapperTable","nodes","nds","refname","colHeadersTable","rowHeadersTable","rowButtonsContainerWidth","rowButtonsContainer","dataCellsTableMaxWidthArray","dataCellsTableMaxWidth","mxwidth","rowHeadersTableWidth","rowDiff","updateTableColGroup","dataCellsContainerWidth","pivotContainer","pivotContainerHeight","dataCellsTableHeight","upperbuttonsRow","columnbuttonsRow","Toolbar","PivotTableUpperButtons","PivotTableColumnButtons","PivotTableRowButtons","PivotTableRowHeaders","PivotTableColumnHeaders","PivotTableDataCells","HorizontalScrollBar","VerticalScrollBar","tblStyle","ref","pivotTableComp","tableLayout","colSpan","padding","PivotRow","PivotCell","leftmostCellFound","layoutInfos","rowstyle","istopmost","isleftmost","topMostCells","lastLeftMostCellVSpan","_borderLeft","interactionMap","onHover","getCellInteractionEventNames","names","fn","eventNames","evtName","updateCellInfos","cellContentNode","cellContent","propList","textContent","retPaddingLeft","retBorderLeft","nodeStyle","getStyle","handleInteraction","evt","bind","el","onInit","setTimeout","interactionNames","evtIdx","componentWillUnmount","shouldComponentUpdate","nextProps","_latestVisibleState","cellClick","divcontent","headerPushed","isWrapper","isSubtotal","onClick","dangerouslySetInnerHTML","__html","headerClassName","onDoubleClick","rowSpan","dragManager","doElementsOverlap","elem1Rect","elem2Rect","setCurrDropTarget","dropTarget","_currDropTarget","signalDragEnd","signalDragOver","setCurrDropIndicator","dropIndicator","_currDropIndicator","onDragOver","onDragEnd","_pivotComp","_currDragElement","_dragNode","_dropTargets","_dropIndicators","_initialized","pivotComp","setDragElement","prevDragElement","component","registerTarget","dragOverHandler","dargEndHandler","unregisterTarget","tindex","registerIndicator","indicator","unregisterIndicator","iindex","elementMoved","foundTarget","dragNodeRect","tnodeRect","isOverlap","foundIndicator","elementOwnIndicator","targetIndicator","axeIndicators","DropIndicator","displayName","isover","isMounted","isFirst","isLast","dtid","DropTarget","pbid","PivotButton","pos","startpos","mousedown","dragging","onFilterMouseDown","filterButton","filterButtonPos","getOffset","filterPanelFactory","FilterPanel","filterPanel","onMouseMove","onMouseDown","ctrlKey","thispos","mouseoffset","onMouseUp","isdragged","newpos","divstyle","zIndex","sortDirectionClass","filterClass","fieldAggFunc","fieldsDropTarget","fieldsButtons","dataButtons","dataDropTarget","columnButtons","rowButtons","cntrClass","headerRow","setColGroup","widths","colGroupNode","colgroup","innerHTML","col","dataCells","scrollBarMixin","scrollEvent","scrollClient","thumbOffset","thumbElem","scrollThumb","thumbposInParent","getParentOffset","mousePosProp","posProp","getScrollSize","sizeProp","scrollCallback","maxOffset","scrolledElement","clientSize","elementSize","scrollBarContainerSize","newSize","containerSize","mode","newOffset","thumbStyle","offsetCssProp","thisStyle","thumbClass","cssClass","mixins","filterManager","unmountComponentAtNode","removeChild","onMouseWheel","valuesTable","scrollHeight","clientHeight","componentWillMount","addCheckboxRow","text","defaultChecked","Dropdown","buttonClass","currentFilter","selectedValue","onValueChanged","placeholder","clearFilter","float","openOrClose","valueNode","valueElement","valuesListNode","valuesList","onMouseEnter","backgroundPosition","onMouseLeave","selectValue","listNode","isli","tableClasses","h","statics","dialogFactory","setOverlayClass","close","dialogElement","dialogBodyElement","screenWidth","documentElement","clientWidth","innerWidth","screenHeight","innerHeight","maxHeight","dWidth","offsetWidth","offsetHeight","dHeight","_toInit","btn","createCallback","action","pgridComponent","configButtons","defaultToolbarConfig","btnConfig","refName","tooltip","excelExport","exportToExcel","download","href","click","expandAllRows","collapseAllRows","expandAllColumns","collapseAllColumns","updateSubtotalsButton","subTotalsState","classToAdd","classToRemove","initSubtotals","updateGrandtotalButton","initGrandtotal","../orb.axe","../orb.export.excel","../orb.filtering","../orb.ui.header","../orb.utils","./orb.react.utils",19,"list","defStop","ret","rect","rectParent","styleProps","keepString","currStyle","currentStyle","tableNode","firstChild","nodeName"],"mappings":"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","file":"orb-1.0.9.min.js","sourcesContent":["/**\n * orb v1.0.9, Pivot table javascript library.\n *\n * Copyright (c) 2014-2015 Najmeddine Nouri <devnajm@gmail.com>.\n *\n * @version v1.0.9\n * @link http://orbjs.net/\n * @license MIT\n */\n\n/* global module, require, define, window, document, global, React */\n/*jshint node: true, eqnull: true*/\n\n'use strict';\n! function(e) {\n    if (\"object\" == typeof exports && \"undefined\" != typeof module) module.exports = e();\n    else if (\"function\" == typeof define && define.amd) define([], e);\n    else {\n        var f;\n        \"undefined\" != typeof window ? f = window : \"undefined\" != typeof global ? f = global : \"undefined\" != typeof self && (f = self), f.orb = e()\n    }\n}(function() {\n    var define, module, exports;\n    return (function e(t, n, r) {\n        function s(o, u) {\n            if (!n[o]) {\n                if (!t[o]) {\n                    var a = typeof require == \"function\" && require;\n                    if (!u && a) return a(o, !0);\n                    if (i) return i(o, !0);\n                    var f = new Error(\"Cannot find module '\" + o + \"'\");\n                    throw f.code = \"MODULE_NOT_FOUND\", f\n                }\n                var l = n[o] = {\n                    exports: {}\n                };\n                t[o][0].call(l.exports, function(e) {\n                    var n = t[o][1][e];\n                    return s(n ? n : e)\n                }, l, l.exports, e, t, n, r)\n            }\n            return n[o].exports\n        }\n        var i = typeof require == \"function\" && require;\n        for (var o = 0; o < r.length; o++) s(r[o]);\n        return s\n    })({\n        1: [function(_dereq_, module, exports) {\n\n            module.exports.utils = _dereq_('./orb.utils');\n            module.exports.pgrid = _dereq_('./orb.pgrid');\n            module.exports.pgridwidget = _dereq_('./orb.ui.pgridwidget');\n            module.exports.query = _dereq_('./orb.query');\n            module.exports.export = _dereq_('./orb.export.excel');\n\n        }, {\n            \"./orb.export.excel\": 6,\n            \"./orb.pgrid\": 8,\n            \"./orb.query\": 9,\n            \"./orb.ui.pgridwidget\": 15,\n            \"./orb.utils\": 17\n        }],\n        2: [function(_dereq_, module, exports) {\n\n            var Aggregations = module.exports = {\n                toAggregateFunc: function(func) {\n                    if (func) {\n                        if (typeof func === 'string' && Aggregations[func]) {\n                            return Aggregations[func];\n                        } else if (typeof func === 'function') {\n                            return func;\n                        } else {\n                            return Aggregations.sum;\n                        }\n                    } else {\n                        return Aggregations.sum;\n                    }\n                },\n                count: function(datafield, intersection, datasource) {\n                    return intersection === 'all' ? datasource.length : intersection.length;\n                },\n                sum: function(datafield, intersection, datasource) {\n                    var sum = 0;\n                    forEachIntersection(datafield, intersection, datasource, function(val) {\n                        sum += val;\n                    });\n                    return sum;\n                },\n                min: function(datafield, intersection, datasource) {\n                    var min = null;\n                    forEachIntersection(datafield, intersection, datasource, function(val) {\n                        if (min == null || val < min) {\n                            min = val;\n                        }\n                    });\n                    return min;\n                },\n                max: function(datafield, intersection, datasource) {\n                    var max = null;\n                    forEachIntersection(datafield, intersection, datasource, function(val) {\n                        if (max == null || val > max) {\n                            max = val;\n                        }\n                    });\n                    return max;\n                },\n                avg: function(datafield, intersection, datasource) {\n                    var avg = 0;\n                    var len = (intersection === 'all' ? datasource : intersection).length;\n                    if (len > 0) {\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            avg += val;\n                        });\n                        avg /= len;\n                    }\n                    return avg;\n                },\n                prod: function(datafield, intersection, datasource) {\n                    var prod;\n                    var len = (intersection === 'all' ? datasource : intersection).length;\n                    if (len > 0) {\n                        prod = 1;\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            prod *= val;\n                        });\n                    }\n                    return prod;\n                },\n                stdev: function(datafield, intersection, datasource) {\n                    return Math.sqrt(calcVariance(datafield, intersection, datasource, false));\n                },\n                stdevp: function(datafield, intersection, datasource) {\n                    return Math.sqrt(calcVariance(datafield, intersection, datasource, true));\n                },\n                var: function(datafield, intersection, datasource) {\n                    return calcVariance(datafield, intersection, datasource, false);\n                },\n                varp: function(datafield, intersection, datasource) {\n                    return calcVariance(datafield, intersection, datasource, true);\n                }\n            };\n\n            function calcVariance(datafield, intersection, datasource, population) {\n                var variance = 0;\n                var avg = 0;\n                var len = (intersection === 'all' ? datasource : intersection).length;\n                if (len > 0) {\n                    if (population || len > 1) {\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            avg += val;\n                        });\n                        avg /= len;\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            variance += (val - avg) * (val - avg);\n                        });\n                        variance = variance / (population ? len : len - 1);\n                    } else {\n                        variance = NaN;\n                    }\n                }\n                return variance;\n            }\n\n            function forEachIntersection(datafield, intersection, datasource, callback) {\n                var all = intersection === 'all';\n                intersection = all ? datasource : intersection;\n                if (intersection.length > 0) {\n                    for (var i = 0; i < intersection.length; i++) {\n                        callback((all ? intersection[i] : datasource[intersection[i]])[datafield]);\n                    }\n                }\n            }\n\n        }, {}],\n        3: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n            var Dimension = _dereq_('./orb.dimension');\n\n            var AxeType = {\n                COLUMNS: 1,\n                ROWS: 2,\n                DATA: 3\n            };\n\n            module.exports = function(pgrid, type) {\n\n                var self = this;\n                var dimid = 0;\n\n                if (pgrid != null && pgrid.config != null) {\n\n\n                    this.pgrid = pgrid;\n\n\n                    this.type = type;\n\n\n                    this.fields = (function() {\n                        switch (type) {\n                            case AxeType.COLUMNS:\n                                return self.pgrid.config.columnFields;\n                            case AxeType.ROWS:\n                                return self.pgrid.config.rowFields;\n                            case AxeType.DATA:\n                                return self.pgrid.config.dataFields;\n                            default:\n                                return [];\n                        }\n                    }());\n\n\n                    this.dimensionsCount = null;\n\n\n                    this.root = null;\n\n\n                    this.dimensionsByDepth = null;\n\n                    this.update = function() {\n                        self.dimensionsCount = self.fields.length;\n                        self.root = new Dimension(++dimid, null, null, null, self.dimensionsCount + 1, true);\n\n                        self.dimensionsByDepth = {};\n                        for (var depth = 1; depth <= self.dimensionsCount; depth++) {\n                            self.dimensionsByDepth[depth] = [];\n                        }\n\n                        // fill data\n                        fill();\n\n                        // initial sort\n                        for (var findex = 0; findex < self.fields.length; findex++) {\n                            var ffield = self.fields[findex];\n                            if (ffield.sort.order === 'asc' || ffield.sort.order === 'desc') {\n                                self.sort(ffield, true);\n                            }\n                        }\n                    };\n\n                    this.sort = function(field, donottoggle) {\n                        if (field != null) {\n                            if (donottoggle !== true) {\n                                if (field.sort.order !== 'asc') {\n                                    field.sort.order = 'asc';\n                                } else {\n                                    field.sort.order = 'desc';\n                                }\n                            }\n\n                            var depth = self.dimensionsCount - getfieldindex(field);\n                            var parents = depth === self.dimensionsCount ? [self.root] : self.dimensionsByDepth[depth + 1];\n                            for (var i = 0; i < parents.length; i++) {\n                                parents[i].values.sort();\n                                if (field.sort.order === 'desc') {\n                                    parents[i].values.reverse();\n                                }\n                            }\n                        }\n                    };\n                }\n\n                function getfieldindex(field) {\n                    for (var i = 0; i < self.fields.length; i++) {\n                        if (self.fields[i].name === field.name) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                }\n\n\n                function fill() {\n\n                    if (self.pgrid.filteredDataSource != null && self.dimensionsCount > 0) {\n\n                        var datasource = self.pgrid.filteredDataSource;\n                        if (datasource != null && utils.isArray(datasource) && datasource.length > 0) {\n                            for (var rowIndex = 0, dataLength = datasource.length; rowIndex < dataLength; rowIndex++) {\n                                var row = datasource[rowIndex];\n                                var dim = self.root;\n                                for (var findex = 0; findex < self.dimensionsCount; findex++) {\n                                    var depth = self.dimensionsCount - findex;\n                                    var subfield = self.fields[findex];\n                                    var subvalue = row[subfield.name];\n                                    var subdimvals = dim.subdimvals;\n\n                                    if (subdimvals[subvalue] !== undefined) {\n                                        dim = subdimvals[subvalue];\n                                    } else {\n                                        dim.values.push(subvalue);\n                                        dim = new Dimension(++dimid, dim, subvalue, subfield, depth, false, findex == self.dimensionsCount - 1);\n                                        subdimvals[subvalue] = dim;\n                                        dim.rowIndexes = [];\n                                        self.dimensionsByDepth[depth].push(dim);\n                                    }\n\n                                    dim.rowIndexes.push(rowIndex);\n                                }\n                            }\n                        }\n                    }\n                }\n            };\n\n            module.exports.Type = AxeType;\n\n        }, {\n            \"./orb.dimension\": 5,\n            \"./orb.utils\": 17\n        }],\n        4: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n            var axe = _dereq_('./orb.axe');\n            var aggregation = _dereq_('./orb.aggregation');\n            var filtering = _dereq_('./orb.filtering');\n            var themeManager = _dereq_('./orb.themes');\n\n            function getpropertyvalue(property, configs, defaultvalue) {\n                for (var i = 0; i < configs.length; i++) {\n                    if (configs[i][property] != null) {\n                        return configs[i][property];\n                    }\n                }\n                return defaultvalue;\n            }\n\n            function mergefieldconfigs() {\n\n                var merged = {\n                    configs: [],\n                    sorts: [],\n                    subtotals: [],\n                    functions: []\n                };\n\n                for (var i = 0; i < arguments.length; i++) {\n                    var nnconfig = arguments[i] || {};\n                    merged.configs.push(nnconfig);\n                    merged.sorts.push(nnconfig.sort || {});\n                    merged.subtotals.push(nnconfig.subTotal || {});\n                    merged.functions.push({\n                        aggregateFuncName: nnconfig.aggregateFuncName,\n                        aggregateFunc: i === 0 ? nnconfig.aggregateFunc : (nnconfig.aggregateFunc ? nnconfig.aggregateFunc() : null),\n                        formatFunc: i === 0 ? nnconfig.formatFunc : (nnconfig.formatFunc ? nnconfig.formatFunc() : null),\n                    });\n                }\n\n                return merged;\n            }\n\n            function createfield(rootconfig, axetype, fieldconfig, defaultfieldconfig) {\n\n                var axeconfig;\n                var fieldAxeconfig;\n\n                if (defaultfieldconfig) {\n                    switch (axetype) {\n                        case axe.Type.ROWS:\n                            axeconfig = rootconfig.rowSettings;\n                            fieldAxeconfig = defaultfieldconfig.rowSettings;\n                            break;\n                        case axe.Type.COLUMNS:\n                            axeconfig = rootconfig.columnSettings;\n                            fieldAxeconfig = defaultfieldconfig.columnSettings;\n                            break;\n                        case axe.Type.DATA:\n                            axeconfig = rootconfig.dataSettings;\n                            fieldAxeconfig = defaultfieldconfig.dataSettings;\n                            break;\n                        default:\n                            axeconfig = null;\n                            fieldAxeconfig = null;\n                            break;\n                    }\n                } else {\n                    axeconfig = null;\n                    fieldAxeconfig = null;\n                }\n\n                var merged = mergefieldconfigs(fieldconfig, fieldAxeconfig, axeconfig, defaultfieldconfig, rootconfig);\n\n                return new Field({\n                    name: getpropertyvalue('name', merged.configs, ''),\n\n                    caption: getpropertyvalue('caption', merged.configs, ''),\n\n                    sort: {\n                        order: getpropertyvalue('order', merged.sorts, null),\n                        customfunc: getpropertyvalue('customfunc', merged.sorts, null)\n                    },\n                    subTotal: {\n                        visible: getpropertyvalue('visible', merged.subtotals, true),\n                        collapsible: getpropertyvalue('collapsible', merged.subtotals, true),\n                        collapsed: getpropertyvalue('collapsed', merged.subtotals, false) && getpropertyvalue('collapsible', merged.subtotals, true)\n                    },\n\n                    aggregateFuncName: getpropertyvalue('aggregateFuncName', merged.functions, 'sum'),\n                    aggregateFunc: getpropertyvalue('aggregateFunc', merged.functions, aggregation.sum),\n                    formatFunc: getpropertyvalue('formatFunc', merged.functions, null)\n                }, false);\n            }\n\n            function GrandTotalConfig(options) {\n\n                options = options || {};\n\n                this.rowsvisible = options.rowsvisible !== undefined ? options.rowsvisible : true;\n                this.columnsvisible = options.columnsvisible !== undefined ? options.columnsvisible : true;\n            }\n\n            function SubTotalConfig(options, setdefaults) {\n\n                var defaults = {\n                    visible: setdefaults === true ? true : undefined,\n                    collapsible: setdefaults === true ? true : undefined,\n                    collapsed: setdefaults === true ? false : undefined\n                };\n                options = options || {};\n\n                this.visible = options.visible !== undefined ? options.visible : defaults.visible;\n                this.collapsible = options.collapsible !== undefined ? options.collapsible : defaults.collapsible;\n                this.collapsed = options.collapsed !== undefined ? options.collapsed : defaults.collapsed;\n            }\n\n            function SortConfig(options) {\n                options = options || {};\n\n                this.order = options.order;\n                this.customfunc = options.customfunc;\n            }\n\n            var Field = module.exports.field = function(options, createSubOptions) {\n\n                options = options || {};\n\n                // field name\n                this.name = options.name;\n\n                // shared settings\n                this.caption = options.caption || this.name;\n\n                // rows & columns settings\n                this.sort = new SortConfig(options.sort);\n                this.subTotal = new SubTotalConfig(options.subTotal);\n\n                // data settings\n                var _aggregatefunc;\n                var _formatfunc;\n\n                function defaultFormatFunc(val) {\n                    return val != null ? val.toString() : '';\n                }\n\n                this.aggregateFunc = function(func) {\n                    if (func) {\n                        _aggregatefunc = aggregation.toAggregateFunc(func);\n                    } else {\n                        return _aggregatefunc;\n                    }\n                };\n\n                this.formatFunc = function(func) {\n                    if (func) {\n                        _formatfunc = func;\n                    } else {\n                        return _formatfunc;\n                    }\n                };\n\n                this.aggregateFuncName = options.aggregateFuncName ||\n                    (options.aggregateFunc ?\n                        (utils.isString(options.aggregateFunc) ?\n                            options.aggregateFunc :\n                            'custom') :\n                        null);\n\n                this.aggregateFunc(options.aggregateFunc);\n                this.formatFunc(options.formatFunc || defaultFormatFunc);\n\n                if (createSubOptions !== false) {\n                    (this.rowSettings = new Field(options.rowSettings, false)).name = this.name;\n                    (this.columnSettings = new Field(options.columnSettings, false)).name = this.name;\n                    (this.dataSettings = new Field(options.dataSettings, false)).name = this.name;\n                }\n            };\n\n            module.exports.config = function(config) {\n\n                var self = this;\n\n                this.dataSource = config.dataSource || [];\n                this.canMoveFields = config.canMoveFields !== undefined ? !!config.canMoveFields : true;\n                this.dataHeadersLocation = config.dataHeadersLocation === 'columns' ? 'columns' : 'rows';\n                this.grandTotal = new GrandTotalConfig(config.grandTotal);\n                this.subTotal = new SubTotalConfig(config.subTotal, true);\n                this.width = config.width;\n                this.height = config.height;\n                this.toolbar = config.toolbar;\n                this.theme = themeManager;\n\n                themeManager.current(config.theme);\n\n                this.rowSettings = new Field(config.rowSettings, false);\n                this.columnSettings = new Field(config.columnSettings, false);\n                this.dataSettings = new Field(config.dataSettings, false);\n\n                // datasource field names\n                this.dataSourceFieldNames = [];\n                // datasource field captions\n                this.dataSourceFieldCaptions = [];\n\n                this.captionToName = function(caption) {\n                    var fcaptionIndex = self.dataSourceFieldCaptions.indexOf(caption);\n                    return fcaptionIndex >= 0 ? self.dataSourceFieldNames[fcaptionIndex] : caption;\n                };\n\n                this.nameToCaption = function(name) {\n                    var fnameIndex = self.dataSourceFieldNames.indexOf(name);\n                    return fnameIndex >= 0 ? self.dataSourceFieldCaptions[fnameIndex] : name;\n                };\n\n                this.setTheme = function(newTheme) {\n                    return self.theme.current() !== self.theme.current(newTheme);\n                };\n\n                this.allFields = (config.fields || []).map(function(fieldconfig) {\n                    var f = new Field(fieldconfig);\n                    // map fields names to captions\n                    self.dataSourceFieldNames.push(f.name);\n                    self.dataSourceFieldCaptions.push(f.caption);\n                    return f;\n                });\n\n                function ensureFieldConfig(obj) {\n                    if (typeof obj === 'string') {\n                        return {\n                            name: self.captionToName(obj)\n                        };\n                    }\n                    return obj;\n                }\n\n                this.rowFields = (config.rows || []).map(function(fieldconfig) {\n                    fieldconfig = ensureFieldConfig(fieldconfig);\n                    return createfield(self, axe.Type.ROWS, fieldconfig, getfield(self.allFields, fieldconfig.name));\n                });\n\n                this.columnFields = (config.columns || []).map(function(fieldconfig) {\n                    fieldconfig = ensureFieldConfig(fieldconfig);\n                    return createfield(self, axe.Type.COLUMNS, fieldconfig, getfield(self.allFields, fieldconfig.name));\n                });\n\n                this.dataFields = (config.data || []).map(function(fieldconfig) {\n                    fieldconfig = ensureFieldConfig(fieldconfig);\n                    return createfield(self, axe.Type.DATA, fieldconfig, getfield(self.allFields, fieldconfig.name));\n                });\n\n                this.dataFieldsCount = this.dataFields ? (this.dataFields.length || 1) : 1;\n\n                var runtimeVisibility = {\n                    subtotals: {\n                        rows: self.rowSettings.subTotal.visible !== undefined ? self.rowSettings.subTotal.visible : true,\n                        columns: self.columnSettings.subTotal.visible !== undefined ? self.columnSettings.subTotal.visible : true\n                    }\n                };\n\n                function getfield(axefields, fieldname) {\n                    var fieldindex = getfieldindex(axefields, fieldname);\n                    if (fieldindex > -1) {\n                        return axefields[fieldindex];\n                    }\n                    return null;\n                }\n\n                function getfieldindex(axefields, fieldname) {\n                    for (var fi = 0; fi < axefields.length; fi++) {\n                        if (axefields[fi].name === fieldname) {\n                            return fi;\n                        }\n                    }\n                    return -1;\n                }\n\n                this.getField = function(fieldname) {\n                    return getfield(self.allFields, fieldname);\n                };\n\n                this.getRowField = function(fieldname) {\n                    return getfield(self.rowFields, fieldname);\n                };\n\n                this.getColumnField = function(fieldname) {\n                    return getfield(self.columnFields, fieldname);\n                };\n\n                this.getDataField = function(fieldname) {\n                    return getfield(self.dataFields, fieldname);\n                };\n\n                this.availablefields = function() {\n                    return self.allFields.filter(function(field) {\n                        var notequalfield = function(otherfield) {\n                            return field.name !== otherfield.name;\n                        };\n\n                        return self.dataFields.every(notequalfield) &&\n                            self.rowFields.every(notequalfield) &&\n                            self.columnFields.every(notequalfield);\n                    });\n                };\n\n                this.getDataSourceFieldCaptions = function() {\n                    var row0;\n                    if (self.dataSource && (row0 = self.dataSource[0])) {\n                        var fieldNames = utils.ownProperties(row0);\n                        var headers = [];\n                        for (var i = 0; i < fieldNames.length; i++) {\n                            headers.push(self.nameToCaption(fieldNames[i]));\n                        }\n                        return headers;\n                    }\n                    return null;\n                };\n\n                this.getInteractions = function(cellType) {\n                    return config.interactions ? config.interactions[cellType] : {};\n                };\n\n                this.getPreFilters = function() {\n                    var prefilters = {};\n                    if (config.preFilters) {\n                        utils.ownProperties(config.preFilters).forEach(function(filteredField) {\n                            var prefilterConfig = config.preFilters[filteredField];\n                            if (utils.isArray(prefilterConfig)) {\n                                prefilters[self.captionToName(filteredField)] = new filtering.expressionFilter(null, null, prefilterConfig, false);\n                            } else {\n                                var opname = utils.ownProperties(prefilterConfig)[0];\n                                if (opname) {\n                                    prefilters[self.captionToName(filteredField)] = new filtering.expressionFilter(opname, prefilterConfig[opname]);\n                                }\n                            }\n                        });\n                    }\n\n                    return prefilters;\n                };\n\n                this.moveField = function(fieldname, oldaxetype, newaxetype, position) {\n\n                    var oldaxe, oldposition;\n                    var newaxe;\n                    var fieldConfig;\n                    var defaultFieldConfig = getfield(self.allFields, fieldname);\n\n                    if (defaultFieldConfig) {\n\n                        switch (oldaxetype) {\n                            case axe.Type.ROWS:\n                                oldaxe = self.rowFields;\n                                break;\n                            case axe.Type.COLUMNS:\n                                oldaxe = self.columnFields;\n                                break;\n                            case axe.Type.DATA:\n                                oldaxe = self.dataFields;\n                                break;\n                            default:\n                                break;\n                        }\n\n                        switch (newaxetype) {\n                            case axe.Type.ROWS:\n                                newaxe = self.rowFields;\n                                fieldConfig = self.getRowField(fieldname);\n                                break;\n                            case axe.Type.COLUMNS:\n                                newaxe = self.columnFields;\n                                fieldConfig = self.getColumnField(fieldname);\n                                break;\n                            case axe.Type.DATA:\n                                newaxe = self.dataFields;\n                                fieldConfig = self.getDataField(fieldname);\n                                break;\n                            default:\n                                break;\n                        }\n\n                        if (oldaxe || newaxe) {\n\n                            var newAxeSubtotalsState = self.areSubtotalsVisible(newaxetype);\n\n                            if (oldaxe) {\n                                oldposition = getfieldindex(oldaxe, fieldname);\n                                if (oldaxetype === newaxetype) {\n                                    if (oldposition == oldaxe.length - 1 &&\n                                        position == null ||\n                                        oldposition === position - 1) {\n                                        return false;\n                                    }\n                                }\n                                oldaxe.splice(oldposition, 1);\n                            }\n\n                            var field = createfield(\n                                self,\n                                newaxetype,\n                                fieldConfig,\n                                defaultFieldConfig);\n\n                            if (!newAxeSubtotalsState && field.subTotal.visible !== false) {\n                                field.subTotal.visible = null;\n                            }\n\n                            if (newaxe) {\n                                if (position != null) {\n                                    newaxe.splice(position, 0, field);\n                                } else {\n                                    newaxe.push(field);\n                                }\n                            }\n\n                            // update data fields count\n                            self.dataFieldsCount = self.dataFields ? (self.dataFields.length || 1) : 1;\n\n                            return true;\n                        }\n                    }\n                };\n\n                this.toggleSubtotals = function(axetype) {\n\n                    var i;\n                    var axeFields;\n                    var newState = !self.areSubtotalsVisible(axetype);\n\n                    if (axetype === axe.Type.ROWS) {\n                        runtimeVisibility.subtotals.rows = newState;\n                        axeFields = self.rowFields;\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        runtimeVisibility.subtotals.columns = newState;\n                        axeFields = self.columnFields;\n                    } else {\n                        return false;\n                    }\n\n                    newState = newState === false ? null : true;\n                    for (i = 0; i < axeFields.length; i++) {\n                        if (axeFields[i].subTotal.visible !== false) {\n                            axeFields[i].subTotal.visible = newState;\n                        }\n                    }\n                    return true;\n                };\n\n                this.areSubtotalsVisible = function(axetype) {\n                    if (axetype === axe.Type.ROWS) {\n                        return runtimeVisibility.subtotals.rows;\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        return runtimeVisibility.subtotals.columns;\n                    } else {\n                        return null;\n                    }\n                };\n\n                this.toggleGrandtotal = function(axetype) {\n                    var newState = !self.isGrandtotalVisible(axetype);\n\n                    if (axetype === axe.Type.ROWS) {\n                        self.grandTotal.rowsvisible = newState;\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        self.grandTotal.columnsvisible = newState;\n                    } else {\n                        return false;\n                    }\n                    return true;\n                };\n\n                this.isGrandtotalVisible = function(axetype) {\n                    if (axetype === axe.Type.ROWS) {\n                        return self.grandTotal.rowsvisible;\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        return self.grandTotal.columnsvisible;\n                    } else {\n                        return false;\n                    }\n                };\n            };\n        }, {\n            \"./orb.aggregation\": 2,\n            \"./orb.axe\": 3,\n            \"./orb.filtering\": 7,\n            \"./orb.themes\": 11,\n            \"./orb.utils\": 17\n        }],\n        5: [function(_dereq_, module, exports) {\n\n            module.exports = function(id, parent, value, field, depth, isRoot, isLeaf) {\n\n                var self = this;\n\n                this.id = id;\n\n                this.parent = parent;\n\n                this.value = value;\n\n                this.isRoot = isRoot;\n\n                this.isLeaf = isLeaf;\n\n                this.field = field;\n\n                this.depth = depth;\n\n                this.values = [];\n\n                this.subdimvals = {};\n\n                this.rowIndexes = null;\n\n                this.getRowIndexes = function(result) {\n                    if (self.rowIndexes == null) {\n                        self.rowIndexes = [];\n                        for (var i = 0; i < self.values.length; i++) {\n                            self.subdimvals[self.values[i]].getRowIndexes(self.rowIndexes);\n                        }\n                    }\n                    if (result != null) {\n                        for (var j = 0; j < self.rowIndexes.length; j++) {\n                            result.push(self.rowIndexes[j]);\n                        }\n                        return result;\n                    } else {\n                        return self.rowIndexes;\n                    }\n                };\n            };\n\n        }, {}],\n        6: [function(_dereq_, module, exports) {\n\n\n\n\n\n\n            var utils = _dereq_('./orb.utils');\n            var uiheaders = _dereq_('./orb.ui.header');\n            var themeManager = _dereq_('./orb.themes');\n\n            var uriHeader = 'data:application/vnd.ms-excel;base64,';\n            var docHeader = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-microsoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\">' +\n                '<head>' +\n                '<meta http-equiv=Content-Type content=\"text/html; charset=UTF-8\">' +\n                '<!--[if gte mso 9]><xml>' +\n                ' <x:ExcelWorkbook>' +\n                '  <x:ExcelWorksheets>' +\n                '   <x:ExcelWorksheet>' +\n                '    <x:Name>###sheetname###</x:Name>' +\n                '    <x:WorksheetOptions>' +\n                '     <x:ProtectContents>False</x:ProtectContents>' +\n                '     <x:ProtectObjects>False</x:ProtectObjects>' +\n                '     <x:ProtectScenarios>False</x:ProtectScenarios>' +\n                '    </x:WorksheetOptions>' +\n                '   </x:ExcelWorksheet>' +\n                '  </x:ExcelWorksheets>' +\n                '  <x:ProtectStructure>False</x:ProtectStructure>' +\n                '  <x:ProtectWindows>False</x:ProtectWindows>' +\n                ' </x:ExcelWorkbook>' +\n                '</xml><![endif]-->' +\n                '</head>' +\n                '<body>';\n            var docFooter = '</body></html>';\n\n            module.exports = function(pgridwidget) {\n\n                var config = pgridwidget.pgrid.config;\n\n                var currTheme = themeManager.current();\n                currTheme = currTheme === 'bootstrap' ? 'white' : currTheme;\n                var override = currTheme === 'white';\n\n                var buttonTextColor = override ? 'black' : 'white';\n                var themeColor = themeManager.themes[currTheme];\n                var themeFadeout = themeManager.utils.fadeoutColor(themeColor, 0.1);\n\n                var buttonStyle = 'style=\"font-weight: bold; color: ' + buttonTextColor + '; background-color: ' + themeColor + ';\" bgcolor=\"' + themeColor + '\"';\n                var headerStyle = 'style=\"background-color: ' + themeFadeout + ';\" bgcolor=\"' + themeFadeout + '\"';\n\n                function createButtonCell(caption) {\n                    return '<td ' + buttonStyle + '><font color=\"' + buttonTextColor + '\">' + caption + '</font></td>';\n                }\n\n                function createButtons(buttons, cellsCountBefore, cellsCountAfter, prefix) {\n                    var i;\n                    var str = prefix || '<tr>';\n                    for (i = 0; i < cellsCountBefore; i++) {\n                        str += '<td></td>';\n                    }\n\n                    str += buttons.reduce(function(tr, field) {\n                        return (tr += createButtonCell(field.caption));\n                    }, '');\n\n                    for (i = 0; i < cellsCountAfter; i++) {\n                        str += '<td></td>';\n                    }\n                    return str + '</tr>';\n                }\n\n                var cellsHorizontalCount = Math.max(config.dataFields.length + 1, pgridwidget.layout.pivotTable.width);\n\n                var dataFields = createButtons(config.dataFields,\n                    0,\n                    cellsHorizontalCount - config.dataFields.length,\n                    '<tr><td><font color=\"#ccc\">Data</font></td>'\n                );\n\n                var sep = '<tr><td style=\"height: 22px;\" colspan=\"' + cellsHorizontalCount + '\"></td></tr>';\n\n                var columnFields = createButtons(config.columnFields,\n                    pgridwidget.layout.rowHeaders.width,\n                    cellsHorizontalCount - (pgridwidget.layout.rowHeaders.width + config.columnFields.length)\n                );\n\n                var columnHeaders = (function() {\n                    var str = '';\n                    var j;\n                    for (var i = 0; i < pgridwidget.columns.headers.length; i++) {\n                        var currRow = pgridwidget.columns.headers[i];\n                        var rowStr = '<tr>';\n                        if (i < pgridwidget.columns.headers.length - 1) {\n                            for (j = 0; j < pgridwidget.layout.rowHeaders.width; j++) {\n                                rowStr += '<td></td>';\n                            }\n                        } else {\n                            rowStr += config.rowFields.reduce(function(tr, field) {\n                                return (tr += createButtonCell(field.caption));\n                            }, '');\n                        }\n\n                        rowStr += currRow.reduce(function(tr, header) {\n                            var value = header.type === uiheaders.HeaderType.DATA_HEADER ? header.value.caption : header.value;\n                            return (tr += '<td ' + headerStyle + ' colspan=\"' + header.hspan(true) + '\" rowspan=\"' + header.vspan(true) + '\">' + value + '</td>');\n                        }, '');\n                        str += rowStr + '</tr>';\n                    }\n                    return str;\n                }());\n\n                var rowHeadersAndDataCells = (function() {\n                    var str = '';\n                    var j;\n                    for (var i = 0; i < pgridwidget.rows.headers.length; i++) {\n                        var currRow = pgridwidget.rows.headers[i];\n                        var rowStr = '<tr>';\n                        rowStr += currRow.reduce(function(tr, header) {\n                            return (tr += '<td ' + headerStyle + ' colspan=\"' + header.hspan(true) + '\" rowspan=\"' + header.vspan(true) + '\">' + header.value + '</td>');\n                        }, '');\n                        var dataRow = pgridwidget.dataRows[i];\n                        rowStr += dataRow.reduce(function(tr, dataCell, index) {\n                            var formatFunc = config.dataFields[index = index % config.dataFields.length].formatFunc;\n                            var value = dataCell.value == null ? '' : formatFunc ? formatFunc()(dataCell.value) : dataCell.value;\n                            return (tr += '<td>' + value + '</td>');\n                        }, '');\n                        str += rowStr + '</tr>';\n                    }\n                    return str;\n                }());\n\n                function toBase64(str) {\n                    return utils.btoa(unescape(encodeURIComponent(str)));\n                }\n\n                return uriHeader +\n                    toBase64(docHeader +\n                        '<table>' + dataFields + sep + columnFields + columnHeaders + rowHeadersAndDataCells + '</table>' +\n                        docFooter);\n            };\n        }, {\n            \"./orb.themes\": 11,\n            \"./orb.ui.header\": 14,\n            \"./orb.utils\": 17\n        }],\n        7: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n\n            var filtering = module.exports = {\n                ALL: '#All#',\n                NONE: '#None#',\n                BLANK: '#Blank#\"'\n            };\n\n            filtering.expressionFilter = function(operator, term, staticValue, excludeStatic) {\n                var self = this;\n\n                this.operator = ops.get(operator);\n                this.regexpMode = false;\n                this.term = term || null;\n                if (this.term && this.operator && this.operator.regexpSupported) {\n                    if (utils.isRegExp(this.term)) {\n                        this.regexpMode = true;\n                        if (!this.term.ignoreCase) {\n                            this.term = new RegExp(this.term.source, 'i');\n                        }\n                    }\n                }\n\n                this.staticValue = staticValue;\n                this.excludeStatic = excludeStatic;\n\n                this.test = function(value) {\n                    if (utils.isArray(self.staticValue)) {\n                        var found = self.staticValue.indexOf(value) >= 0;\n                        return (self.excludeStatic && !found) || (!self.excludeStatic && found);\n                    } else if (self.term) {\n                        return self.operator.func(value, self.term);\n                    } else if (self.staticValue === true || self.staticValue === filtering.ALL) {\n                        return true;\n                    } else if (self.staticValue === false || self.staticValue === filtering.NONE) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                };\n\n                this.isAlwaysTrue = function() {\n                    return !(self.term || utils.isArray(self.staticValue) || self.staticValue === filtering.NONE || self.staticValue === false);\n                };\n            };\n\n            var ops = filtering.Operators = {\n                get: function(opname) {\n                    switch (opname) {\n                        case ops.MATCH.name:\n                            return ops.MATCH;\n                        case ops.NOTMATCH.name:\n                            return ops.NOTMATCH;\n                        case ops.EQ.name:\n                            return ops.EQ;\n                        case ops.NEQ.name:\n                            return ops.NEQ;\n                        case ops.GT.name:\n                            return ops.GT;\n                        case ops.GTE.name:\n                            return ops.GTE;\n                        case ops.LT.name:\n                            return ops.LT;\n                        case ops.LTE.name:\n                            return ops.LTE;\n                        default:\n                            return ops.NONE;\n                    }\n                },\n                NONE: null,\n                MATCH: {\n                    name: 'Matches',\n                    func: function(value, term) {\n                        if (value) {\n                            return value.toString().search(utils.isRegExp(term) ? term : new RegExp(term, 'i')) >= 0;\n                        } else {\n                            return !(!!term);\n                        }\n                    },\n                    regexpSupported: true\n                },\n                NOTMATCH: {\n                    name: 'Does Not Match',\n                    func: function(value, term) {\n                        if (value) {\n                            return value.toString().search(utils.isRegExp(term) ? term : new RegExp(term, 'i')) < 0;\n                        } else {\n                            return !!term;\n                        }\n                    },\n                    regexpSupported: true\n                },\n                EQ: {\n                    name: '=',\n                    func: function(value, term) {\n                        return value == term;\n                    },\n                    regexpSupported: false\n                },\n                NEQ: {\n                    name: '<>',\n                    func: function(value, term) {\n                        return value != term;\n                    },\n                    regexpSupported: false\n                },\n                GT: {\n                    name: '>',\n                    func: function(value, term) {\n                        return value > term;\n                    },\n                    regexpSupported: false\n                },\n                GTE: {\n                    name: '>=',\n                    func: function(value, term) {\n                        return value >= term;\n                    },\n                    regexpSupported: false\n                },\n                LT: {\n                    name: '<',\n                    func: function(value, term) {\n                        return value < term;\n                    },\n                    regexpSupported: false\n                },\n                LTE: {\n                    name: '<=',\n                    func: function(value, term) {\n                        return value <= term;\n                    },\n                    regexpSupported: false\n                }\n            };\n\n        }, {\n            \"./orb.utils\": 17\n        }],\n        8: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var configuration = _dereq_('./orb.config').config;\n            var filtering = _dereq_('./orb.filtering');\n            var query = _dereq_('./orb.query');\n            var utils = _dereq_('./orb.utils');\n\n            module.exports = function(config) {\n\n                var defaultfield = {\n                    name: '#undefined#'\n                };\n\n                var self = this;\n                var _iCache;\n\n\n                this.config = new configuration(config);\n                this.filters = self.config.getPreFilters();\n                this.filteredDataSource = self.config.dataSource;\n\n                this.rows = new axe(self, axe.Type.ROWS);\n                this.columns = new axe(self, axe.Type.COLUMNS);\n                this.dataMatrix = {};\n\n                function refresh(refreshFilters) {\n                    if (refreshFilters !== false) {\n                        refreshFilteredDataSource();\n                    }\n                    self.rows.update();\n                    self.columns.update();\n                    computeValues();\n                }\n\n                function refreshFilteredDataSource() {\n                    var filterFields = utils.ownProperties(self.filters);\n                    if (filterFields.length > 0) {\n                        self.filteredDataSource = [];\n\n                        for (var i = 0; i < self.config.dataSource.length; i++) {\n                            var row = self.config.dataSource[i];\n                            var exclude = false;\n                            for (var fi = 0; fi < filterFields.length; fi++) {\n                                var fieldname = filterFields[fi];\n                                var fieldFilter = self.filters[fieldname];\n\n                                if (fieldFilter && !fieldFilter.test(row[fieldname])) {\n                                    exclude = true;\n                                    break;\n                                }\n                            }\n                            if (!exclude) {\n                                self.filteredDataSource.push(row);\n                            }\n                        }\n                    } else {\n                        self.filteredDataSource = self.config.dataSource;\n                    }\n                }\n\n                this.moveField = function(fieldname, oldaxetype, newaxetype, position) {\n                    if (self.config.moveField(fieldname, oldaxetype, newaxetype, position)) {\n                        refresh(false);\n                        return true;\n                    }\n                    return false;\n                };\n\n                this.applyFilter = function(fieldname, operator, term, staticValue, excludeStatic) {\n                    self.filters[fieldname] = new filtering.expressionFilter(operator, term, staticValue, excludeStatic);\n                    refresh();\n                };\n\n                this.refreshData = function(data) {\n                    self.config.dataSource = data;\n                    refresh();\n                };\n\n                this.getInteractions = function(type) {\n                    return self.config.getInteractions(type) || {};\n                }\n\n                this.getFieldValues = function(field, filterFunc) {\n                    var values1 = [];\n                    var values = [];\n                    var containsBlank = false;\n                    for (var i = 0; i < self.config.dataSource.length; i++) {\n                        var row = self.config.dataSource[i];\n                        var val = row[field];\n                        if (filterFunc !== undefined) {\n                            if (filterFunc === true || (typeof filterFunc === 'function' && filterFunc(val))) {\n                                values1.push(val);\n                            }\n                        } else {\n                            if (val) {\n                                values1.push(val);\n                            } else {\n                                containsBlank = true;\n                            }\n                        }\n                    }\n                    if (values1.length > 1) {\n                        if (utils.isNumber(values1[0]) || utils.isDate(values1[0])) {\n                            values1.sort(function(a, b) {\n                                return a ? (b ? a - b : 1) : (b ? -1 : 0);\n                            });\n                        } else {\n                            values1.sort();\n                        }\n\n                        for (var vi = 0; vi < values1.length; vi++) {\n                            if (vi === 0 || values1[vi] !== values[values.length - 1]) {\n                                values.push(values1[vi]);\n                            }\n                        }\n                    } else {\n                        values = values1;\n                    }\n                    values.containsBlank = containsBlank;\n                    return values;\n                };\n\n                this.getFieldFilter = function(field) {\n                    return self.filters[field];\n                };\n\n                this.isFieldFiltered = function(field) {\n                    var filter = self.getFieldFilter(field);\n                    return filter != null && !filter.isAlwaysTrue();\n                };\n\n                this.getData = function(field, rowdim, coldim, aggregateFunc) {\n                    var value;\n                    if (rowdim && coldim) {\n\n                        var datafieldName = field || (self.config.dataFields[0] || defaultfield).name;\n                        var datafield = self.config.getDataField(datafieldName);\n\n                        if (!datafield || (aggregateFunc && datafield.aggregateFunc != aggregateFunc)) {\n                            value = self.calcAggregation(\n                                rowdim.isRoot ? null : rowdim.getRowIndexes().slice(0),\n                                coldim.isRoot ? null : coldim.getRowIndexes().slice(0), [datafieldName],\n                                aggregateFunc)[datafieldName];\n                        } else {\n                            if (self.dataMatrix[rowdim.id] && self.dataMatrix[rowdim.id][coldim.id]) {\n                                value = self.dataMatrix[rowdim.id][coldim.id][datafieldName];\n                            } else {\n                                value = null;\n                            }\n                        }\n                    }\n\n                    return value === undefined ? null : value;\n                };\n\n                this.calcAggregation = function(rowIndexes, colIndexes, fieldNames, aggregateFunc) {\n                    return computeValue(rowIndexes, colIndexes, rowIndexes, fieldNames, aggregateFunc);\n                };\n\n                this.query = query(self);\n\n                refresh();\n\n                function computeValue(rowIndexes, colIndexes, origRowIndexes, fieldNames, aggregateFunc) {\n\n                    var res = {};\n\n                    if (self.config.dataFieldsCount > 0) {\n\n                        var intersection;\n\n                        if (rowIndexes == null) {\n                            intersection = colIndexes;\n                        } else if (colIndexes == null) {\n                            intersection = rowIndexes;\n                        } else {\n                            intersection = [];\n                            for (var ri = 0; ri < rowIndexes.length; ri++) {\n                                var rowindex = rowIndexes[ri];\n                                if (rowindex >= 0) {\n                                    var colrowindex = colIndexes.indexOf(rowindex);\n                                    if (colrowindex >= 0) {\n                                        rowIndexes[ri] = 0 - (rowindex + 2);\n                                        intersection.push(rowindex);\n                                    }\n                                }\n                            }\n                        }\n\n                        var emptyIntersection = intersection && intersection.length === 0;\n                        var datasource = self.filteredDataSource;\n                        var datafield;\n                        var datafields = [];\n\n                        if (fieldNames) {\n                            for (var fieldnameIndex = 0; fieldnameIndex < fieldNames.length; fieldnameIndex++) {\n                                datafield = self.config.getDataField(fieldNames[fieldnameIndex]);\n                                if (!aggregateFunc) {\n                                    if (!datafield) {\n                                        datafield = self.config.getField(fieldNames[fieldnameIndex]);\n                                        if (datafield) {\n                                            aggregateFunc = datafield.dataSettings ? datafield.dataSettings.aggregateFunc() : datafield.aggregateFunc();\n                                        }\n                                    } else {\n                                        aggregateFunc = datafield.aggregateFunc();\n                                    }\n                                }\n\n                                if (datafield && aggregateFunc) {\n                                    datafields.push({\n                                        field: datafield,\n                                        aggregateFunc: aggregateFunc\n                                    });\n                                }\n                            }\n                        } else {\n                            for (var datafieldIndex = 0; datafieldIndex < self.config.dataFieldsCount; datafieldIndex++) {\n                                datafield = self.config.dataFields[datafieldIndex] || defaultfield;\n                                if (aggregateFunc || datafield.aggregateFunc) {\n                                    datafields.push({\n                                        field: datafield,\n                                        aggregateFunc: aggregateFunc || datafield.aggregateFunc()\n                                    });\n                                }\n                            }\n                        }\n\n                        for (var dfi = 0; dfi < datafields.length; dfi++) {\n                            datafield = datafields[dfi];\n                            // no data\n                            if (emptyIntersection) {\n                                res[datafield.field.name] = null;\n                            } else {\n                                res[datafield.field.name] = datafield.aggregateFunc(datafield.field.name, intersection || 'all', self.filteredDataSource, origRowIndexes || rowIndexes, colIndexes);\n                            }\n                        }\n                    }\n\n                    return res;\n                }\n\n                function computeRowValues(rowDim) {\n\n                    if (rowDim) {\n                        var data = {};\n                        var rid = 'r' + rowDim.id;\n\n                        // set cached row indexes for current row dimension\n                        if (_iCache[rid] === undefined) {\n                            _iCache[rid] = rowDim.isRoot ? null : (_iCache[rowDim.parent.id] || rowDim.getRowIndexes());\n                        }\n\n                        // calc grand-total cell\n                        data[self.columns.root.id] = computeValue(rowDim.isRoot ? null : _iCache[rid].slice(0), null);\n\n                        if (self.columns.dimensionsCount > 0) {\n                            var p = 0;\n                            var parents = [self.columns.root];\n\n                            while (p < parents.length) {\n                                var parent = parents[p];\n                                var rowindexes = rowDim.isRoot ?\n                                    null :\n                                    (parent.isRoot ?\n                                        _iCache[rid].slice(0) :\n                                        _iCache['c' + parent.id].slice(0));\n\n                                for (var i = 0; i < parent.values.length; i++) {\n                                    var subdim = parent.subdimvals[parent.values[i]];\n                                    var cid = 'c' + subdim.id;\n\n                                    // set cached row indexes for this column leaf dimension\n                                    if (_iCache[cid] === undefined) {\n                                        _iCache[cid] = _iCache[cid] || subdim.getRowIndexes().slice(0);\n                                    }\n\n                                    data[subdim.id] = computeValue(rowindexes, _iCache[cid], rowDim.isRoot ? null : rowDim.getRowIndexes());\n\n                                    if (!subdim.isLeaf) {\n                                        parents.push(subdim);\n                                        if (rowindexes) {\n                                            _iCache[cid] = [];\n                                            for (var ur = 0; ur < rowindexes.length; ur++) {\n                                                var vr = rowindexes[ur];\n                                                if (vr != -1 && vr < 0) {\n                                                    _iCache[cid].push(0 - (vr + 2));\n                                                    rowindexes[ur] = -1;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                _iCache['c' + parent.id] = undefined;\n                                p++;\n                            }\n                        }\n\n                        return data;\n                    }\n                }\n\n                function computeValues() {\n                    self.dataMatrix = {};\n                    _iCache = {};\n\n                    // calc grand total row\n                    self.dataMatrix[self.rows.root.id] = computeRowValues(self.rows.root);\n\n                    if (self.rows.dimensionsCount > 0) {\n                        var parents = [self.rows.root];\n                        var p = 0;\n                        var parent;\n                        while (p < parents.length) {\n                            parent = parents[p];\n                            // calc children rows\n                            for (var i = 0; i < parent.values.length; i++) {\n                                var subdim = parent.subdimvals[parent.values[i]];\n                                // calc child row\n                                self.dataMatrix[subdim.id] = computeRowValues(subdim);\n                                // if row is not a leaf, add it to parents array to process its children\n                                if (!subdim.isLeaf) {\n                                    parents.push(subdim);\n                                }\n                            }\n                            // next parent\n                            p++;\n                        }\n                    }\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.config\": 4,\n            \"./orb.filtering\": 7,\n            \"./orb.query\": 9,\n            \"./orb.utils\": 17\n        }],\n        9: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n            var axe = _dereq_('./orb.axe');\n            var aggregation = _dereq_('./orb.aggregation');\n\n            var queryBase = function(source, query, filters) {\n\n                var self = this;\n\n                this.source = source;\n                this.query = query;\n                this.filters = filters;\n\n                this.extractResult = function(aggs, options, outerArgs) {\n                    if (outerArgs.multi === true) {\n                        var res = {};\n                        for (var ai = 0; ai < options.multiFieldNames.length; ai++) {\n                            res[options.multiFieldNames[ai]] = aggs[self.getCaptionName(options.multiFieldNames[ai])];\n                        }\n                        return res;\n                    } else {\n                        return aggs[outerArgs.datafieldname];\n                    }\n                };\n\n                this.measureFunc = function(datafieldname, multi, aggregateFunc, fieldsConfig) {\n\n                    var outerArgs = {\n                        datafieldname: self.getCaptionName(datafieldname),\n                        multi: multi,\n                        aggregateFunc: aggregateFunc\n                    };\n\n                    return function(options) {\n                        options = self.cleanOptions(options, arguments, outerArgs);\n                        var aggs = self.compute(options, fieldsConfig, multi);\n                        return self.extractResult(aggs, options, outerArgs);\n                    };\n                };\n\n                this.setDefaultAggFunctions = function(param) {\n\n                    // if there is a registered field with a name or caption 'val', use 'val_'\n                    var valname = self.query.val ? 'val_' : 'val';\n                    self.query[valname] = self.measureFunc(undefined, true, undefined, param);\n\n\n                    var aggFunctions = utils.ownProperties(aggregation);\n                    for (var funcIndex = 0; funcIndex < aggFunctions.length; funcIndex++) {\n                        var funcName = aggFunctions[funcIndex];\n                        if (funcName !== 'toAggregateFunc') {\n                            self.query[funcName] = self.measureFunc(\n                                undefined,\n                                true,\n                                aggregation[funcName],\n                                param\n                            );\n                        }\n                    }\n                };\n\n            };\n\n            var pgridQuery = function(pgrid) {\n\n                queryBase.call(this, pgrid, {}, {});\n\n                var self = this;\n\n                this.getCaptionName = function(caption) {\n                    return self.source.config.captionToName(caption);\n                };\n\n                this.cleanOptions = function(options, innerArgs, outerArgs) {\n                    var opts = {\n                        fieldNames: []\n                    };\n\n                    if (outerArgs.multi === true) {\n                        if (options && typeof options === 'object') {\n                            opts.aggregateFunc = options.aggregateFunc;\n                            opts.multiFieldNames = options.fields;\n                        } else {\n                            opts.aggregateFunc = outerArgs.aggregateFunc;\n                            opts.multiFieldNames = innerArgs;\n                        }\n\n                        for (var ai = 0; ai < opts.multiFieldNames.length; ai++) {\n                            opts.fieldNames.push(self.getCaptionName(opts.multiFieldNames[ai]));\n                        }\n                    } else {\n                        opts.aggregateFunc = options;\n                        opts.fieldNames.push(outerArgs.datafieldname);\n                    }\n\n                    if (opts.aggregateFunc) {\n                        opts.aggregateFunc = aggregation.toAggregateFunc(opts.aggregateFunc);\n                    }\n\n                    return opts;\n                };\n\n                this.setup = function(parameters) {\n                    var rowFields = self.source.config.rowFields;\n                    var colFields = self.source.config.columnFields;\n                    var datafields = self.source.config.dataFields;\n                    var fIndex;\n\n                    // row fields setup\n                    for (fIndex = 0; fIndex < rowFields.length; fIndex++) {\n                        self.slice(rowFields[fIndex], axe.Type.ROWS, rowFields.length - fIndex);\n                    }\n\n                    // column fields setup\n                    for (fIndex = 0; fIndex < colFields.length; fIndex++) {\n                        self.slice(colFields[fIndex], axe.Type.COLUMNS, colFields.length - fIndex);\n                    }\n\n                    // data fields setup\n                    for (fIndex = 0; fIndex < datafields.length; fIndex++) {\n                        var df = datafields[fIndex];\n                        var dfname = df.name;\n                        var dfcaption = df.caption || dfname;\n\n                        self.query[dfname] = self.query[dfcaption] = self.measureFunc(dfname);\n                    }\n\n                    if (parameters) {\n                        for (var param in parameters) {\n                            if (parameters.hasOwnProperty(param)) {\n                                self.query[param](parameters[param]);\n                            }\n                        }\n                    }\n\n                    self.setDefaultAggFunctions();\n\n                    return self.query;\n                };\n\n                this.slice = function(field, axetype, depth) {\n                    self.query[field.name] = self.query[field.caption || field.name] = function(val) {\n                        var f = {\n                            name: field.name,\n                            val: val,\n                            depth: depth\n                        };\n                        (self.filters[axetype] = self.filters[axetype] || []).push(f);\n                        return self.query;\n                    };\n                };\n\n                function filterDimensions(upperDims, filter) {\n                    return function(dim) {\n                        return dim.value === filter.val &&\n                            (!upperDims || upperDims.some(\n                                function(upperDim) {\n                                    var parent = dim.parent;\n                                    if (parent) {\n                                        while (parent.depth < upperDim.depth) {\n                                            parent = parent.parent;\n                                        }\n                                    }\n                                    return parent === upperDim;\n                                }));\n                    };\n                }\n\n                this.applyFilters = function(axetype) {\n                    if (self.filters[axetype]) {\n                        var sortedFilters = self.filters[axetype].sort(function(f1, f2) {\n                            return f2.depth - f1.depth;\n                        });\n\n                        var currAxe = self.source[axetype === axe.Type.ROWS ? 'rows' : 'columns'];\n                        var filterIndex = 0;\n                        var filtered = null;\n                        while (filterIndex < sortedFilters.length) {\n                            var filter = sortedFilters[filterIndex];\n                            filtered = currAxe.dimensionsByDepth[filter.depth]\n                                .filter(filterDimensions(filtered, filter));\n                            filterIndex++;\n                        }\n                        return filtered;\n                    }\n                    return null;\n                };\n\n                this.compute = function(options) {\n                    var rowdims = self.applyFilters(axe.Type.ROWS) || [self.source.rows.root];\n                    var coldims = self.applyFilters(axe.Type.COLUMNS) || [self.source.columns.root];\n\n                    var aggs;\n\n                    if (rowdims.length === 1 && coldims.length === 1) {\n                        aggs = {};\n                        for (var ai = 0; ai < options.fieldNames.length; ai++) {\n                            aggs[options.fieldNames[ai]] = self.source.getData(options.fieldNames[ai], rowdims[0], coldims[0], options.aggregateFunc);\n                        }\n                    } else {\n                        var rowIndexes = [];\n                        var colIndexes = [];\n\n                        for (var rdi = 0; rdi < rowdims.length; rdi++) {\n                            rowIndexes = rowIndexes.concat(rowdims[rdi].getRowIndexes());\n                        }\n                        for (var cdi = 0; cdi < coldims.length; cdi++) {\n                            colIndexes = colIndexes.concat(coldims[cdi].getRowIndexes());\n                        }\n\n                        aggs = self.source.calcAggregation(rowIndexes, colIndexes, options.fieldNames, options.aggregateFunc);\n                    }\n\n                    return aggs;\n                };\n            };\n\n            var arrayQuery = function(array) {\n\n                queryBase.call(this, array, {}, []);\n\n                var self = this;\n                var captionToName = {};\n\n                this.setCaptionName = function(caption, name) {\n                    captionToName[caption || name] = name;\n                };\n\n                this.getCaptionName = function(caption) {\n                    return captionToName[caption] || caption;\n                };\n\n                this.cleanOptions = function(options, innerArgs, outerArgs) {\n                    var opts = {\n                        fieldNames: []\n                    };\n\n                    if (outerArgs.multi === true) {\n                        if (options && typeof options === 'object') {\n                            opts.aggregateFunc = options.aggregateFunc;\n                            opts.multiFieldNames = options.fields;\n                        } else {\n                            opts.aggregateFunc = outerArgs.aggregateFunc;\n                            opts.multiFieldNames = innerArgs;\n                        }\n\n                        for (var ai = 0; ai < opts.multiFieldNames.length; ai++) {\n                            opts.fieldNames.push(self.getCaptionName(opts.multiFieldNames[ai]));\n                        }\n                    } else {\n                        opts.aggregateFunc = options || outerArgs.aggregateFunc;\n                        opts.fieldNames.push(outerArgs.datafieldname);\n                    }\n\n                    return opts;\n                };\n\n                this.setup = function(fieldsConfig) {\n\n                    self.query.slice = function(field, val) {\n                        var f = {\n                            name: field,\n                            val: val\n                        };\n                        self.filters.push(f);\n                        return self.query;\n                    };\n\n                    if (fieldsConfig) {\n\n                        var fieldNames = utils.ownProperties(fieldsConfig);\n\n                        for (var fi = 0; fi < fieldNames.length; fi++) {\n                            var fname = fieldNames[fi];\n                            var f = fieldsConfig[fname];\n                            var fcaption = f.caption || f.name;\n                            f.name = fname;\n\n                            self.setCaptionName(fcaption, fname);\n\n                            if (f.toAggregate) {\n                                self.query[fname] = self.query[fcaption] = self.measureFunc(fname, false, f.aggregateFunc);\n                            } else {\n                                self.slice(f);\n                            }\n                        }\n                    }\n\n                    self.setDefaultAggFunctions(fieldsConfig);\n\n                    return self.query;\n                };\n\n                this.slice = function(field) {\n                    self.query[field.name] = self.query[field.caption || field.name] = function(val) {\n                        return self.query.slice(field.name, val);\n                    };\n                };\n\n                this.applyFilters = function() {\n                    var rowIndexes = [];\n\n                    for (var i = 0; i < self.source.length; i++) {\n                        var row = self.source[i];\n                        var include = true;\n                        for (var j = 0; j < self.filters.length; j++) {\n                            var filter = self.filters[j];\n                            if (row[filter.name] !== filter.val) {\n                                include = false;\n                                break;\n                            }\n                        }\n                        if (include) {\n                            rowIndexes.push(i);\n                        }\n                    }\n\n                    return rowIndexes;\n                };\n\n                this.compute = function(options, fieldsConfig, multi) {\n                    var rowIndexes = self.applyFilters();\n\n                    var aggs = {};\n\n                    for (var ai = 0; ai < options.fieldNames.length; ai++) {\n                        var datafield = options.fieldNames[ai];\n                        var aggFunc = aggregation.toAggregateFunc(\n                            multi === true ?\n                            options.aggregateFunc || (fieldsConfig && fieldsConfig[datafield] ?\n                                fieldsConfig[datafield].aggregateFunc :\n                                undefined) :\n                            options.aggregateFunc);\n\n                        aggs[datafield] = aggFunc(datafield, rowIndexes || 'all', self.source, rowIndexes, null);\n                    }\n\n                    return aggs;\n                };\n            };\n\n            module.exports = function(source, fieldsConfig) {\n                if (utils.isArray(source)) {\n                    return new arrayQuery(source).setup(fieldsConfig);\n                } else {\n                    // assume it's a pgrid\n                    return function(parameters) {\n                        return new pgridQuery(source).setup(parameters);\n                    };\n                }\n            };\n\n        }, {\n            \"./orb.aggregation\": 2,\n            \"./orb.axe\": 3,\n            \"./orb.utils\": 17\n        }],\n        10: [function(_dereq_, module, exports) {\n\n\n\n            module.exports = function() {\n                var states = {};\n\n                this.set = function(key, state) {\n                    states[key] = state;\n                };\n\n                this.get = function(key) {\n                    return states[key];\n                };\n            };\n        }, {}],\n        11: [function(_dereq_, module, exports) {\n\n            module.exports = (function() {\n\n                var currentTheme = 'blue';\n                var themeManager = {};\n\n                function isBootstrap() {\n                    return currentTheme === 'bootstrap';\n                }\n\n                themeManager.themes = {\n                    red: '#C72C48',\n                    blue: '#5bc0de',\n                    green: '#3fb618',\n                    orange: '#df691a',\n                    flower: '#A74AC7',\n                    gray: '#808080',\n                    black: '#000000',\n                    white: '#FFFFFF'\n                };\n\n                themeManager.current = function(newTheme) {\n                    if (newTheme) {\n                        currentTheme = themeManager.validateTheme(newTheme);\n                    }\n\n                    return currentTheme;\n                };\n\n                themeManager.validateTheme = function(themeName) {\n                    themeName = (themeName || '').toString().trim();\n                    if (!themeManager.themes[themeName] && themeName !== 'bootstrap') {\n                        return 'blue';\n                    } else {\n                        return themeName;\n                    }\n                };\n\n                themeManager.getPivotClasses = function() {\n                    return {\n                        container: 'orb-container orb-' + currentTheme,\n                        table: 'orb' + (isBootstrap() ? ' table' : '')\n                    };\n                };\n\n                themeManager.getButtonClasses = function() {\n                    return {\n                        pivotButton: 'fld-btn' + (isBootstrap() ? ' btn btn-default btn-xs' : ''),\n                        orbButton: 'orb-btn' + (isBootstrap() ? ' btn btn-default btn-xs' : ''),\n                        scrollBar: isBootstrap() ? ' btn btn-default btn-xs' : ''\n                    };\n                };\n\n                themeManager.getFilterClasses = function() {\n                    return {\n                        container: 'orb-' + currentTheme + ' orb fltr-cntnr'\n                    };\n                };\n\n                themeManager.getGridClasses = function() {\n                    return {\n                        table: isBootstrap() ? 'table table-condensed' : 'orb-table'\n                    };\n                };\n\n                themeManager.getDialogClasses = function(visible) {\n                    var classes = {\n                        overlay: 'orb-overlay orb-overlay-' + (visible ? 'visible' : 'hidden') + ' orb-' + currentTheme,\n                        dialog: 'orb-dialog',\n                        content: '',\n                        header: 'orb-dialog-header',\n                        title: '',\n                        body: 'orb-dialog-body'\n                    };\n\n                    if (isBootstrap()) {\n                        classes.overlay += ' modal';\n                        classes.dialog += ' modal-dialog';\n                        classes.content = 'modal-content';\n                        classes.header += ' modal-header';\n                        classes.title = 'modal-title';\n                        classes.body += ' modal-body';\n                    }\n                    return classes;\n                };\n\n                var utils = themeManager.utils = {\n                    hexToRgb: function(hex) {\n                        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n                        return result ? {\n                            r: parseInt(result[1], 16),\n                            g: parseInt(result[2], 16),\n                            b: parseInt(result[3], 16)\n                        } : null;\n                    },\n                    rgbaToHex: function(rgba) {\n                        var matches = rgba.match(/rgba\\((\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*\\)/);\n                        if (matches) {\n                            var alpah = parseFloat(matches[4]);\n                            return '#' +\n                                utils.applyAlphaAndToHex(matches[1], alpah) +\n                                utils.applyAlphaAndToHex(matches[2], alpah) +\n                                utils.applyAlphaAndToHex(matches[3], alpah);\n                        }\n                        return null;\n                    },\n                    applyAlphaAndToHex: function(value, alpha) {\n                        return (Math.floor(alpha * parseInt(value) + (1 - alpha) * 255) + 256).toString(16).substr(1, 2);\n                    },\n                    fadeoutColor: function(color, alpha) {\n                        color = utils.hexToRgb(color);\n                        return '#' +\n                            utils.applyAlphaAndToHex(color.r, alpha) +\n                            utils.applyAlphaAndToHex(color.g, alpha) +\n                            utils.applyAlphaAndToHex(color.b, alpha);\n                    }\n                };\n\n                return themeManager;\n            }());\n\n        }, {}],\n        12: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var uiheaders = _dereq_('./orb.ui.header');\n\n            module.exports = function(axeModel) {\n\n                var self = this;\n\n\n                this.axe = axeModel;\n\n\n                this.headers = [];\n\n                this.dataFieldsCount = function() {\n                    return (self.axe.pgrid.config.dataHeadersLocation === 'columns' && self.axe.type === axe.Type.COLUMNS) ||\n                        (self.axe.pgrid.config.dataHeadersLocation === 'rows' && self.axe.type === axe.Type.ROWS) ?\n                        self.axe.pgrid.config.dataFieldsCount :\n                        1;\n                };\n\n                this.isMultiDataFields = function() {\n                    return self.dataFieldsCount() > 1;\n                };\n\n                this.toggleFieldExpansion = function(field, newState) {\n                    var toToggle = [];\n                    var allExpanded = true;\n                    var hIndex;\n\n                    for (var i = 0; i < this.headers.length; i++) {\n                        for (hIndex = 0; hIndex < this.headers[i].length; hIndex++) {\n                            var header = this.headers[i][hIndex];\n                            if (header.type === uiheaders.HeaderType.SUB_TOTAL && (field == null || header.dim.field.name == field.name)) {\n                                toToggle.push(header);\n                                allExpanded = allExpanded && header.expanded;\n                            }\n                        }\n                    }\n\n                    if (newState !== undefined) {\n                        allExpanded = !newState;\n                    }\n\n                    if (toToggle.length > 0) {\n                        for (hIndex = 0; hIndex < toToggle.length; hIndex++) {\n                            if (allExpanded) {\n                                toToggle[hIndex].collapse();\n                            } else {\n                                toToggle[hIndex].expand();\n                            }\n                        }\n                        return true;\n                    }\n\n                    return false;\n                };\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.ui.header\": 14\n        }],\n        13: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var axeUi = _dereq_('./orb.ui.axe');\n            var uiheaders = _dereq_('./orb.ui.header');\n\n            module.exports = function(columnsAxe) {\n\n                var self = this;\n\n                axeUi.call(self, columnsAxe);\n\n                this.leafsHeaders = null;\n\n                this.build = function() {\n                    self.headers = [];\n\n                    if (self.axe != null) {\n                        // Fill columns layout infos\n                        if (self.axe.root.values.length > 0 || self.axe.pgrid.config.grandTotal.columnsvisible) {\n                            for (var depth = self.axe.root.depth; depth > 1; depth--) {\n                                self.headers.push([]);\n                                getUiInfo(depth, self.headers);\n                            }\n\n                            if (self.axe.pgrid.config.grandTotal.columnsvisible) {\n                                // add grandtotal header\n                                (self.headers[0] = self.headers[0] || []).push(new uiheaders.header(axe.Type.COLUMNS, uiheaders.HeaderType.GRAND_TOTAL, self.axe.root, null, self.dataFieldsCount()));\n                            }\n                        }\n\n                        if (self.headers.length === 0) {\n                            self.headers.push([new uiheaders.header(axe.Type.COLUMNS, uiheaders.HeaderType.INNER, self.axe.root, null, self.dataFieldsCount())]);\n                        }\n\n                        // generate leafs headers\n                        generateLeafsHeaders();\n                    }\n                };\n\n                function generateLeafsHeaders() {\n\n                    var leafsHeaders = [];\n\n                    function pushsubtotal(pheader) {\n                        if (pheader && pheader.dim.field.subTotal.visible) {\n                            leafsHeaders.push(pheader.subtotalHeader);\n                        }\n                    }\n\n                    if (self.headers.length > 0) {\n                        // last headers row\n                        var infos = self.headers[self.headers.length - 1];\n                        var header = infos[0];\n\n                        if (header) {\n                            var currparent,\n                                prevpar = header.parent;\n\n                            for (var i = 0; i < infos.length; i++) {\n                                header = infos[i];\n                                currparent = header.parent;\n                                // if current header parent is different than previous header parent,\n                                // add previous parent\n                                if (currparent != prevpar) {\n                                    pushsubtotal(prevpar);\n                                    if (currparent != null) {\n                                        // walk up parent hierarchy and add grand parents if different \n                                        // than current header grand parents\n                                        var grandpar = currparent.parent;\n                                        var prevgrandpar = prevpar ? prevpar.parent : null;\n                                        while (grandpar != prevgrandpar && prevgrandpar != null) {\n                                            pushsubtotal(prevgrandpar);\n                                            grandpar = grandpar ? grandpar.parent : null;\n                                            prevgrandpar = prevgrandpar ? prevgrandpar.parent : null;\n                                        }\n                                    }\n                                    // update previous parent variable\n                                    prevpar = currparent;\n                                }\n                                // push current header\n                                leafsHeaders.push(infos[i]);\n\n                                // if it's the last header, add all of its parents up to the top\n                                if (i === infos.length - 1) {\n                                    while (prevpar != null) {\n                                        pushsubtotal(prevpar);\n                                        prevpar = prevpar.parent;\n                                    }\n                                }\n                            }\n                            // grandtotal is visible for columns and if there is more than one dimension in this axe\n                            if (self.axe.pgrid.config.grandTotal.columnsvisible && self.axe.dimensionsCount > 1) {\n                                // push also grand total header\n                                leafsHeaders.push(self.headers[0][self.headers[0].length - 1]);\n                            }\n                        }\n                    }\n\n                    // add data headers if more than 1 data field and they willbe the leaf headers\n                    if (self.isMultiDataFields()) {\n                        self.leafsHeaders = [];\n                        for (var leafIndex = 0; leafIndex < leafsHeaders.length; leafIndex++) {\n                            for (var datafieldindex = 0; datafieldindex < self.dataFieldsCount(); datafieldindex++) {\n                                self.leafsHeaders.push(new uiheaders.dataHeader(self.axe.pgrid.config.dataFields[datafieldindex], leafsHeaders[leafIndex]));\n                            }\n                        }\n                        self.headers.push(self.leafsHeaders);\n                    } else {\n                        self.leafsHeaders = leafsHeaders;\n                    }\n                }\n\n                this.build();\n\n\n                function getUiInfo(depth, headers) {\n\n                    var infos = headers[headers.length - 1];\n                    var parents = self.axe.root.depth === depth ? [null] :\n                        headers[self.axe.root.depth - depth - 1].filter(function(p) {\n                            return p.type !== uiheaders.HeaderType.SUB_TOTAL;\n                        });\n\n                    for (var pi = 0; pi < parents.length; pi++) {\n\n                        var parent = parents[pi];\n                        var parentDim = parent == null ? self.axe.root : parent.dim;\n\n                        for (var di = 0; di < parentDim.values.length; di++) {\n\n                            var subvalue = parentDim.values[di];\n                            var subdim = parentDim.subdimvals[subvalue];\n\n                            var subtotalHeader;\n                            if (!subdim.isLeaf && subdim.field.subTotal.visible) {\n                                subtotalHeader = new uiheaders.header(axe.Type.COLUMNS, uiheaders.HeaderType.SUB_TOTAL, subdim, parent, self.dataFieldsCount());\n                            } else {\n                                subtotalHeader = null;\n                            }\n\n                            var header = new uiheaders.header(axe.Type.COLUMNS, null, subdim, parent, self.dataFieldsCount(), subtotalHeader);\n                            infos.push(header);\n\n                            if (!subdim.isLeaf && subdim.field.subTotal.visible) {\n                                infos.push(subtotalHeader);\n                            }\n                        }\n                    }\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.ui.axe\": 12,\n            \"./orb.ui.header\": 14\n        }],\n        14: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var state = new(_dereq_('./orb.state'))();\n\n            var HeaderType = module.exports.HeaderType = {\n                EMPTY: 1,\n                DATA_HEADER: 2,\n                DATA_VALUE: 3,\n                FIELD_BUTTON: 4,\n                INNER: 5,\n                WRAPPER: 6,\n                SUB_TOTAL: 7,\n                GRAND_TOTAL: 8,\n                getTypeName: function(headerType) {\n                    var name;\n                    switch (headerType) {\n                        case HeaderType.EMPTY:\n                            name = 'empty';\n                            break;\n                        case HeaderType.DATA_HEADER:\n                            name = 'dataHeader'\n                            break;\n                        case HeaderType.DATA_VALUE:\n                            name = 'dataValue';\n                            break;\n                        case HeaderType.FIELD_BUTTON:\n                            name = 'fieldButton';\n                            break;\n                        case HeaderType.INNER:\n                            name = 'inner';\n                            break;\n                        case HeaderType.WRAPPER:\n                            name = 'wrapper';\n                            break;\n                        case HeaderType.SUB_TOTAL:\n                            name = 'subTotal';\n                            break;\n                        case HeaderType.GRAND_TOTAL:\n                            name = 'grandTotal';\n                            break;\n                        default:\n                            name = 'other';\n                            break;\n                    }\n                    return name;\n                },\n                getHeaderClass: function(headerType, axetype) {\n                    var cssclass = axetype === axe.Type.ROWS ? 'header-row' : (axetype === axe.Type.COLUMNS ? 'header-col' : '');\n                    switch (headerType) {\n                        case HeaderType.EMPTY:\n                        case HeaderType.FIELD_BUTTON:\n                            cssclass = 'empty';\n                            break;\n                        case HeaderType.INNER:\n                            cssclass = 'header ' + cssclass;\n                            break;\n                        case HeaderType.WRAPPER:\n                            cssclass = 'header ' + cssclass;\n                            break;\n                        case HeaderType.SUB_TOTAL:\n                            cssclass = 'header header-st ' + cssclass;\n                            break;\n                        case HeaderType.GRAND_TOTAL:\n                            cssclass = 'header header-gt ' + cssclass;\n                            break;\n                    }\n\n                    return cssclass;\n                },\n                getCellClass: function(rowHeaderType, colHeaderType) {\n                    var cssclass = '';\n                    switch (rowHeaderType) {\n                        case HeaderType.GRAND_TOTAL:\n                            cssclass = 'cell-gt';\n                            break;\n                        case HeaderType.SUB_TOTAL:\n                            if (colHeaderType === HeaderType.GRAND_TOTAL) {\n                                cssclass = 'cell-gt';\n                            } else {\n                                cssclass = 'cell-st';\n                            }\n                            break;\n                        default:\n                            if (colHeaderType === HeaderType.GRAND_TOTAL) {\n                                cssclass = 'cell-gt';\n                            } else if (colHeaderType === HeaderType.SUB_TOTAL) {\n                                cssclass = 'cell-st';\n                            } else {\n                                cssclass = '';\n                            }\n                    }\n                    return cssclass;\n                }\n            };\n\n            function CellBase(options) {\n\n                this.axetype = options.axetype;\n\n                this.type = options.type;\n\n                this.typeStr = HeaderType.getTypeName(options.type);\n\n                this.template = options.template;\n\n                this.value = options.value;\n\n                this.expanded = true;\n\n                this.cssclass = options.cssclass;\n\n                this.hspan = options.hspan || function() {\n                    return 1;\n                };\n\n                this.vspan = options.vspan || function() {\n                    return 1;\n                };\n\n                this.visible = options.isvisible || function() {\n                    return true;\n                };\n\n                this.key = this.axetype + this.type + this.value;\n                this.getState = function() {\n                    return state.get(this.key);\n                };\n                this.setState = function(newState) {\n                    state.set(this.key, newState);\n                };\n            }\n\n            module.exports.header = function(axetype, headerType, dim, parent, datafieldscount, subtotalHeader) {\n\n                var self = this;\n\n                var hspan;\n                var vspan;\n                var value;\n\n                var isRowsAxe = axetype === axe.Type.ROWS;\n                headerType = headerType || (dim.depth === 1 ? HeaderType.INNER : HeaderType.WRAPPER);\n\n                switch (headerType) {\n                    case HeaderType.GRAND_TOTAL:\n                        value = 'Grand Total';\n                        hspan = isRowsAxe ? dim.depth - 1 || 1 : datafieldscount;\n                        vspan = isRowsAxe ? datafieldscount : dim.depth - 1 || 1;\n                        break;\n                    case HeaderType.SUB_TOTAL:\n                        value = dim.value;\n                        hspan = isRowsAxe ? dim.depth : datafieldscount;\n                        vspan = isRowsAxe ? datafieldscount : dim.depth;\n                        break;\n                    default:\n                        value = dim.value;\n                        hspan = isRowsAxe ? 1 : null;\n                        vspan = isRowsAxe ? null : 1;\n                        break;\n                }\n\n                CellBase.call(this, {\n                    axetype: axetype,\n                    type: headerType,\n                    template: isRowsAxe ? 'cell-template-row-header' : 'cell-template-column-header',\n                    value: value,\n                    cssclass: HeaderType.getHeaderClass(headerType, axetype),\n                    hspan: hspan != null ? function() {\n                        return hspan;\n                    } : calcSpan,\n                    vspan: vspan != null ? function() {\n                        return vspan;\n                    } : calcSpan,\n                    isvisible: isParentExpanded\n                });\n\n                this.subtotalHeader = subtotalHeader;\n                this.parent = parent;\n                this.subheaders = [];\n                this.dim = dim;\n                this.expanded = this.getState() ? this.getState().expanded : (headerType !== HeaderType.SUB_TOTAL || !dim.field.subTotal.collapsed);\n\n                this.expand = function() {\n                    self.expanded = true;\n                    this.setState({\n                        expanded: self.expanded\n                    });\n                };\n                this.collapse = function() {\n                    self.expanded = false;\n                    this.setState({\n                        expanded: self.expanded\n                    });\n                };\n\n                if (parent != null) {\n                    parent.subheaders.push(this);\n                }\n\n                function isParentExpanded() {\n                    if (self.type === HeaderType.SUB_TOTAL) {\n                        var hparent = self.parent;\n                        while (hparent != null) {\n                            if (hparent.subtotalHeader && !hparent.subtotalHeader.expanded) {\n                                return false;\n                            }\n                            hparent = hparent.parent;\n                        }\n                        return true;\n                    } else {\n\n                        var isexpanded = self.dim.isRoot || self.dim.isLeaf || !self.dim.field.subTotal.visible || self.subtotalHeader.expanded;\n                        if (!isexpanded) {\n                            return false;\n                        }\n\n                        var par = self.parent;\n                        while (par != null && (!par.dim.field.subTotal.visible || (par.subtotalHeader != null && par.subtotalHeader.expanded))) {\n                            par = par.parent;\n                        }\n                        return par == null || par.subtotalHeader == null ? isexpanded : par.subtotalHeader.expanded;\n                    }\n                }\n\n                function calcSpan(ignoreVisibility) {\n                    var tspan = 0;\n                    var subSpan;\n                    var addone = false;\n\n                    if (isRowsAxe || ignoreVisibility || self.visible()) {\n                        if (!self.dim.isLeaf) {\n                            // subdimvals 'own' properties are the set of values for this dimension\n                            if (self.subheaders.length > 0) {\n                                for (var i = 0; i < self.subheaders.length; i++) {\n                                    var subheader = self.subheaders[i];\n                                    // if its not an array\n                                    if (!subheader.dim.isLeaf) {\n                                        subSpan = isRowsAxe ? subheader.vspan() : subheader.hspan();\n                                        tspan += subSpan;\n                                        if (i === 0 && (subSpan === 0)) {\n                                            addone = true;\n                                        }\n                                    } else {\n                                        tspan += datafieldscount;\n                                    }\n                                }\n                            } else {\n                                tspan += datafieldscount;\n                            }\n                        } else {\n                            return datafieldscount;\n                        }\n                        return tspan + (addone ? 1 : 0);\n                    }\n                    return tspan;\n                }\n            };\n\n            module.exports.dataHeader = function(datafield, parent) {\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.DATA_HEADER,\n                    template: 'cell-template-dataheader',\n                    value: datafield,\n                    cssclass: HeaderType.getHeaderClass(parent.type, parent.axetype),\n                    isvisible: parent.visible\n                });\n\n                this.parent = parent;\n            };\n\n            module.exports.dataCell = function(pgrid, isvisible, rowinfo, colinfo) {\n\n                this.rowDimension = rowinfo.type === HeaderType.DATA_HEADER ? rowinfo.parent.dim : rowinfo.dim;\n                this.columnDimension = colinfo.type === HeaderType.DATA_HEADER ? colinfo.parent.dim : colinfo.dim;\n                this.rowType = rowinfo.type === HeaderType.DATA_HEADER ? rowinfo.parent.type : rowinfo.type;\n                this.colType = colinfo.type === HeaderType.DATA_HEADER ? colinfo.parent.type : colinfo.type;\n\n                this.datafield = pgrid.config.dataFieldsCount > 1 ?\n                    (pgrid.config.dataHeadersLocation === 'rows' ?\n                        rowinfo.value :\n                        colinfo.value) :\n                    pgrid.config.dataFields[0];\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.DATA_VALUE,\n                    template: 'cell-template-datavalue',\n                    value: pgrid.getData(this.datafield ? this.datafield.name : null, this.rowDimension, this.columnDimension),\n                    cssclass: 'cell ' + HeaderType.getCellClass(this.rowType, this.colType),\n                    isvisible: isvisible\n                });\n            };\n\n            module.exports.buttonCell = function(field) {\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.FIELD_BUTTON,\n                    template: 'cell-template-fieldbutton',\n                    value: field,\n                    cssclass: HeaderType.getHeaderClass(HeaderType.FIELD_BUTTON)\n                });\n            };\n\n            module.exports.emptyCell = function(hspan, vspan) {\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.EMPTY,\n                    template: 'cell-template-empty',\n                    value: null,\n                    cssclass: HeaderType.getHeaderClass(HeaderType.EMPTY),\n                    hspan: function() {\n                        return hspan;\n                    },\n                    vspan: function() {\n                        return vspan;\n                    },\n                });\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.state\": 10\n        }],\n        15: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var pgrid = _dereq_('./orb.pgrid');\n            var uiheaders = _dereq_('./orb.ui.header');\n            var uirows = _dereq_('./orb.ui.rows');\n            var uicols = _dereq_('./orb.ui.cols');\n            //var React = require('react');\n            var OrbReactComps = _dereq_('./react/orb.react.compiled');\n\n            module.exports = function(config) {\n\n                var self = this;\n                var renderElement;\n                var pivotComponent;\n                var dialog = OrbReactComps.Dialog.create();\n\n\n                this.pgrid = new pgrid(config);\n\n\n                this.rows = null;\n\n                this.columns = null;\n\n\n                this.dataRows = [];\n\n                this.layout = {\n                    rowHeaders: {\n\n                        width: null,\n\n                        height: null\n                    },\n                    columnHeaders: {\n\n                        width: null,\n\n                        height: null,\n                    },\n                    pivotTable: {\n\n                        width: null,\n\n                        height: null\n                    }\n                };\n\n                this.sort = function(axetype, field) {\n                    if (axetype === axe.Type.ROWS) {\n                        self.pgrid.rows.sort(field);\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        self.pgrid.columns.sort(field);\n                    } else {\n                        return;\n                    }\n\n                    buildUi();\n                };\n\n                this.refreshData = function(data) {\n                    self.pgrid.refreshData(data);\n                    buildUi();\n                    pivotComponent.setProps({});\n                };\n\n                this.applyFilter = function(fieldname, operator, term, staticValue, excludeStatic) {\n                    self.pgrid.applyFilter(fieldname, operator, term, staticValue, excludeStatic);\n                    buildUi();\n                };\n\n                this.moveField = function(field, oldAxeType, newAxeType, position) {\n                    if (self.pgrid.moveField(field, oldAxeType, newAxeType, position)) {\n                        buildUi();\n                        return true;\n                    }\n                    return false;\n                };\n\n                this.toggleFieldExpansion = function(axetype, field, newState) {\n                    if (axetype === axe.Type.ROWS) {\n                        return self.rows.toggleFieldExpansion(field, newState);\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        return self.columns.toggleFieldExpansion(field, newState);\n                    }\n                    return false;\n                };\n\n                this.toggleSubtotals = function(axetype) {\n                    if (self.pgrid.config.toggleSubtotals(axetype)) {\n                        buildUi();\n                        return true;\n                    }\n                    return false;\n                };\n\n                this.areSubtotalsVisible = function(axetype) {\n                    return self.pgrid.config.areSubtotalsVisible(axetype);\n                };\n\n                this.toggleGrandtotal = function(axetype) {\n                    if (self.pgrid.config.toggleGrandtotal(axetype)) {\n                        buildUi();\n                        return true;\n                    }\n                    return false;\n                };\n\n                this.isGrandtotalVisible = function(axetype) {\n                    return self.pgrid.config.isGrandtotalVisible(axetype);\n                };\n\n                this.changeTheme = function(newTheme) {\n                    pivotComponent.changeTheme(newTheme);\n                };\n\n                this.render = function(element) {\n                    renderElement = element;\n                    if (renderElement) {\n                        var pivotTableFactory = React.createFactory(OrbReactComps.PivotTable);\n                        var pivottable = pivotTableFactory({\n                            pgridwidget: self\n                        });\n\n                        pivotComponent = React.render(pivottable, element);\n                    }\n                };\n\n                this.drilldown = function(dataCell, pivotId) {\n                    if (dataCell) {\n                        var colIndexes = dataCell.columnDimension.getRowIndexes();\n                        var data = dataCell.rowDimension.getRowIndexes().filter(function(index) {\n                            return colIndexes.indexOf(index) >= 0;\n                        }).map(function(index) {\n                            return self.pgrid.filteredDataSource[index];\n                        });\n\n                        var title;\n                        if (dataCell.rowType === uiheaders.HeaderType.GRAND_TOTAL && dataCell.colType === uiheaders.HeaderType.GRAND_TOTAL) {\n                            title = 'Grand total';\n                        } else {\n                            if (dataCell.rowType === uiheaders.HeaderType.GRAND_TOTAL) {\n                                title = dataCell.columnDimension.value + '/Grand total ';\n                            } else if (dataCell.colType === uiheaders.HeaderType.GRAND_TOTAL) {\n                                title = dataCell.rowDimension.value + '/Grand total ';\n                            } else {\n                                title = dataCell.rowDimension.value + '/' + dataCell.columnDimension.value;\n                            }\n                        }\n\n                        var pivotStyle = window.getComputedStyle(pivotComponent.getDOMNode(), null);\n\n                        dialog.show({\n                            title: title,\n                            comp: {\n                                type: OrbReactComps.Grid,\n                                props: {\n                                    headers: self.pgrid.config.getDataSourceFieldCaptions(),\n                                    data: data,\n                                    theme: self.pgrid.config.theme\n                                }\n                            },\n                            theme: self.pgrid.config.theme,\n                            style: {\n                                fontFamily: pivotStyle.getPropertyValue('font-family'),\n                                fontSize: pivotStyle.getPropertyValue('font-size')\n                            }\n                        });\n                    }\n                };\n\n                buildUi();\n\n                function buildUi() {\n\n                    // build row and column headers\n                    self.rows = new uirows(self.pgrid.rows);\n                    self.columns = new uicols(self.pgrid.columns);\n\n                    var rowsHeaders = self.rows.headers;\n                    var columnsLeafHeaders = self.columns.leafsHeaders;\n\n                    // set control layout infos\t\t\n                    self.layout = {\n                        rowHeaders: {\n                            width: (self.pgrid.rows.fields.length || 1) +\n                                (self.pgrid.config.dataHeadersLocation === 'rows' && self.pgrid.config.dataFieldsCount > 1 ? 1 : 0),\n                            height: rowsHeaders.length\n                        },\n                        columnHeaders: {\n                            width: self.columns.leafsHeaders.length,\n                            height: (self.pgrid.columns.fields.length || 1) +\n                                (self.pgrid.config.dataHeadersLocation === 'columns' && self.pgrid.config.dataFieldsCount > 1 ? 1 : 0)\n                        }\n                    };\n\n                    self.layout.pivotTable = {\n                        width: self.layout.rowHeaders.width + self.layout.columnHeaders.width,\n                        height: self.layout.rowHeaders.height + self.layout.columnHeaders.height\n                    };\n\n                    var dataRows = [];\n                    var arr;\n\n                    function createVisibleFunc(rowvisible, colvisible) {\n                        return function() {\n                            return rowvisible() && colvisible();\n                        };\n                    }\n                    if (rowsHeaders.length > 0) {\n                        for (var ri = 0; ri < rowsHeaders.length; ri++) {\n                            var rowHeadersRow = rowsHeaders[ri];\n                            var rowLeafHeader = rowHeadersRow[rowHeadersRow.length - 1];\n\n                            arr = [];\n                            for (var colHeaderIndex = 0; colHeaderIndex < columnsLeafHeaders.length; colHeaderIndex++) {\n                                var columnLeafHeader = columnsLeafHeaders[colHeaderIndex];\n                                var isvisible = createVisibleFunc(rowLeafHeader.visible, columnLeafHeader.visible);\n                                arr[colHeaderIndex] = new uiheaders.dataCell(self.pgrid, isvisible, rowLeafHeader, columnLeafHeader);\n                            }\n                            dataRows.push(arr);\n                        }\n                    }\n                    self.dataRows = dataRows;\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.pgrid\": 8,\n            \"./orb.ui.cols\": 13,\n            \"./orb.ui.header\": 14,\n            \"./orb.ui.rows\": 16,\n            \"./react/orb.react.compiled\": 18\n        }],\n        16: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var axeUi = _dereq_('./orb.ui.axe');\n            var uiheaders = _dereq_('./orb.ui.header');\n\n            module.exports = function(rowsAxe) {\n\n                var self = this;\n\n                axeUi.call(self, rowsAxe);\n\n                this.build = function() {\n                    var headers = [];\n                    var grandtotalHeader;\n\n                    if (self.axe != null) {\n                        if (self.axe.root.values.length > 0 || self.axe.pgrid.config.grandTotal.rowsvisible) {\n                            headers.push([]);\n\n                            // Fill Rows layout infos\n                            getUiInfo(headers, self.axe.root);\n\n                            if (self.axe.pgrid.config.grandTotal.rowsvisible) {\n                                var lastrow = headers[headers.length - 1];\n                                grandtotalHeader = new uiheaders.header(axe.Type.ROWS, uiheaders.HeaderType.GRAND_TOTAL, self.axe.root, null, self.dataFieldsCount());\n                                if (lastrow.length === 0) {\n                                    lastrow.push(grandtotalHeader);\n                                } else {\n                                    headers.push([grandtotalHeader]);\n                                }\n                            }\n                        }\n\n                        if (headers.length === 0) {\n                            headers.push([grandtotalHeader = new uiheaders.header(axe.Type.ROWS, uiheaders.HeaderType.INNER, self.axe.root, null, self.dataFieldsCount())]);\n                        }\n\n                        if (grandtotalHeader) {\n                            // add grand-total data headers if more than 1 data field and they will be the leaf headers\n                            addDataHeaders(headers, grandtotalHeader);\n                        }\n                    }\n                    self.headers = headers;\n                };\n\n                this.build();\n\n                function addDataHeaders(infos, parent) {\n                    if (self.isMultiDataFields()) {\n                        var lastInfosArray = infos[infos.length - 1];\n                        for (var datafieldindex = 0; datafieldindex < self.dataFieldsCount(); datafieldindex++) {\n                            lastInfosArray.push(new uiheaders.dataHeader(self.axe.pgrid.config.dataFields[datafieldindex], parent));\n                            if (datafieldindex < self.dataFieldsCount() - 1) {\n                                infos.push((lastInfosArray = []));\n                            }\n                        }\n                    }\n                }\n\n\n                function getUiInfo(infos, dimension) {\n                    if (dimension.values.length > 0) {\n\n                        var infosMaxIndex = infos.length - 1;\n                        var lastInfosArray = infos[infosMaxIndex];\n                        var parent = lastInfosArray.length > 0 ? lastInfosArray[lastInfosArray.length - 1] : null;\n\n                        for (var valIndex = 0; valIndex < dimension.values.length; valIndex++) {\n                            var subvalue = dimension.values[valIndex];\n                            var subdim = dimension.subdimvals[subvalue];\n\n                            var subTotalHeader;\n                            if (!subdim.isLeaf && subdim.field.subTotal.visible) {\n                                subTotalHeader = new uiheaders.header(axe.Type.ROWS, uiheaders.HeaderType.SUB_TOTAL, subdim, parent, self.dataFieldsCount());\n                            } else {\n                                subTotalHeader = null;\n                            }\n\n                            var newHeader = new uiheaders.header(axe.Type.ROWS, null, subdim, parent, self.dataFieldsCount(), subTotalHeader);\n\n                            if (valIndex > 0) {\n                                infos.push((lastInfosArray = []));\n                            }\n\n                            lastInfosArray.push(newHeader);\n\n                            if (!subdim.isLeaf) {\n                                getUiInfo(infos, subdim);\n                                if (subdim.field.subTotal.visible) {\n                                    infos.push([subTotalHeader]);\n\n                                    // add sub-total data headers if more than 1 data field and they will be the leaf headers\n                                    addDataHeaders(infos, subTotalHeader);\n                                }\n                            } else {\n                                // add data headers if more than 1 data field and they will be the leaf headers\n                                addDataHeaders(infos, newHeader);\n                            }\n                        }\n                    }\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.ui.axe\": 12,\n            \"./orb.ui.header\": 14\n        }],\n        17: [function(_dereq_, module, exports) {\n            (function(global) {\n\n                module.exports = {\n\n                    ns: function(identifier, parent) {\n                        var parts = identifier.split('.');\n                        var i = 0;\n                        parent = parent || window;\n                        while (i < parts.length) {\n                            parent[parts[i]] = parent[parts[i]] || {};\n                            parent = parent[parts[i]];\n                            i++;\n                        }\n                        return parent;\n                    },\n\n                    ownProperties: function(obj) {\n                        var arr = [];\n                        for (var prop in obj) {\n                            if (obj.hasOwnProperty(prop)) {\n                                arr.push(prop);\n                            }\n                        }\n                        return arr;\n                    },\n\n                    isArray: function(obj) {\n                        return Object.prototype.toString.apply(obj) === '[object Array]';\n                    },\n\n                    isNumber: function(obj) {\n                        return Object.prototype.toString.apply(obj) === '[object Number]';\n                    },\n\n                    isDate: function(obj) {\n                        return Object.prototype.toString.apply(obj) === '[object Date]';\n                    },\n\n                    isString: function(obj) {\n                        return Object.prototype.toString.apply(obj) === '[object String]';\n                    },\n\n                    isRegExp: function(obj) {\n                        return Object.prototype.toString.apply(obj) === '[object RegExp]';\n                    },\n\n                    escapeRegex: function(re) {\n                        return re.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n                    },\n\n                    findInArray: function(array, predicate) {\n                        if (this.isArray(array) && predicate) {\n                            for (var i = 0; i < array.length; i++) {\n                                var item = array[i];\n                                if (predicate(item)) {\n                                    return item;\n                                }\n                            }\n                        }\n                        return undefined;\n                    },\n\n                    jsonStringify: function(obj, censorKeywords) {\n                        function censor(key, value) {\n                            return censorKeywords && censorKeywords.indexOf(key) > -1 ? undefined : value;\n                        }\n                        return JSON.stringify(obj, censor, 2);\n                    }\n                };\n\n                // from: https://github.com/davidchambers/Base64.js\n\n                (function(object) {\n                    var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n                    function InvalidCharacterError(message) {\n                        this.message = message;\n                    }\n                    InvalidCharacterError.prototype = new Error();\n                    InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n                    // encoder\n                    // [https://gist.github.com/999166] by [https://github.com/nignag]\n                    object.btoa = global && global.btoa ? function(str) {\n                            return global.btoa(str);\n                        } :\n                        function(input) {\n                            var str = String(input);\n                            for (\n                                // initialize result and counter\n                                var block, charCode, idx = 0, map = chars, output = '';\n                                // if the next str index does not exist:\n                                // change the mapping table to \"=\"\n                                // check if d has no fractional digits\n                                str.charAt(idx | 0) || (map = '=', idx % 1);\n                                // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n                                output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n                            ) {\n                                charCode = str.charCodeAt(idx += 3 / 4);\n                                if (charCode > 0xFF) {\n                                    throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n                                }\n                                block = block << 8 | charCode;\n                            }\n                            return output;\n                        };\n\n                    // decoder\n                    // [https://gist.github.com/1020396] by [https://github.com/atk]\n                    object.atob = global && global.atob ? function(str) {\n                            return global.atob(str);\n                        } :\n                        function(input) {\n                            var str = String(input).replace(/=+$/, '');\n                            if (str.length % 4 == 1) {\n                                throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n                            }\n                            for (\n                                // initialize result and counters\n                                var bc = 0, bs, buffer, idx = 0, output = '';\n                                // get next character\n                                (buffer = str.charAt(idx++));\n                                // character found in table? initialize bit storage and add its ascii value;\n                                ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n                                    // and if not first of each 4 characters,\n                                    // convert the first 8 bits to one ascii character\n                                    bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n                            ) {\n                                // try to find character in table (0-63, not found => -1)\n                                buffer = chars.indexOf(buffer);\n                            }\n                            return output;\n                        };\n                }(module.exports));\n\n            }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n        }, {}],\n        18: [function(_dereq_, module, exports) {\n\n            var react = typeof window === 'undefined' ? _dereq_('react') : window.React;\n            var utils = _dereq_('../orb.utils');\n            var axe = _dereq_('../orb.axe');\n            var uiheaders = _dereq_('../orb.ui.header');\n            var filtering = _dereq_('../orb.filtering');\n            var reactUtils = _dereq_('./orb.react.utils');\n\n            var extraCol = 0;\n            var comps = module.exports;\n\n            var pivotId = 1;\n            var themeChangeCallbacks = {};\n\n            module.exports.PivotTable = react.createClass({\n                id: pivotId++,\n                pgrid: null,\n                pgridwidget: null,\n                getInitialState: function() {\n                    comps.DragManager.init(this);\n\n                    themeChangeCallbacks[this.id] = [];\n                    this.registerThemeChanged(this.updateClasses);\n\n                    this.pgridwidget = this.props.pgridwidget;\n                    this.pgrid = this.pgridwidget.pgrid;\n                    return {};\n                },\n                sort: function(axetype, field) {\n                    this.pgridwidget.sort(axetype, field);\n                    this.setProps({});\n                },\n                moveButton: function(button, newAxeType, position) {\n                    if (this.pgridwidget.moveField(button.props.field.name, button.props.axetype, newAxeType, position)) {\n                        this.setProps({});\n                    }\n                },\n                toggleFieldExpansion: function(axetype, field, newState) {\n                    if (this.pgridwidget.toggleFieldExpansion(axetype, field, newState)) {\n                        this.setProps({});\n                    }\n                },\n                toggleSubtotals: function(axetype) {\n                    if (this.pgridwidget.toggleSubtotals(axetype)) {\n                        this.setProps({});\n                    }\n                },\n                toggleGrandtotal: function(axetype) {\n                    if (this.pgridwidget.toggleGrandtotal(axetype)) {\n                        this.setProps({});\n                    }\n                },\n                expandRow: function(cell) {\n                    cell.expand();\n                    this.setProps({});\n                },\n                collapseRow: function(cell) {\n                    cell.subtotalHeader.collapse();\n                    this.setProps({});\n                },\n                applyFilter: function(fieldname, operator, term, staticValue, excludeStatic) {\n                    this.pgridwidget.applyFilter(fieldname, operator, term, staticValue, excludeStatic);\n                    this.setProps({});\n                },\n                registerThemeChanged: function(compCallback) {\n                    if (compCallback) {\n                        themeChangeCallbacks[this.id].push(compCallback);\n                    }\n                },\n                unregisterThemeChanged: function(compCallback) {\n                    var i;\n                    if (compCallback && (i = themeChangeCallbacks[this.id].indexOf(compCallback)) >= 0) {\n                        themeChangeCallbacks[this.id].splice(i, 1);\n                    }\n                },\n                changeTheme: function(newTheme) {\n                    if (this.pgridwidget.pgrid.config.setTheme(newTheme)) {\n                        // notify self/sub-components of the theme change\n                        for (var i = 0; i < themeChangeCallbacks[this.id].length; i++) {\n                            themeChangeCallbacks[this.id][i]();\n                        }\n                    }\n                },\n                updateClasses: function() {\n                    var thisnode = this.getDOMNode();\n                    var classes = this.pgridwidget.pgrid.config.theme.getPivotClasses();\n                    thisnode.className = classes.container;\n                    thisnode.children[1].className = classes.table;\n                },\n                componentDidUpdate: function() {\n                    this.synchronizeCompsWidths();\n                },\n                componentDidMount: function() {\n                    var dataCellsContainerNode = this.refs.dataCellsContainer.getDOMNode();\n                    var dataCellsTableNode = this.refs.dataCellsTable.getDOMNode();\n                    var colHeadersContainerNode = this.refs.colHeadersContainer.getDOMNode();\n                    var rowHeadersContainerNode = this.refs.rowHeadersContainer.getDOMNode();\n\n                    this.refs.horizontalScrollBar.setScrollClient(dataCellsContainerNode, function(scrollPercent) {\n                        var scrollAmount = Math.ceil(\n                            scrollPercent * (\n                                reactUtils.getSize(dataCellsTableNode).width -\n                                reactUtils.getSize(dataCellsContainerNode).width\n                            )\n                        );\n                        colHeadersContainerNode.scrollLeft = scrollAmount;\n                        dataCellsContainerNode.scrollLeft = scrollAmount;\n                    });\n\n                    this.refs.verticalScrollBar.setScrollClient(dataCellsContainerNode, function(scrollPercent) {\n                        var scrollAmount = Math.ceil(\n                            scrollPercent * (\n                                reactUtils.getSize(dataCellsTableNode).height -\n                                reactUtils.getSize(dataCellsContainerNode).height\n                            )\n                        );\n                        rowHeadersContainerNode.scrollTop = scrollAmount;\n                        dataCellsContainerNode.scrollTop = scrollAmount;\n                    });\n\n                    this.synchronizeCompsWidths();\n                },\n                onWheel: function(e) {\n                    var elem;\n                    var scrollbar;\n                    var amount;\n\n                    if (e.currentTarget == (elem = this.refs.colHeadersContainer.getDOMNode())) {\n                        scrollbar = this.refs.horizontalScrollBar;\n                        amount = e.deltaX || e.deltaY;\n                    } else if ((e.currentTarget == (elem = this.refs.rowHeadersContainer.getDOMNode())) ||\n                        (e.currentTarget == (elem = this.refs.dataCellsContainer.getDOMNode()))) {\n                        scrollbar = this.refs.verticalScrollBar;\n                        amount = e.deltaY;\n                    }\n\n                    if (scrollbar && scrollbar.scroll(amount, e.deltaMode)) {\n                        e.stopPropagation();\n                        e.preventDefault();\n                    }\n                },\n                synchronizeCompsWidths: function() {\n                    var self = this;\n\n                    var pivotWrapperTable = self.refs.pivotWrapperTable.getDOMNode();\n\n                    var nodes = (function() {\n                        var nds = {};\n                        ['pivotContainer', 'dataCellsContainer', 'dataCellsTable', 'upperbuttonsRow', 'columnbuttonsRow',\n\n                            'colHeadersContainer', 'rowHeadersContainer', 'rowButtonsContainer',\n                            'toolbar', 'horizontalScrollBar', 'verticalScrollBar'\n                        ].forEach(function(refname) {\n                            if (self.refs[refname]) {\n                                nds[refname] = {\n                                    node: self.refs[refname].getDOMNode()\n                                };\n                                nds[refname].size = reactUtils.getSize(nds[refname].node);\n                            }\n                        });\n                        return nds;\n                    }());\n\n                    // colHeadersTable\n                    nodes.colHeadersTable = {\n                        node: nodes.colHeadersContainer.node.children[0]\n                    };\n                    nodes.colHeadersTable.size = reactUtils.getSize(nodes.colHeadersTable.node);\n\n                    // rowHeadersTable\n                    nodes.rowHeadersTable = {\n                        node: nodes.rowHeadersContainer.node.children[0]\n                    };\n                    nodes.rowHeadersTable.size = reactUtils.getSize(nodes.rowHeadersTable.node);\n\n                    // get row buttons container width\n                    var rowButtonsContainerWidth = reactUtils.getSize(nodes.rowButtonsContainer.node.children[0]).width;\n\n                    // get array of dataCellsTable column widths\n                    getAllColumnsWidth(nodes.dataCellsTable);\n                    // get array of colHeadersTable column widths\n                    getAllColumnsWidth(nodes.colHeadersTable);\n                    // get array of rowHeadersTable column widths\n                    getAllColumnsWidth(nodes.rowHeadersTable);\n\n                    // get the array of max widths between dataCellsTable and colHeadersTable\n                    var dataCellsTableMaxWidthArray = [];\n                    var dataCellsTableMaxWidth = 0;\n\n                    for (var i = 0; i < nodes.dataCellsTable.widthArray.length; i++) {\n                        var mxwidth = Math.max(nodes.dataCellsTable.widthArray[i], nodes.colHeadersTable.widthArray[i]);\n                        dataCellsTableMaxWidthArray.push(mxwidth);\n                        dataCellsTableMaxWidth += mxwidth;\n                    }\n\n                    var rowHeadersTableWidth = Math.max(nodes.rowHeadersTable.size.width, rowButtonsContainerWidth, 67);\n                    var rowDiff = rowHeadersTableWidth - nodes.rowHeadersTable.size.width;\n                    if (rowDiff > 0) {\n                        nodes.rowHeadersTable.size.width += rowDiff;\n                        nodes.rowHeadersTable.widthArray[nodes.rowHeadersTable.widthArray.length - 1] += rowDiff;\n                    }\n\n                    // Set dataCellsTable cells widths according to the computed dataCellsTableMaxWidthArray\n                    reactUtils.updateTableColGroup(nodes.dataCellsTable.node, dataCellsTableMaxWidthArray);\n\n                    // Set colHeadersTable cells widths according to the computed dataCellsTableMaxWidthArray\n                    reactUtils.updateTableColGroup(nodes.colHeadersTable.node, dataCellsTableMaxWidthArray);\n\n                    // Set rowHeadersTable cells widths\n                    reactUtils.updateTableColGroup(nodes.rowHeadersTable.node, nodes.rowHeadersTable.widthArray);\n\n                    nodes.dataCellsTable.node.style.width = dataCellsTableMaxWidth + 'px';\n                    nodes.colHeadersTable.node.style.width = dataCellsTableMaxWidth + 'px';\n                    nodes.rowHeadersTable.node.style.width = rowHeadersTableWidth + 'px';\n\n                    var dataCellsContainerWidth = Math.min(\n                        dataCellsTableMaxWidth + 1,\n                        nodes.pivotContainer.size.width - rowHeadersTableWidth - nodes.verticalScrollBar.size.width);\n\n                    // Adjust data cells container width\n                    nodes.dataCellsContainer.node.style.width = dataCellsContainerWidth + 'px';\n                    nodes.colHeadersContainer.node.style.width = dataCellsContainerWidth + 'px';\n\n                    var pivotContainerHeight = this.pgridwidget.pgrid.config.height;\n\n                    if (pivotContainerHeight) {\n                        // Adjust data cells container height\n                        var dataCellsTableHeight = Math.ceil(Math.min(\n                            pivotContainerHeight -\n                            (nodes.toolbar ? nodes.toolbar.size.height + 17 : 0) -\n                            nodes.upperbuttonsRow.size.height -\n                            nodes.columnbuttonsRow.size.height -\n                            nodes.colHeadersTable.size.height -\n                            nodes.horizontalScrollBar.size.height,\n                            nodes.dataCellsTable.size.height));\n\n                        nodes.dataCellsContainer.node.style.height = dataCellsTableHeight + 'px';\n                        nodes.rowHeadersContainer.node.style.height = dataCellsTableHeight + 'px';\n                    }\n\n                    reactUtils.updateTableColGroup(\n                        pivotWrapperTable, [\n                            rowHeadersTableWidth,\n                            dataCellsContainerWidth,\n                            nodes.verticalScrollBar.size.width,\n                            Math.max(\n                                nodes.pivotContainer.size.width - (\n                                    rowHeadersTableWidth +\n                                    dataCellsContainerWidth +\n                                    nodes.verticalScrollBar.size.width),\n                                0)\n                        ]);\n\n                    this.refs.horizontalScrollBar.refresh();\n                    this.refs.verticalScrollBar.refresh();\n                },\n                render: function() {\n\n                    var self = this;\n\n                    var config = this.pgridwidget.pgrid.config;\n                    var Toolbar = comps.Toolbar;\n                    var PivotTableUpperButtons = comps.PivotTableUpperButtons;\n                    var PivotTableColumnButtons = comps.PivotTableColumnButtons;\n                    var PivotTableRowButtons = comps.PivotTableRowButtons;\n                    var PivotTableRowHeaders = comps.PivotTableRowHeaders;\n                    var PivotTableColumnHeaders = comps.PivotTableColumnHeaders;\n                    var PivotTableDataCells = comps.PivotTableDataCells;\n                    var HorizontalScrollBar = comps.HorizontalScrollBar;\n                    var VerticalScrollBar = comps.VerticalScrollBar;\n\n                    var classes = config.theme.getPivotClasses();\n\n                    var tblStyle = {};\n                    if (config.width) {\n                        tblStyle.width = config.width;\n                    }\n                    if (config.height) {\n                        tblStyle.height = config.height;\n                    }\n\n                    return (\n                        React.createElement(\"div\", {\n                                className: classes.container,\n                                style: tblStyle,\n                                ref: \"pivotContainer\"\n                            },\n                            config.toolbar && config.toolbar.visible ? React.createElement(\"div\", {\n                                    ref: \"toolbar\",\n                                    className: \"orb-toolbar\"\n                                },\n                                React.createElement(Toolbar, {\n                                    pivotTableComp: self\n                                })\n                            ) : null,\n                            React.createElement(\"table\", {\n                                    id: 'tbl-' + self.id,\n                                    ref: \"pivotWrapperTable\",\n                                    className: classes.table,\n                                    style: {\n                                        tableLayout: 'fixed'\n                                    }\n                                },\n                                React.createElement(\"colgroup\", null,\n                                    React.createElement(\"col\", {\n                                        ref: \"column1\"\n                                    }),\n                                    React.createElement(\"col\", {\n                                        ref: \"column2\"\n                                    }),\n                                    React.createElement(\"col\", {\n                                        ref: \"column3\"\n                                    }),\n                                    React.createElement(\"col\", {\n                                        ref: \"column4\"\n                                    })\n                                ),\n                                React.createElement(\"tbody\", null,\n                                    React.createElement(\"tr\", {\n                                            ref: \"upperbuttonsRow\"\n                                        },\n                                        React.createElement(\"td\", {\n                                                colSpan: \"4\"\n                                            },\n                                            React.createElement(PivotTableUpperButtons, {\n                                                pivotTableComp: self\n                                            })\n                                        )\n                                    ),\n                                    React.createElement(\"tr\", {\n                                            ref: \"columnbuttonsRow\"\n                                        },\n                                        React.createElement(\"td\", null),\n                                        React.createElement(\"td\", {\n                                                style: {\n                                                    padding: '11px 4px !important'\n                                                }\n                                            },\n                                            React.createElement(PivotTableColumnButtons, {\n                                                pivotTableComp: self\n                                            })\n                                        ),\n                                        React.createElement(\"td\", {\n                                            colSpan: \"2\"\n                                        })\n                                    ),\n                                    React.createElement(\"tr\", null,\n                                        React.createElement(\"td\", {\n                                                style: {\n                                                    position: 'relative'\n                                                }\n                                            },\n                                            React.createElement(PivotTableRowButtons, {\n                                                pivotTableComp: self,\n                                                ref: \"rowButtonsContainer\"\n                                            })\n                                        ),\n                                        React.createElement(\"td\", null,\n                                            React.createElement(PivotTableColumnHeaders, {\n                                                pivotTableComp: self,\n                                                ref: \"colHeadersContainer\"\n                                            })\n                                        ),\n                                        React.createElement(\"td\", {\n                                            colSpan: \"2\"\n                                        })\n                                    ),\n                                    React.createElement(\"tr\", null,\n                                        React.createElement(\"td\", null,\n                                            React.createElement(PivotTableRowHeaders, {\n                                                pivotTableComp: self,\n                                                ref: \"rowHeadersContainer\"\n                                            })\n                                        ),\n                                        React.createElement(\"td\", null,\n                                            React.createElement(\"div\", {\n                                                    className: \"inner-table-container data-cntr\",\n                                                    ref: \"dataCellsContainer\",\n                                                    onWheel: this.onWheel\n                                                },\n                                                React.createElement(PivotTableDataCells, {\n                                                    pivotTableComp: self,\n                                                    ref: \"dataCellsTable\"\n                                                })\n                                            )\n                                        ),\n                                        React.createElement(\"td\", null,\n                                            React.createElement(VerticalScrollBar, {\n                                                pivotTableComp: self,\n                                                ref: \"verticalScrollBar\"\n                                            })\n                                        ),\n                                        React.createElement(\"td\", null)\n                                    ),\n                                    React.createElement(\"tr\", null,\n                                        React.createElement(\"td\", null),\n                                        React.createElement(\"td\", null,\n                                            React.createElement(HorizontalScrollBar, {\n                                                pivotTableComp: self,\n                                                ref: \"horizontalScrollBar\"\n                                            })\n                                        ),\n                                        React.createElement(\"td\", {\n                                            colSpan: \"2\"\n                                        })\n                                    )\n                                )\n                            ),\n                            React.createElement(\"div\", {\n                                className: \"orb-overlay orb-overlay-hidden\",\n                                id: 'drilldialog' + self.id\n                            })\n                        )\n                    );\n                }\n            });\n\n            function getAllColumnsWidth(tblObject) {\n                if (tblObject && tblObject.node) {\n\n                    var tbl = tblObject.node;\n                    var widthArray = [];\n\n                    for (var rowIndex = 0; rowIndex < tbl.rows.length; rowIndex++) {\n                        // current row\n                        var currRow = tbl.rows[rowIndex];\n                        // reset widthArray index\n                        var arrayIndex = 0;\n                        var currWidth = null;\n\n                        // get the width of each cell within current row\n                        for (var cellIndex = 0; cellIndex < currRow.cells.length; cellIndex++) {\n                            // current cell\n                            var currCell = currRow.cells[cellIndex];\n\n                            if (currCell.__orb._visible) {\n                                // cell width\n                                //var cellwidth = Math.ceil(reactUtils.getSize(currCell.children[0]).width/currCell.colSpan);\n                                var cellwidth = Math.ceil((currCell.__orb._textWidth / currCell.__orb._colSpan) + currCell.__orb._paddingLeft + currCell.__orb._paddingRight + currCell.__orb._borderLeftWidth + currCell.__orb._borderRightWidth);\n                                // whether current cell spans vertically to the last row\n                                var rowsSpan = currCell.__orb._rowSpan > 1 && currCell.__orb._rowSpan >= tbl.rows.length - rowIndex;\n\n                                // if current cell spans over more than one column, add its width (its) 'colSpan' number of times\n                                for (var cspan = 0; cspan < currCell.__orb._colSpan; cspan++) {\n                                    // If cell span over more than 1 row: insert its width into widthArray at arrayIndex\n                                    // Else: either expand widthArray if necessary or replace the width if its smaller than current cell width\n\n                                    currWidth = widthArray[arrayIndex];\n                                    // skip inhibited widths (width that belongs to an upper cell than spans vertically to current row)\n                                    while (currWidth && currWidth.inhibit > 0) {\n                                        currWidth.inhibit--;\n                                        arrayIndex++;\n                                        currWidth = widthArray[arrayIndex];\n                                    }\n\n                                    if (widthArray.length - 1 < arrayIndex) {\n                                        widthArray.push({\n                                            width: cellwidth\n                                        });\n                                    } else if (cellwidth > widthArray[arrayIndex].width) {\n                                        widthArray[arrayIndex].width = cellwidth;\n                                    }\n\n                                    widthArray[arrayIndex].inhibit = currCell.__orb._rowSpan - 1;\n\n                                    // increment widthArray index\n                                    arrayIndex++;\n                                }\n                            }\n                        }\n\n                        // decrement inhibited state of all widths unsed in widthArray (not reached by current row cells)\n                        currWidth = widthArray[arrayIndex];\n                        while (currWidth) {\n                            if (currWidth.inhibit > 0) {\n                                currWidth.inhibit--;\n                            }\n                            arrayIndex++;\n                            currWidth = widthArray[arrayIndex];\n                        }\n                    }\n\n                    // set widthArray to the tblObject\n                    tblObject.size.width = 0;\n                    tblObject.widthArray = widthArray.map(function(item, index) {\n                        tblObject.size.width += item.width;\n                        return item.width;\n                    });\n                }\n            }\n\n            function setTableWidths(tblObject, newWidthArray) {\n                if (tblObject && tblObject.node) {\n\n                    // reset table width\n                    (tblObject.size = (tblObject.size || {})).width = 0;\n\n                    var tbl = tblObject.node;\n\n                    // for each row, set its cells width\n                    for (var rowIndex = 0; rowIndex < tbl.rows.length; rowIndex++) {\n\n                        // current row\n                        var currRow = tbl.rows[rowIndex];\n                        // index in newWidthArray\n                        var arrayIndex = 0;\n                        var currWidth = null;\n\n                        // set width of each cell\n                        for (var cellIndex = 0; cellIndex < currRow.cells.length; cellIndex++) {\n\n                            // current cell\n                            var currCell = currRow.cells[cellIndex];\n                            if (currCell.__orb._visible) {\n                                // cell width\n                                var newCellWidth = 0;\n                                // whether current cell spans vertically more than 1 row\n                                var rowsSpan = currCell.__orb._rowSpan > 1 && rowIndex < tbl.rows.length - 1;\n\n                                // current cell width is the sum of (its) \"colspan\" items in newWidthArray starting at 'arrayIndex'\n                                // 'arrayIndex' should be incremented by an amount equal to current cell 'colspan' but should also skip 'inhibited' cells\n                                for (var cspan = 0; cspan < currCell.__orb._colSpan; cspan++) {\n                                    currWidth = newWidthArray[arrayIndex];\n                                    // skip inhibited widths (width that belongs to an upper cell than spans vertically to current row)\n                                    while (currWidth && currWidth.inhibit > 0) {\n                                        currWidth.inhibit--;\n                                        arrayIndex++;\n                                        currWidth = newWidthArray[arrayIndex];\n                                    }\n\n                                    if (currWidth) {\n                                        // add width of cells participating in the span\n                                        newCellWidth += currWidth.width;\n                                        // if current cell spans vertically more than 1 row, mark its width as inhibited for all cells participating in this span\n                                        if (rowsSpan) {\n                                            currWidth.inhibit = currCell.__orb._rowSpan - 1;\n                                        }\n\n                                        // advance newWidthArray index\n                                        arrayIndex++;\n                                    }\n                                }\n\n                                currCell.children[0].style.width = newCellWidth + 'px';\n\n                                // set table width (only in first iteration)\n                                if (rowIndex === 0) {\n                                    var outerCellWidth = 0;\n                                    if (currCell.__orb) {\n                                        outerCellWidth = currCell.__orb._colSpan * (Math.ceil(currCell.__orb._paddingLeft + currCell.__orb._paddingRight + currCell.__orb._borderLeftWidth + currCell.__orb._borderRightWidth));\n                                    }\n                                    tblObject.size.width += newCellWidth + outerCellWidth;\n                                }\n                            }\n                        }\n\n                        // decrement inhibited state of all widths unsed in newWidthArray (not reached by current row cells)\n                        currWidth = newWidthArray[arrayIndex];\n                        while (currWidth) {\n                            if (currWidth.inhibit > 0) {\n                                currWidth.inhibit--;\n                            }\n                            arrayIndex++;\n                            currWidth = newWidthArray[arrayIndex];\n                        }\n                    }\n                }\n            }\n\n            function clearTableWidths(tbl) {\n                if (tbl) {\n                    for (var rowIndex = 0; rowIndex < tbl.rows.length; rowIndex++) {\n                        var row = tbl.rows[rowIndex];\n                        for (var cellIndex = 0; cellIndex < row.cells.length; cellIndex++) {\n                            row.cells[cellIndex].children[0].style.width = '';\n                        }\n                    }\n                    tbl.style.width = '';\n                }\n            }\n\n            module.exports.PivotRow = react.createClass({\n                render: function() {\n                    var self = this;\n                    var PivotCell = comps.PivotCell;\n\n                    var lastCellIndex = this.props.row.length - 1;\n                    var cell0 = this.props.row[0];\n                    var leftmostCellFound = false;\n                    var layoutInfos = self.props.layoutInfos;\n                    var cells;\n\n                    var rowstyle = {};\n\n                    var istopmost = false;\n\n                    cells = this.props.row.map(function(cell, index) {\n\n                        var isleftmost = false;\n\n                        // If current cells are column/data headers and left most cell is not found yet\n                        // and last row left most cell does not span vertically over the current one and current one is visible \n                        // then mark IT as the left most cell\n                        if (cell.visible() && layoutInfos) {\n                            if (cell.dim) {\n                                if ((cell.dim.isRoot && layoutInfos.topMostCells[cell.dim.depth - 1] === undefined) || (!cell.dim.isRoot && layoutInfos.topMostCells[cell.dim.depth] === undefined && (cell.dim.parent.isRoot || layoutInfos.topMostCells[cell.dim.depth + 1] === cell.dim.parent))) {\n                                    istopmost = true;\n                                    layoutInfos.topMostCells[cell.dim.depth] = cell.dim;\n                                }\n                            } else if (!layoutInfos.topMostCells['0']) {\n                                istopmost = layoutInfos.topMostCells['0'] = true;\n                            }\n\n                            if (!leftmostCellFound && (self.props.axetype === axe.Type.DATA || self.props.axetype === axe.Type.COLUMNS) &&\n                                layoutInfos.lastLeftMostCellVSpan === 0) {\n\n                                isleftmost = leftmostCellFound = true;\n                                layoutInfos.lastLeftMostCellVSpan = cell.vspan() - 1;\n                            }\n                        }\n\n                        return React.createElement(PivotCell, {\n                            key: index,\n                            cell: cell,\n                            leftmost: isleftmost,\n                            topmost: istopmost,\n                            pivotTableComp: self.props.pivotTableComp\n                        });\n                    });\n\n                    // decrement lastLeftMostCellVSpan\n                    if (layoutInfos && layoutInfos.lastLeftMostCellVSpan > 0 && !leftmostCellFound) {\n                        layoutInfos.lastLeftMostCellVSpan--;\n                    }\n\n                    return (\n                        React.createElement(\"tr\", {\n                                style: rowstyle\n                            },\n                            cells\n                        )\n                    );\n                }\n            });\n\n            var _paddingLeft = null;\n            var _borderLeft = null;\n\n            var interactionMap = {\n                'onHover': ['mouseenter', 'mouseleave']\n            }\n\n            module.exports.PivotCell = react.createClass({\n                expand: function() {\n                    this.props.pivotTableComp.expandRow(this.props.cell);\n                },\n                collapse: function() {\n                    this.props.pivotTableComp.collapseRow(this.props.cell);\n                },\n                getCellInteractionEventNames: function() {\n                    var pgrid = this.props.pivotTableComp.pgrid,\n                        interactions = pgrid.getInteractions(this.props.cell.typeStr);\n\n                    var names = [];\n                    for (var key in interactions) {\n                        var fn = interactions[key];\n                        var eventNames = interactionMap[key];\n                        for (var idx in eventNames) {\n                            var evtName = eventNames[idx];\n                            names.push([evtName, fn]);\n                        }\n                    }\n                    return names;\n                },\n                updateCellInfos: function() {\n                    var node = this.getDOMNode();\n                    var cell = this.props.cell;\n                    node.__orb = node.__orb || {};\n\n                    if (!cell.visible()) {\n\n                        node.__orb._visible = false;\n\n                    } else {\n                        var cellContentNode = this.refs.cellContent.getDOMNode();\n\n                        var text = node.textContent;\n                        var propList = [];\n                        var retPaddingLeft = _paddingLeft == null;\n                        var retBorderLeft = !this.props.leftmost && _borderLeft == null;\n\n                        if (retPaddingLeft) {\n                            propList.push('padding-left');\n                        }\n\n                        if (retBorderLeft) {\n                            propList.push('border-left-width');\n                        }\n\n                        if (propList.length > 0) {\n                            var nodeStyle = reactUtils.getStyle(node, propList, true);\n\n                            if (retPaddingLeft) {\n                                _paddingLeft = parseFloat(nodeStyle[0]);\n                            }\n\n                            if (retBorderLeft) {\n                                _borderLeft = parseFloat(nodeStyle[retPaddingLeft ? 1 : 0]);\n                            }\n                        }\n\n                        reactUtils.removeClass(node, 'cell-hidden');\n\n                        node.__orb._visible = true;\n                        node.__orb._textWidth = reactUtils.getSize(cellContentNode).width;\n                        node.__orb._colSpan = this.props.cell.hspan(true) || 1;\n                        node.__orb._rowSpan = this.props.cell.vspan(true) || 1;\n                        node.__orb._paddingLeft = _paddingLeft;\n                        node.__orb._paddingRight = _paddingLeft;\n                        node.__orb._borderLeftWidth = this.props.leftmost ? 0 : _borderLeft;\n                        node.__orb._borderRightWidth = 0;\n                    }\n                },\n                handleInteraction: function(fn) {\n                    return function(evt) {\n                        fn.call(this, this.props.cell, evt);\n                    }.bind(this);\n                },\n                componentDidMount: function() {\n                    // Support interactions\n                    var pgrid = this.props.pivotTableComp.pgrid,\n                        interactions = pgrid.getInteractions(this.props.cell.typeStr);\n\n                    var el = this.refs.cell.getDOMNode();\n                    var self = this;\n\n                    if (interactions.onInit)\n                        setTimeout(function() {\n                            interactions.onInit.call(self, el, self.props.cell);\n                        });\n\n                    var interactionNames = this.getCellInteractionEventNames();\n\n                    for (var evtIdx in interactionNames) {\n                        var evt = interactionNames[evtIdx];\n                        el.addEventListener(evt[0], this.handleInteraction(evt[1]), false);\n                    }\n\n                    this.updateCellInfos();\n                },\n                componentWillUnmount: function() {\n                    var el = this.refs.cell.getDOMNode();\n\n                    // Remove interactions\n                    var interactionNames = this.getCellInteractionEventNames();\n                    for (var evtIdx in interactionNames) {\n                        var evt = interactionNames[evtIdx];\n                        el.removeEventListener(evt[0], this.handleInteraction(evt[1]), false);\n                    }\n                },\n                componentDidUpdate: function() {\n                    this.updateCellInfos();\n                },\n                shouldComponentUpdate: function(nextProps, nextState) {\n                    if (nextProps.cell && nextProps.cell == this.props.cell && !this._latestVisibleState && !nextProps.cell.visible()) {\n                        return false;\n                    }\n                    return true;\n                },\n                _latestVisibleState: false,\n                render: function() {\n                    var self = this;\n                    var cell = this.props.cell;\n                    var divcontent = [];\n                    var value;\n                    var cellClick;\n                    var headerPushed = false;\n\n                    this._latestVisibleState = cell.visible();\n\n                    switch (cell.template) {\n                        case 'cell-template-row-header':\n                        case 'cell-template-column-header':\n                            var isWrapper = cell.type === uiheaders.HeaderType.WRAPPER && cell.dim.field.subTotal.visible && cell.dim.field.subTotal.collapsible;\n                            var isSubtotal = cell.type === uiheaders.HeaderType.SUB_TOTAL && !cell.expanded;\n                            if (isWrapper || isSubtotal) {\n                                headerPushed = true;\n\n                                divcontent.push(React.createElement(\"table\", {\n                                        key: \"header-value\",\n                                        ref: \"cellContent\"\n                                    },\n                                    React.createElement(\"tbody\", null,\n                                        React.createElement(\"tr\", null, React.createElement(\"td\", {\n                                                className: \"orb-tgl-btn\"\n                                            }, React.createElement(\"div\", {\n                                                className: 'orb-tgl-btn-' + (isWrapper ? 'down' : 'right'),\n                                                onClick: (isWrapper ? this.collapse : this.expand)\n                                            })),\n                                            React.createElement(\"td\", {\n                                                className: \"hdr-val\"\n                                            }, React.createElement(\"div\", {\n                                                dangerouslySetInnerHTML: {\n                                                    __html: cell.value || '&#160;'\n                                                }\n                                            })))\n                                    )));\n                            } else {\n                                value = (cell.value || '&#160;') + (cell.type === uiheaders.HeaderType.SUB_TOTAL ? ' Total' : '');\n                            }\n                            break;\n                        case 'cell-template-dataheader':\n                            value = cell.value.caption;\n                            break;\n                        case 'cell-template-datavalue':\n                            value = (cell.datafield && cell.datafield.formatFunc) ? cell.datafield.formatFunc()(cell.value) : cell.value;\n                            cellClick = function() {\n                                self.props.pivotTableComp.pgridwidget.drilldown(cell, self.props.pivotTableComp.id);\n                            };\n                            break;\n                        default:\n                            break;\n                    }\n\n                    if (!headerPushed) {\n                        var headerClassName;\n                        switch (cell.template) {\n                            case 'cell-template-datavalue':\n                                headerClassName = 'cell-data';\n                                break;\n                            default:\n                                if (cell.template != 'cell-template-dataheader' && cell.type !== uiheaders.HeaderType.GRAND_TOTAL) {\n                                    headerClassName = 'hdr-val';\n                                }\n                        }\n                        divcontent.push(React.createElement(\"div\", {\n                            key: \"cell-value\",\n                            ref: \"cellContent\",\n                            className: headerClassName\n                        }, React.createElement(\"div\", {\n                            dangerouslySetInnerHTML: {\n                                __html: value || '&#160;'\n                            }\n                        })));\n                    }\n\n                    return React.createElement(\"td\", {\n                            className: getClassname(this.props),\n                            onDoubleClick: cellClick,\n                            ref: 'cell',\n                            colSpan: cell.hspan(),\n                            rowSpan: cell.vspan()\n                        },\n                        React.createElement(\"div\", null,\n                            divcontent\n                        )\n                    );\n                }\n            });\n\n            function getClassname(compProps) {\n                var cell = compProps.cell;\n                var classname = cell.cssclass;\n                var isEmpty = cell.template === 'cell-template-empty';\n\n                if (!cell.visible()) {\n                    classname += ' cell-hidden';\n                }\n\n                if (cell.type === uiheaders.HeaderType.SUB_TOTAL && cell.expanded) {\n                    classname += ' header-st-exp';\n                }\n\n                if (cell.type === uiheaders.HeaderType.GRAND_TOTAL) {\n                    if (cell.dim.depth === 1) {\n                        classname += ' header-nofields';\n                    } else if (cell.dim.depth > 2) {\n                        classname += ' header-gt-exp';\n                    }\n                }\n\n                if (compProps.leftmost) {\n                    classname += ' ' + (cell.template === 'cell-template-datavalue' ? 'cell' : 'header') + '-leftmost';\n                }\n\n                if (compProps.topmost) {\n                    classname += ' cell-topmost';\n                }\n\n                return classname;\n            }\n\n            var dragManager = module.exports.DragManager = (function() {\n\n                var _pivotComp = null;\n\n                var _currDragElement = null;\n                var _currDropTarget = null;\n                var _currDropIndicator = null;\n\n                var _dragNode = null;\n                var _dropTargets = [];\n                var _dropIndicators = [];\n\n                function doElementsOverlap(elem1Rect, elem2Rect) {\n                    return !(elem1Rect.right < elem2Rect.left ||\n                        elem1Rect.left > elem2Rect.right ||\n                        elem1Rect.bottom < elem2Rect.top ||\n                        elem1Rect.top > elem2Rect.bottom);\n                }\n\n                function setCurrDropTarget(dropTarget, callback) {\n                    if (_currDropTarget) {\n                        signalDragEnd(_currDropTarget, function() {\n                            _currDropTarget = dropTarget;\n                            signalDragOver(dropTarget, callback);\n                        });\n                    } else {\n                        _currDropTarget = dropTarget;\n                        signalDragOver(dropTarget, callback);\n                    }\n                }\n\n                function setCurrDropIndicator(dropIndicator) {\n                    if (_currDropIndicator) {\n                        signalDragEnd(_currDropIndicator, function() {\n                            _currDropIndicator = dropIndicator;\n                            signalDragOver(dropIndicator);\n                        });\n                    } else {\n                        _currDropIndicator = dropIndicator;\n                        signalDragOver(dropIndicator);\n                    }\n                }\n\n                function signalDragOver(target, callback) {\n                    if (target && target.onDragOver) {\n                        target.onDragOver(callback);\n                    } else if (callback) {\n                        callback();\n                    }\n                }\n\n                function signalDragEnd(target, callback) {\n                    if (target && target.onDragEnd) {\n                        target.onDragEnd(callback);\n                    } else if (callback) {\n                        callback();\n                    }\n                }\n\n                function getDropTarget() {\n                    return reactUtils.forEach(_dropTargets, function(target) {\n                        if (target.component.state.isover) {\n                            return target;\n                        }\n                    }, true);\n                }\n\n                function getDropIndicator() {\n                    return reactUtils.forEach(_dropIndicators, function(indicator) {\n                        if (indicator.component.state.isover) {\n                            return indicator;\n                        }\n                    }, true);\n                }\n\n                var _initialized = false;\n\n                return {\n                    init: function(pivotComp) {\n                        _initialized = true;\n                        _pivotComp = pivotComp;\n                    },\n                    setDragElement: function(elem) {\n\n                        var prevDragElement = _currDragElement;\n                        _currDragElement = elem;\n                        if (_currDragElement != prevDragElement) {\n                            if (elem == null) {\n\n                                if (_currDropTarget) {\n                                    var position = _currDropIndicator != null ? _currDropIndicator.position : null;\n                                    _pivotComp.moveButton(prevDragElement, _currDropTarget.component.props.axetype, position);\n                                }\n\n                                _dragNode = null;\n                                setCurrDropTarget(null);\n                                setCurrDropIndicator(null);\n\n                            } else {\n                                _dragNode = _currDragElement.getDOMNode();\n                            }\n                        }\n                    },\n                    registerTarget: function(target, axetype, dragOverHandler, dargEndHandler) {\n                        _dropTargets.push({\n                            component: target,\n                            axetype: axetype,\n                            onDragOver: dragOverHandler,\n                            onDragEnd: dargEndHandler\n                        });\n                    },\n                    unregisterTarget: function(target) {\n                        var tindex;\n                        for (var i = 0; i < _dropTargets.length; i++) {\n                            if (_dropTargets[i].component == target) {\n                                tindex = i;\n                                break;\n                            }\n                        }\n                        if (tindex != null) {\n                            _dropTargets.splice(tindex, 1);\n                        }\n                    },\n                    registerIndicator: function(indicator, axetype, position, dragOverHandler, dargEndHandler) {\n                        _dropIndicators.push({\n                            component: indicator,\n                            axetype: axetype,\n                            position: position,\n                            onDragOver: dragOverHandler,\n                            onDragEnd: dargEndHandler\n                        });\n                    },\n                    unregisterIndicator: function(indicator) {\n                        var iindex;\n                        for (var i = 0; i < _dropIndicators.length; i++) {\n                            if (_dropIndicators[i].component == indicator) {\n                                iindex = i;\n                                break;\n                            }\n                        }\n                        if (iindex != null) {\n                            _dropIndicators.splice(iindex, 1);\n                        }\n                    },\n                    elementMoved: function() {\n                        if (_currDragElement != null) {\n                            var dragNodeRect = _dragNode.getBoundingClientRect();\n                            var foundTarget;\n\n                            reactUtils.forEach(_dropTargets, function(target) {\n                                if (!foundTarget) {\n                                    var tnodeRect = target.component.getDOMNode().getBoundingClientRect();\n                                    var isOverlap = doElementsOverlap(dragNodeRect, tnodeRect);\n                                    if (isOverlap) {\n                                        foundTarget = target;\n                                        return;\n                                    }\n                                }\n                            }, true);\n\n                            if (foundTarget) {\n                                setCurrDropTarget(foundTarget, function() {\n                                    var foundIndicator = null;\n\n                                    reactUtils.forEach(_dropIndicators, function(indicator, index) {\n                                        if (!foundIndicator) {\n                                            var elementOwnIndicator = indicator.component.props.axetype === _currDragElement.props.axetype &&\n                                                indicator.component.props.position === _currDragElement.props.position;\n\n                                            var targetIndicator = indicator.component.props.axetype === foundTarget.component.props.axetype;\n                                            if (targetIndicator && !elementOwnIndicator) {\n                                                var tnodeRect = indicator.component.getDOMNode().getBoundingClientRect();\n                                                var isOverlap = doElementsOverlap(dragNodeRect, tnodeRect);\n                                                if (isOverlap) {\n                                                    foundIndicator = indicator;\n                                                    return;\n                                                }\n                                            }\n                                        }\n                                    });\n\n                                    if (!foundIndicator) {\n                                        var axeIndicators = _dropIndicators.filter(function(indicator) {\n                                            return indicator.component.props.axetype === foundTarget.component.props.axetype;\n                                        });\n                                        if (axeIndicators.length > 0) {\n                                            foundIndicator = axeIndicators[axeIndicators.length - 1];\n                                        }\n                                    }\n                                    setCurrDropIndicator(foundIndicator);\n                                });\n                            }\n                        }\n                    }\n                };\n            }());\n\n            module.exports.DropIndicator = react.createClass({\n                displayName: 'DropIndicator',\n                getInitialState: function() {\n                    dragManager.registerIndicator(this, this.props.axetype, this.props.position, this.onDragOver, this.onDragEnd);\n                    return {\n                        isover: false\n                    };\n                },\n                componentWillUnmount: function() {\n                    dragManager.unregisterIndicator(this);\n                },\n                onDragOver: function(callback) {\n                    if (this.isMounted()) {\n                        this.setState({\n                            isover: true\n                        }, callback);\n                    } else if (callback) {\n                        callback();\n                    }\n                },\n                onDragEnd: function(callback) {\n                    if (this.isMounted()) {\n                        this.setState({\n                            isover: false\n                        }, callback);\n                    } else if (callback) {\n                        callback();\n                    }\n                },\n                render: function() {\n                    var classname = 'drp-indic';\n\n                    if (this.props.isFirst) {\n                        classname += ' drp-indic-first';\n                    }\n\n                    if (this.props.isLast) {\n                        classname += ' drp-indic-last';\n                    }\n\n                    var style = {};\n                    if (this.state.isover) {\n                        classname += ' drp-indic-over';\n                    }\n\n                    return React.createElement(\"div\", {\n                        style: style,\n                        className: classname\n                    });\n                }\n            });\n\n            var dtid = 0;\n\n            module.exports.DropTarget = react.createClass({\n                getInitialState: function() {\n                    this.dtid = ++dtid;\n                    return {\n                        isover: false\n                    };\n                },\n                componentDidMount: function() {\n                    dragManager.registerTarget(this, this.props.axetype, this.onDragOver, this.onDragEnd);\n                },\n                componentWillUnmount: function() {\n                    dragManager.unregisterTarget(this);\n                },\n                onDragOver: function(callback) {\n                    if (this.isMounted()) {\n                        this.setState({\n                            isover: true\n                        }, callback);\n                    } else if (callback) {\n                        callback();\n                    }\n                },\n                onDragEnd: function(callback) {\n                    if (this.isMounted()) {\n                        this.setState({\n                            isover: false\n                        }, callback);\n                    } else if (callback) {\n                        callback();\n                    }\n                },\n                render: function() {\n                    var self = this;\n                    var DropIndicator = module.exports.DropIndicator;\n\n                    var buttons = this.props.buttons.map(function(button, index) {\n                        if (index < self.props.buttons.length - 1) {\n                            return [\n                                React.createElement(\"td\", null, React.createElement(DropIndicator, {\n                                    isFirst: index === 0,\n                                    position: index,\n                                    axetype: self.props.axetype\n                                })),\n                                React.createElement(\"td\", null, button)\n                            ];\n                        } else {\n                            return [\n                                React.createElement(\"td\", null, React.createElement(DropIndicator, {\n                                    isFirst: index === 0,\n                                    position: index,\n                                    axetype: self.props.axetype\n                                })),\n                                React.createElement(\"td\", null, button),\n                                React.createElement(\"td\", null, React.createElement(DropIndicator, {\n                                    isLast: true,\n                                    position: null,\n                                    axetype: self.props.axetype\n                                }))\n                            ];\n                        }\n                    });\n\n                    var style = self.props.axetype === axe.Type.ROWS ? {\n                        position: 'absolute',\n                        left: 0,\n                        bottom: 11\n                    } : null;\n\n                    return React.createElement(\"div\", {\n                            className: 'drp-trgt' + (this.state.isover ? ' drp-trgt-over' : '') + (buttons.length === 0 ? ' drp-trgt-empty' : ''),\n                            style: style\n                        },\n                        React.createElement(\"table\", null,\n                            React.createElement(\"tbody\", null,\n                                React.createElement(\"tr\", null,\n                                    buttons\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n\n            var pbid = 0;\n\n            module.exports.PivotButton = react.createClass({\n                displayName: 'PivotButton',\n                getInitialState: function() {\n                    this.pbid = ++pbid;\n\n                    // initial state, all zero.\n                    return {\n                        pos: {\n                            x: 0,\n                            y: 0\n                        },\n                        startpos: {\n                            x: 0,\n                            y: 0\n                        },\n                        mousedown: false,\n                        dragging: false\n                    };\n                },\n                onFilterMouseDown: function(e) {\n                    // left mouse button only\n                    if (e.button !== 0) return;\n\n                    var filterButton = this.refs.filterButton.getDOMNode();\n                    var filterButtonPos = reactUtils.getOffset(filterButton);\n                    var filterContainer = document.createElement('div');\n\n                    var filterPanelFactory = React.createFactory(comps.FilterPanel);\n                    var filterPanel = filterPanelFactory({\n                        field: this.props.field.name,\n                        pivotTableComp: this.props.pivotTableComp\n                    });\n\n                    filterContainer.className = this.props.pivotTableComp.pgrid.config.theme.getFilterClasses().container;\n                    filterContainer.style.top = filterButtonPos.y + 'px';\n                    filterContainer.style.left = filterButtonPos.x + 'px';\n                    document.body.appendChild(filterContainer);\n\n                    React.render(filterPanel, filterContainer);\n\n                    // prevent event bubbling (to prevent text selection while dragging for example)\n                    e.stopPropagation();\n                    e.preventDefault();\n                },\n                componentDidUpdate: function() {\n                    if (this.props.pivotTableComp.pgrid.config.canMoveFields) {\n                        if (!this.state.mousedown) {\n                            // mouse not down, don't care about mouse up/move events.\n                            dragManager.setDragElement(null);\n                            document.removeEventListener('mousemove', this.onMouseMove);\n                        } else if (this.state.mousedown) {\n                            // mouse down, interested by mouse up/move events.\n                            dragManager.setDragElement(this);\n                            document.addEventListener('mousemove', this.onMouseMove);\n                        }\n                    }\n                },\n                componentDidMount: function() {\n                    this.props.pivotTableComp.registerThemeChanged(this.updateClasses);\n                },\n                componentWillUnmount: function() {\n                    this.props.pivotTableComp.unregisterThemeChanged(this.updateClasses);\n                    document.removeEventListener('mousemove', this.onMouseMove);\n                },\n                onMouseDown: function(e) {\n                    // drag/sort with left mouse button\n                    if (e.button !== 0) return;\n\n                    if (e.ctrlKey) {\n                        this.props.pivotTableComp.toggleFieldExpansion(this.props.axetype, this.props.field);\n                    } else {\n\n                        var thispos = reactUtils.getOffset(this.getDOMNode());\n\n                        // inform mousedown, save start pos\n                        this.setState({\n                            mousedown: true,\n                            mouseoffset: {\n                                x: thispos.x - e.pageX,\n                                y: thispos.y - e.pageY,\n                            },\n                            startpos: {\n                                x: e.pageX,\n                                y: e.pageY\n                            }\n                        });\n                    }\n\n                    // prevent event bubbling (to prevent text selection while dragging for example)\n                    e.stopPropagation();\n                    e.preventDefault();\n                },\n                onMouseUp: function(e) {\n\n                    var isdragged = this.state.dragging;\n\n                    this.setState({\n                        mousedown: false,\n                        dragging: false,\n                        size: null,\n                        pos: {\n                            x: 0,\n                            y: 0\n                        }\n                    });\n\n                    if (!e.ctrlKey && !isdragged) {\n                        // if button was not dragged, proceed as a click\n                        this.props.pivotTableComp.sort(this.props.axetype, this.props.field);\n                    }\n                },\n                onMouseMove: function(e) {\n                    // if the mouse is not down while moving, return (no drag)\n                    if (!this.props.pivotTableComp.pgrid.config.canMoveFields || !this.state.mousedown) return;\n\n                    var size = null;\n                    if (!this.state.dragging) {\n                        size = reactUtils.getSize(this.getDOMNode());\n                    } else {\n                        size = this.state.size;\n                    }\n\n                    var newpos = {\n                        x: e.pageX + this.state.mouseoffset.x,\n                        y: e.pageY + this.state.mouseoffset.y\n                    };\n\n                    this.setState({\n                        dragging: true,\n                        size: size,\n                        pos: newpos\n                    });\n\n                    dragManager.elementMoved();\n\n                    e.stopPropagation();\n                    e.preventDefault();\n                },\n                updateClasses: function() {\n                    this.getDOMNode().className = this.props.pivotTableComp.pgrid.config.theme.getButtonClasses().pivotButton;\n                },\n                render: function() {\n                    var self = this;\n                    var divstyle = {\n                        left: self.state.pos.x + 'px',\n                        top: self.state.pos.y + 'px',\n                        position: self.state.dragging ? 'fixed' : '',\n                        zIndex: 101\n                    };\n\n                    if (self.state.size) {\n                        divstyle.width = self.state.size.width + 'px';\n                    }\n\n                    var sortDirectionClass = self.props.field.sort.order === 'asc' ?\n                        'sort-asc' :\n                        //' \\u2191' :\n                        (self.props.field.sort.order === 'desc' ?\n                            'sort-desc' :\n                            //' \\u2193' :\n                            '');\n                    var filterClass = (self.state.dragging ? '' : 'fltr-btn') + (this.props.pivotTableComp.pgrid.isFieldFiltered(this.props.field.name) ? ' fltr-btn-active' : '');\n                    var fieldAggFunc = '';\n                    if (self.props.axetype === axe.Type.DATA) {\n                        fieldAggFunc = React.createElement(\"small\", null, ' (' + self.props.field.aggregateFuncName + ')');\n                    }\n\n                    return React.createElement(\"div\", {\n                            key: self.props.field.name,\n                            className: this.props.pivotTableComp.pgrid.config.theme.getButtonClasses().pivotButton,\n                            onMouseDown: this.onMouseDown,\n                            onMouseUp: this.onMouseUp,\n                            style: divstyle\n                        },\n                        React.createElement(\"table\", null,\n                            React.createElement(\"tbody\", null,\n                                React.createElement(\"tr\", null,\n                                    React.createElement(\"td\", {\n                                        className: \"caption\"\n                                    }, self.props.field.caption, fieldAggFunc),\n                                    React.createElement(\"td\", null, React.createElement(\"div\", {\n                                        className: 'sort-indicator ' + sortDirectionClass\n                                    })),\n                                    React.createElement(\"td\", {\n                                            className: \"filter\"\n                                        },\n                                        React.createElement(\"div\", {\n                                            ref: \"filterButton\",\n                                            className: filterClass,\n                                            onMouseDown: self.state.dragging ? null : this.onFilterMouseDown\n                                        })\n                                    )\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n\n            module.exports.PivotTableUpperButtons = react.createClass({\n                render: function() {\n                    var self = this;\n                    var PivotButton = comps.PivotButton;\n                    var DropTarget = comps.DropTarget;\n\n                    var config = this.props.pivotTableComp.pgridwidget.pgrid.config;\n\n                    var fieldsDropTarget;\n                    if (config.canMoveFields) {\n                        var fieldsButtons = config.availablefields().map(function(field, index) {\n                            return React.createElement(PivotButton, {\n                                key: field.name,\n                                field: field,\n                                axetype: null,\n                                position: index,\n                                pivotTableComp: self.props.pivotTableComp\n                            });\n                        });\n                        fieldsDropTarget = React.createElement(\"tr\", null,\n                            React.createElement(\"td\", {\n                                    className: \"flds-grp-cap av-flds text-muted\"\n                                },\n                                React.createElement(\"div\", null, \"Fields\")\n                            ),\n                            React.createElement(\"td\", {\n                                    className: \"av-flds\"\n                                },\n                                React.createElement(DropTarget, {\n                                    buttons: fieldsButtons,\n                                    axetype: null\n                                })\n                            )\n                        );\n                    } else {\n                        fieldsDropTarget = null;\n                    }\n\n                    var dataButtons = config.dataFields.map(function(field, index) {\n                        return React.createElement(PivotButton, {\n                            key: field.name,\n                            field: field,\n                            axetype: axe.Type.DATA,\n                            position: index,\n                            pivotTableComp: self.props.pivotTableComp\n                        });\n                    });\n\n                    var dataDropTarget = React.createElement(\"tr\", null,\n                        React.createElement(\"td\", {\n                                className: \"flds-grp-cap text-muted\"\n                            },\n                            React.createElement(\"div\", null, \"Data\")\n                        ),\n                        React.createElement(\"td\", {\n                                className: \"empty\"\n                            },\n                            React.createElement(DropTarget, {\n                                buttons: dataButtons,\n                                axetype: axe.Type.DATA\n                            })\n                        )\n                    );\n\n                    return React.createElement(\"table\", {\n                            className: \"inner-table upper-buttons\"\n                        },\n                        React.createElement(\"tbody\", null,\n                            fieldsDropTarget,\n                            dataDropTarget\n                        )\n                    );\n                }\n            });\n\n            module.exports.PivotTableColumnButtons = react.createClass({\n                render: function() {\n                    var self = this;\n                    var PivotButton = comps.PivotButton;\n                    var DropTarget = comps.DropTarget;\n\n                    var config = this.props.pivotTableComp.pgridwidget.pgrid.config;\n\n                    var columnButtons = config.columnFields.map(function(field, index) {\n                        return React.createElement(PivotButton, {\n                            key: field.name,\n                            field: field,\n                            axetype: axe.Type.COLUMNS,\n                            position: index,\n                            pivotTableComp: self.props.pivotTableComp\n                        });\n                    });\n\n                    return React.createElement(DropTarget, {\n                        buttons: columnButtons,\n                        axetype: axe.Type.COLUMNS\n                    });\n                }\n            });\n\n            module.exports.PivotTableRowButtons = react.createClass({\n                render: function() {\n                    var self = this;\n                    var PivotButton = comps.PivotButton;\n                    var DropTarget = comps.DropTarget;\n\n                    var config = this.props.pivotTableComp.pgridwidget.pgrid.config;\n\n                    var rowButtons = config.rowFields.map(function(field, index) {\n                        return React.createElement(PivotButton, {\n                            key: field.name,\n                            field: field,\n                            axetype: axe.Type.ROWS,\n                            position: index,\n                            pivotTableComp: self.props.pivotTableComp\n                        });\n                    });\n\n                    return React.createElement(DropTarget, {\n                        buttons: rowButtons,\n                        axetype: axe.Type.ROWS\n                    });\n                }\n            });\n\n            module.exports.PivotTableColumnHeaders = react.createClass({\n                render: function() {\n                    var self = this;\n                    var PivotRow = comps.PivotRow;\n                    var pgridwidget = this.props.pivotTableComp.pgridwidget;\n                    var cntrClass = pgridwidget.columns.headers.length === 0 ? '' : ' columns-cntr';\n\n                    var layoutInfos = {\n                        lastLeftMostCellVSpan: 0,\n                        topMostCells: {}\n                    };\n\n                    var columnHeaders = pgridwidget.columns.headers.map(function(headerRow, index) {\n                        return React.createElement(PivotRow, {\n                            key: index,\n                            row: headerRow,\n                            axetype: axe.Type.COLUMNS,\n                            pivotTableComp: self.props.pivotTableComp,\n                            layoutInfos: layoutInfos\n                        });\n                    });\n\n                    return React.createElement(\"div\", {\n                            className: 'inner-table-container' + cntrClass,\n                            ref: \"colHeadersContainer\",\n                            onWheel: this.props.pivotTableComp.onWheel\n                        },\n                        React.createElement(\"table\", {\n                                className: \"inner-table\"\n                            },\n                            React.createElement(\"colgroup\", null),\n                            React.createElement(\"tbody\", null,\n                                columnHeaders\n                            )\n                        )\n                    );\n                }\n            });\n\n            module.exports.PivotTableRowHeaders = react.createClass({\n                setColGroup: function(widths) {\n                    var node = this.getDOMNode();\n                    var colGroupNode = this.refs.colgroup.getDOMNode();\n                    node.style.tableLayout = 'auto';\n\n                    colGroupNode.innerHTML = '';\n                    for (var i = 0; i < widths.length; i++) {\n                        var col = document.createElement('col');\n                        col.style.width = (widths[i] + 8) + 'px';\n                        colGroupNode.appendChild(col);\n                    }\n                    node.style.tableLayout = 'fixed';\n                },\n                render: function() {\n                    var self = this;\n                    var PivotRow = comps.PivotRow;\n                    var pgridwidget = this.props.pivotTableComp.pgridwidget;\n                    var cntrClass = pgridwidget.rows.headers.length === 0 ? '' : ' rows-cntr';\n\n                    var layoutInfos = {\n                        lastLeftMostCellVSpan: 0,\n                        topMostCells: {}\n                    };\n\n                    var rowHeaders = pgridwidget.rows.headers.map(function(headerRow, index) {\n                        return React.createElement(PivotRow, {\n                            key: index,\n                            row: headerRow,\n                            axetype: axe.Type.ROWS,\n                            layoutInfos: layoutInfos,\n                            pivotTableComp: self.props.pivotTableComp\n                        });\n                    });\n\n                    return React.createElement(\"div\", {\n                            className: 'inner-table-container' + cntrClass,\n                            ref: \"rowHeadersContainer\",\n                            onWheel: this.props.pivotTableComp.onWheel\n                        },\n                        React.createElement(\"table\", {\n                                className: \"inner-table\"\n                            },\n                            React.createElement(\"colgroup\", {\n                                ref: \"colgroup\"\n                            }),\n                            React.createElement(\"tbody\", null,\n                                rowHeaders\n                            )\n                        )\n                    );\n                }\n            });\n\n            module.exports.PivotTableDataCells = react.createClass({\n                render: function() {\n                    var self = this;\n                    var PivotRow = comps.PivotRow;\n\n                    var pgridwidget = this.props.pivotTableComp.pgridwidget;\n                    var layoutInfos = {\n                        lastLeftMostCellVSpan: 0,\n                        topMostCells: {}\n                    };\n\n                    var dataCells = pgridwidget.dataRows.map(function(dataRow, index) {\n                        return React.createElement(PivotRow, {\n                            key: index,\n                            row: dataRow,\n                            axetype: axe.Type.DATA,\n                            layoutInfos: layoutInfos,\n                            pivotTableComp: self.props.pivotTableComp\n                        });\n                    });\n\n                    return React.createElement(\"table\", {\n                            className: \"inner-table\"\n                        },\n                        React.createElement(\"colgroup\", null),\n                        React.createElement(\"tbody\", null,\n                            dataCells\n                        )\n                    );\n                }\n            });\n\n            var scrollBarMixin = {\n                scrollEvent: null,\n                scrollClient: null,\n                getInitialState: function() {\n                    // initial state, all zero.\n                    return {\n                        size: 16,\n                        mousedown: false,\n                        thumbOffset: 0\n                    };\n                },\n                componentDidMount: function() {\n                    this.scrollEvent = new ScrollEvent(this);\n                },\n                componentDidUpdate: function() {\n                    if (!this.state.mousedown) {\n                        // mouse not down, don't care about mouse up/move events.\n                        document.removeEventListener('mousemove', this.onMouseMove);\n                        document.removeEventListener('mouseup', this.onMouseUp);\n                    } else if (this.state.mousedown) {\n                        // mouse down, interested by mouse up/move events.\n                        document.addEventListener('mousemove', this.onMouseMove);\n                        document.addEventListener('mouseup', this.onMouseUp);\n                    }\n                },\n                componentWillUnmount: function() {\n                    document.removeEventListener('mousemove', this.onMouseMove);\n                    document.removeEventListener('mouseup', this.onMouseUp);\n                },\n                onMouseDown: function(e) {\n                    // drag with left mouse button\n                    if (e.button !== 0) return;\n\n                    var thumbElem = this.refs.scrollThumb.getDOMNode();\n                    var thumbposInParent = reactUtils.getParentOffset(thumbElem);\n\n                    reactUtils.addClass(thumbElem, 'orb-scrollthumb-hover');\n\n                    // inform mousedown, save start pos\n                    this.setState({\n                        mousedown: true,\n                        mouseoffset: e[this.mousePosProp],\n                        thumbOffset: thumbposInParent[this.posProp]\n                    });\n\n                    // prevent event bubbling (to prevent text selection while dragging for example)\n                    e.stopPropagation();\n                    e.preventDefault();\n                },\n                onMouseUp: function() {\n\n                    if (this.state.mousedown) {\n                        var thumbElem = this.refs.scrollThumb.getDOMNode();\n                        reactUtils.removeClass(thumbElem, 'orb-scrollthumb-hover');\n                    }\n\n                    this.setState({\n                        mousedown: false\n                    });\n                },\n                onMouseMove: function(e) {\n\n                    // if the mouse is not down while moving, return (no drag)\n                    if (!this.state.mousedown) return;\n\n                    e.stopPropagation();\n                    e.preventDefault();\n\n                    var amount = e[this.mousePosProp] - this.state.mouseoffset;\n                    this.state.mouseoffset = e[this.mousePosProp];\n\n                    this.scroll(amount);\n                },\n                getScrollSize: function() {\n                    if (this.scrollClient != null) {\n                        return reactUtils.getSize(this.scrollClient)[this.sizeProp];\n                    } else {\n                        return reactUtils.getSize(this.getDOMNode())[this.sizeProp];\n                    }\n                },\n                setScrollClient: function(scrollClient, scrollCallback) {\n                    this.scrollClient = scrollClient;\n                    this.scrollEvent.callback = scrollCallback;\n                },\n                getScrollPercent: function() {\n                    var maxOffset = this.getScrollSize() - this.state.size;\n                    return maxOffset <= 0 ? 0 : this.state.thumbOffset / maxOffset;\n                },\n                refresh: function() {\n                    if (this.scrollClient) {\n                        var scrolledElement = this.scrollClient.children[0];\n\n                        var clientSize = reactUtils.getSize(this.scrollClient);\n                        var elementSize = reactUtils.getSize(scrolledElement);\n\n                        var scrollBarContainerSize = this.getScrollSize();\n                        var newSize = clientSize[this.sizeProp] >= elementSize[this.sizeProp] ? 0 : (clientSize[this.sizeProp] / elementSize[this.sizeProp]) * scrollBarContainerSize;\n\n                        this.setState({\n                                containerSize: scrollBarContainerSize,\n                                size: newSize,\n                                thumbOffset: Math.min(this.state.thumbOffset, scrollBarContainerSize - newSize)\n                            },\n                            this.scrollEvent.raise\n                        );\n\n                    }\n                },\n                scroll: function(amount, mode) {\n                    if (this.state.size > 0) {\n                        if (mode == 1) amount *= 8;\n\n                        var maxOffset = this.getScrollSize() - this.state.size;\n                        var newOffset = this.state.thumbOffset + amount;\n                        if (newOffset < 0) newOffset = 0;\n                        if (newOffset > maxOffset) newOffset = maxOffset;\n\n                        this.setState({\n                                thumbOffset: newOffset\n                            },\n                            this.scrollEvent.raise\n                        );\n                        return true;\n                    }\n                    return false;\n                },\n                onWheel: function(e) {\n                    this.scroll(e.deltaY, e.deltaMode);\n                    e.stopPropagation();\n                    e.preventDefault();\n                },\n                render: function() {\n                    var self = this;\n\n                    var thumbStyle = {\n                        padding: 0\n                    };\n                    thumbStyle[this.sizeProp] = this.state.size;\n                    thumbStyle[this.offsetCssProp] = this.state.thumbOffset;\n\n                    var thisStyle = {};\n                    thisStyle[this.sizeProp] = this.state.containerSize;\n\n                    var thumbClass = \"orb-scrollthumb \" + this.props.pivotTableComp.pgrid.config.theme.getButtonClasses().scrollBar;\n\n                    var scrollThumb = this.state.size <= 0 ?\n                        null :\n                        React.createElement(\"div\", {\n                            className: thumbClass,\n                            style: thumbStyle,\n                            ref: \"scrollThumb\",\n                            onMouseDown: this.onMouseDown\n                        });\n\n                    return React.createElement(\"div\", {\n                            className: this.cssClass,\n                            style: thisStyle,\n                            onWheel: this.onWheel\n                        },\n                        scrollThumb\n                    );\n                }\n            };\n\n            function ScrollEvent(scrollBarComp) {\n                var self = this;\n                this.scrollBarComp = scrollBarComp;\n                this.callback = null;\n                this.raise = function() {\n                    if (self.callback) {\n                        self.callback(self.scrollBarComp.getScrollPercent());\n                    }\n                };\n            }\n\n            module.exports.HorizontalScrollBar = react.createClass({\n                mixins: [scrollBarMixin],\n                posProp: 'x',\n                mousePosProp: 'pageX',\n                sizeProp: 'width',\n                offsetCssProp: 'left',\n                cssClass: 'orb-h-scrollbar'\n            });\n\n            module.exports.VerticalScrollBar = react.createClass({\n                mixins: [scrollBarMixin],\n                posProp: 'y',\n                mousePosProp: 'pageY',\n                sizeProp: 'height',\n                offsetCssProp: 'top',\n                cssClass: 'orb-v-scrollbar'\n            });\n\n            module.exports.FilterPanel = react.createClass({\n                pgridwidget: null,\n                values: null,\n                filterManager: null,\n                getInitialState: function() {\n                    this.pgridwidget = this.props.pivotTableComp.pgridwidget;\n                    return {};\n                },\n                destroy: function() {\n                    var container = this.getDOMNode().parentNode;\n                    React.unmountComponentAtNode(container);\n                    container.parentNode.removeChild(container);\n                },\n                onFilter: function(operator, term, staticValue, excludeStatic) {\n                    this.props.pivotTableComp.applyFilter(this.props.field, operator, term, staticValue, excludeStatic);\n                    this.destroy();\n                },\n                onMouseDown: function(e) {\n                    var container = this.getDOMNode().parentNode;\n                    var target = e.target;\n                    while (target != null) {\n                        if (target == container) {\n                            return true;\n                        }\n                        target = target.parentNode;\n                    }\n\n                    this.destroy();\n                },\n                onMouseWheel: function(e) {\n                    var valuesTable = this.refs.valuesTable.getDOMNode();\n                    var target = e.target;\n                    while (target != null) {\n                        if (target == valuesTable) {\n                            if (valuesTable.scrollHeight <= valuesTable.clientHeight) {\n                                e.stopPropagation();\n                                e.preventDefault();\n                            }\n                            return;\n                        }\n                        target = target.parentNode;\n                    }\n\n                    this.destroy();\n                },\n                componentWillMount: function() {\n                    document.addEventListener('mousedown', this.onMouseDown);\n                    document.addEventListener('wheel', this.onMouseWheel);\n                    window.addEventListener('resize', this.destroy);\n                },\n                componentDidMount: function() {\n                    this.filterManager.init(this.getDOMNode());\n                },\n                componentWillUnmount: function() {\n                    document.removeEventListener('mousedown', this.onMouseDown);\n                    document.removeEventListener('wheel', this.onMouseWheel);\n                    window.removeEventListener('resize', this.destroy);\n                },\n                render: function() {\n                    var Dropdown = comps.Dropdown;\n                    var checkboxes = [];\n\n                    this.filterManager = new FilterManager(this, this.pgridwidget.pgrid.getFieldFilter(this.props.field));\n                    this.values = this.pgridwidget.pgrid.getFieldValues(this.props.field);\n\n                    function addCheckboxRow(value, text) {\n                        return checkboxes.push(React.createElement(\"tr\", {\n                                key: value\n                            },\n                            React.createElement(\"td\", {\n                                    className: \"fltr-chkbox\"\n                                },\n                                React.createElement(\"input\", {\n                                    type: \"checkbox\",\n                                    value: value,\n                                    defaultChecked: \"checked\"\n                                })\n                            ),\n                            React.createElement(\"td\", {\n                                className: \"fltr-val\",\n                                title: text || value\n                            }, text || value)\n                        ));\n                    }\n\n                    addCheckboxRow(filtering.ALL, '(Show All)');\n                    if (this.values.containsBlank) {\n                        addCheckboxRow(filtering.BLANK, '(Blank)');\n                    }\n\n                    for (var i = 0; i < this.values.length; i++) {\n                        addCheckboxRow(this.values[i]);\n                    }\n\n                    var buttonClass = this.props.pivotTableComp.pgrid.config.theme.getButtonClasses().orbButton;\n                    var pivotStyle = window.getComputedStyle(this.props.pivotTableComp.getDOMNode(), null);\n                    var style = {\n                        fontFamily: pivotStyle.getPropertyValue('font-family'),\n                        fontSize: pivotStyle.getPropertyValue('font-size')\n                    };\n\n                    var currentFilter = this.pgridwidget.pgrid.getFieldFilter(this.props.field);\n\n                    return React.createElement(\"table\", {\n                            className: \"fltr-scntnr\",\n                            style: style\n                        },\n                        React.createElement(\"tbody\", null,\n                            React.createElement(\"tr\", null,\n                                React.createElement(\"td\", {\n                                        className: \"srchop-col\"\n                                    },\n                                    React.createElement(Dropdown, {\n                                        values: [\n                                            filtering.Operators.MATCH.name,\n                                            filtering.Operators.NOTMATCH.name,\n                                            filtering.Operators.EQ.name,\n                                            filtering.Operators.NEQ.name,\n                                            filtering.Operators.GT.name,\n                                            filtering.Operators.GTE.name,\n                                            filtering.Operators.LT.name,\n                                            filtering.Operators.LTE.name\n                                        ],\n                                        selectedValue: currentFilter && currentFilter.operator ? currentFilter.operator.name : filtering.Operators.MATCH.name,\n                                        onValueChanged: this.filterManager.onOperatorChanged\n                                    })\n                                ),\n                                React.createElement(\"td\", {\n                                    className: \"srchtyp-col\",\n                                    title: \"Enable/disable Regular expressions\"\n                                }, \".*\"),\n                                React.createElement(\"td\", {\n                                        className: \"srchbox-col\"\n                                    },\n                                    React.createElement(\"table\", {\n                                            style: {\n                                                width: '100%'\n                                            }\n                                        },\n                                        React.createElement(\"tbody\", null,\n                                            React.createElement(\"tr\", null,\n                                                React.createElement(\"td\", null, React.createElement(\"input\", {\n                                                    type: \"text\",\n                                                    placeholder: \"search\"\n                                                })),\n                                                React.createElement(\"td\", null, React.createElement(\"div\", {\n                                                    className: \"srchclear-btn\",\n                                                    onClick: this.clearFilter\n                                                }, \"x\"))\n                                            )\n                                        )\n                                    )\n                                )\n                            ),\n                            React.createElement(\"tr\", null,\n                                React.createElement(\"td\", {\n                                        colSpan: \"3\",\n                                        className: \"fltr-vals-col\"\n                                    },\n                                    React.createElement(\"table\", {\n                                            className: \"fltr-vals-tbl\",\n                                            ref: \"valuesTable\"\n                                        },\n                                        React.createElement(\"tbody\", null,\n                                            checkboxes\n                                        )\n                                    )\n                                )\n                            ),\n                            React.createElement(\"tr\", {\n                                    className: \"bottom-row\"\n                                },\n                                React.createElement(\"td\", {\n                                        className: \"cnfrm-btn-col\",\n                                        colSpan: \"2\"\n                                    },\n                                    React.createElement(\"input\", {\n                                        type: \"button\",\n                                        className: buttonClass,\n                                        value: \"Ok\",\n                                        style: {\n                                            float: 'left'\n                                        }\n                                    }),\n                                    React.createElement(\"input\", {\n                                        type: \"button\",\n                                        className: buttonClass,\n                                        value: \"Cancel\",\n                                        style: {\n                                            float: 'left'\n                                        }\n                                    })\n                                ),\n                                React.createElement(\"td\", {\n                                        className: \"resize-col\"\n                                    },\n                                    React.createElement(\"div\", null)\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n\n            function FilterManager(reactComp, initialFilterObject) {\n\n                var self = this;\n                var INDETERMINATE = 'indeterminate';\n\n                var savedCheckedValues;\n                var isSearchMode = false;\n                var isRegexMode = false;\n                var operator = filtering.Operators.MATCH;\n                var lastSearchTerm = '';\n\n                var elems = {\n                    filterContainer: null,\n                    checkboxes: {},\n                    searchBox: null,\n                    operatorBox: null,\n                    allCheckbox: null,\n                    addCheckbox: null,\n                    enableRegexButton: null,\n                    clearSearchButton: null,\n                    okButton: null,\n                    cancelButton: null,\n                    resizeGrip: null\n                };\n\n                var resizeManager;\n\n                this.init = function(filterContainerElement) {\n\n                    elems.filterContainer = filterContainerElement;\n                    elems.checkboxes = {};\n                    elems.searchBox = elems.filterContainer.rows[0].cells[2].children[0].rows[0].cells[0].children[0];\n                    elems.clearSearchButton = elems.filterContainer.rows[0].cells[2].children[0].rows[0].cells[1].children[0];\n                    elems.operatorBox = elems.filterContainer.rows[0].cells[0].children[0];\n                    elems.okButton = elems.filterContainer.rows[2].cells[0].children[0];\n                    elems.cancelButton = elems.filterContainer.rows[2].cells[0].children[1];\n                    elems.resizeGrip = elems.filterContainer.rows[2].cells[1].children[0];\n\n                    var rows = elems.filterContainer.rows[1].cells[0].children[0].rows;\n                    for (var i = 0; i < rows.length; i++) {\n                        var checkbox = rows[i].cells[0].children[0];\n                        elems.checkboxes[checkbox.value] = checkbox;\n                    }\n\n                    elems.allCheckbox = elems.checkboxes[filtering.ALL];\n                    elems.addCheckbox = null;\n                    elems.enableRegexButton = elems.filterContainer.rows[0].cells[1];\n\n                    resizeManager = new ResizeManager(elems.filterContainer.parentNode, elems.filterContainer.rows[1].cells[0].children[0], elems.resizeGrip);\n\n                    applyInitialFilterObject();\n                    addEventListeners();\n                };\n\n                this.onOperatorChanged = function(newOperator) {\n                    if (operator.name !== newOperator) {\n                        operator = filtering.Operators.get(newOperator);\n                        self.toggleRegexpButtonVisibility();\n                        self.searchChanged('operatorChanged');\n                    }\n                };\n\n                function checkboxVisible(checkbox, isVisible) {\n                    if (isVisible != null) {\n                        checkbox.parentNode.parentNode.style.display = isVisible ? '' : 'none';\n                    } else {\n                        return checkbox.parentNode.parentNode.style.display != 'none';\n                    }\n                }\n\n                function applyInitialFilterObject() {\n                    if (initialFilterObject) {\n                        var staticInfos = {\n                            values: initialFilterObject.staticValue,\n                            toExclude: initialFilterObject.excludeStatic\n                        };\n\n                        if (initialFilterObject.term) {\n                            isSearchMode = true;\n\n                            operator = initialFilterObject.operator;\n                            self.toggleRegexpButtonVisibility();\n\n                            if (initialFilterObject.regexpMode) {\n                                isRegexMode = true;\n                                self.toggleRegexpButtonState();\n                                lastSearchTerm = initialFilterObject.term.source;\n                            } else {\n                                lastSearchTerm = initialFilterObject.term;\n                            }\n\n                            elems.searchBox.value = lastSearchTerm;\n\n                            self.applyFilterTerm(initialFilterObject.operator, initialFilterObject.term);\n                        } else {\n                            savedCheckedValues = staticInfos;\n                        }\n\n                        self.updateCheckboxes(staticInfos);\n                        self.updateAllCheckbox();\n                    }\n                }\n\n                function addEventListeners() {\n                    self.toggleRegexpButtonVisibility();\n\n                    elems.filterContainer.addEventListener('click', self.valueChecked);\n                    elems.searchBox.addEventListener('keyup', self.searchChanged);\n\n                    elems.clearSearchButton.addEventListener('click', self.clearSearchBox);\n\n                    elems.okButton.addEventListener('click', function() {\n                        var checkedObj = self.getCheckedValues();\n                        reactComp.onFilter(operator.name, operator.regexpSupported && isSearchMode && isRegexMode ? new RegExp(lastSearchTerm, 'i') : lastSearchTerm, checkedObj.values, checkedObj.toExclude);\n                    });\n                    elems.cancelButton.addEventListener('click', function() {\n                        reactComp.destroy();\n                    });\n                }\n\n                function ResizeManager(outerContainerElem, valuesTableElem, resizeGripElem) {\n\n                    var minContainerWidth = 301;\n                    var minContainerHeight = 223;\n\n                    var mousedownpos = {\n                        x: 0,\n                        y: 0\n                    };\n                    var isMouseDown = false;\n\n                    this.resizeMouseDown = function(e) {\n                        // drag/sort with left mouse button\n                        if (e.button !== 0) return;\n\n                        isMouseDown = true;\n                        document.body.style.cursor = 'se-resize';\n\n                        mousedownpos.x = e.pageX;\n                        mousedownpos.y = e.pageY;\n\n                        // prevent event bubbling (to prevent text selection while dragging for example)\n                        e.stopPropagation();\n                        e.preventDefault();\n                    };\n\n                    this.resizeMouseUp = function() {\n                        isMouseDown = false;\n                        document.body.style.cursor = 'auto';\n                        return true;\n                    };\n\n                    this.resizeMouseMove = function(e) {\n                        // if the mouse is not down while moving, return (no drag)\n                        if (!isMouseDown) return;\n\n                        var resizeGripSize = resizeGripElem.getBoundingClientRect();\n                        var outerContainerSize = outerContainerElem.getBoundingClientRect();\n                        var valuesTableSize = valuesTableElem.getBoundingClientRect();\n\n                        var outerContainerWidth = outerContainerSize.right - outerContainerSize.left;\n                        var outerContainerHeight = outerContainerSize.bottom - outerContainerSize.top;\n\n                        var offset = {\n                            x: outerContainerWidth <= minContainerWidth && e.pageX < resizeGripSize.left ? 0 : e.pageX - mousedownpos.x,\n                            y: outerContainerHeight <= minContainerHeight && e.pageY < resizeGripSize.top ? 0 : e.pageY - mousedownpos.y\n                        };\n\n                        var newContainerWidth = outerContainerWidth + offset.x;\n                        var newContainerHeight = outerContainerHeight + offset.y;\n\n                        mousedownpos.x = e.pageX;\n                        mousedownpos.y = e.pageY;\n\n                        if (newContainerWidth >= minContainerWidth) {\n                            outerContainerElem.style.width = newContainerWidth + 'px';\n                        }\n\n                        if (newContainerHeight >= minContainerHeight) {\n                            outerContainerElem.style.height = newContainerHeight + 'px';\n                            valuesTableElem.style.height = (valuesTableSize.bottom - valuesTableSize.top + offset.y) + 'px';\n                        }\n\n                        e.stopPropagation();\n                        e.preventDefault();\n                    };\n\n                    resizeGripElem.addEventListener('mousedown', this.resizeMouseDown);\n                    document.addEventListener('mouseup', this.resizeMouseUp);\n                    document.addEventListener('mousemove', this.resizeMouseMove);\n                }\n\n                this.clearSearchBox = function() {\n                    elems.searchBox.value = '';\n                    self.searchChanged();\n                };\n\n                this.toggleRegexpButtonVisibility = function() {\n                    if (operator.regexpSupported) {\n                        elems.enableRegexButton.addEventListener('click', self.regexpActiveChanged);\n                        reactUtils.removeClass(elems.enableRegexButton, 'srchtyp-col-hidden');\n\n                    } else {\n                        elems.enableRegexButton.removeEventListener('click', self.regexpActiveChanged);\n                        reactUtils.addClass(elems.enableRegexButton, 'srchtyp-col-hidden');\n                    }\n                };\n\n                this.toggleRegexpButtonState = function() {\n                    elems.enableRegexButton.className = elems.enableRegexButton.className.replace('srchtyp-col-active', '');\n                    if (isRegexMode) {\n                        reactUtils.addClass(elems.enableRegexButton, 'srchtyp-col-active');\n                    } else {\n                        reactUtils.removeClass(elems.enableRegexButton, 'srchtyp-col-active');\n                    }\n                };\n\n                this.regexpActiveChanged = function() {\n                    isRegexMode = !isRegexMode;\n                    self.toggleRegexpButtonState();\n                    self.searchChanged('regexModeChanged');\n                };\n\n                this.valueChecked = function(e) {\n                    var target = e.target;\n                    if (target && target.type && target.type === 'checkbox') {\n                        if (target == elems.allCheckbox) {\n                            self.updateCheckboxes({\n                                values: elems.allCheckbox.checked\n                            });\n                        } else {\n                            self.updateAllCheckbox();\n                        }\n                    }\n                };\n\n                this.applyFilterTerm = function(operator, term) {\n                    var defaultVisible = term ? false : true;\n                    var opterm = operator.regexpSupported && isSearchMode ? (isRegexMode ? term : utils.escapeRegex(term)) : term;\n                    checkboxVisible(elems.allCheckbox, defaultVisible);\n                    for (var i = 0; i < reactComp.values.length; i++) {\n                        var val = reactComp.values[i];\n                        var checkbox = elems.checkboxes[val];\n                        var visible = !isSearchMode || operator.func(val, opterm);\n                        checkboxVisible(checkbox, visible);\n                        checkbox.checked = visible;\n                    }\n                };\n\n                this.searchChanged = function(e) {\n                    var search = (elems.searchBox.value || '').trim();\n                    if (e === 'operatorChanged' || (e === 'regexModeChanged' && search) || search != lastSearchTerm) {\n                        lastSearchTerm = search;\n\n                        var previousIsSearchMode = isSearchMode;\n                        isSearchMode = search !== '';\n\n                        if (isSearchMode && !previousIsSearchMode) {\n                            savedCheckedValues = self.getCheckedValues();\n                        }\n\n                        //var searchTerm = operator.regexpSupported && isSearchMode ? new RegExp(isRegexMode ? search : utils.escapeRegex(search), 'i') : search;\n                        if (e !== 'operatorChanged' || isSearchMode) {\n                            self.applyFilterTerm(operator, search);\n                        }\n\n                        if (!isSearchMode && previousIsSearchMode) {\n                            self.updateCheckboxes(savedCheckedValues);\n                        }\n\n                        self.updateAllCheckbox();\n                    }\n                };\n\n                this.getCheckedValues = function() {\n                    if (!isSearchMode && !elems.allCheckbox.indeterminate) {\n                        return {\n                            values: elems.allCheckbox.checked ? filtering.ALL : filtering.NONE,\n                            toExclude: false\n                        };\n                    } else {\n                        var staticValue;\n                        var i,\n                            val,\n                            checkbox;\n                        var valuesCount = 0,\n                            checkedCount = 0;\n\n                        for (i = 0; i < reactComp.values.length; i++) {\n                            val = reactComp.values[i];\n                            checkbox = elems.checkboxes[val];\n                            if (checkboxVisible(checkbox)) {\n                                valuesCount++;\n                                if (checkbox.checked) {\n                                    checkedCount++;\n                                }\n                            }\n                        }\n\n                        var excludeUnchecked = false;\n\n                        if (checkedCount === 0) {\n                            staticValue = filtering.NONE;\n                        } else if (checkedCount == valuesCount) {\n                            staticValue = filtering.ALL;\n                        } else {\n                            staticValue = [];\n                            excludeUnchecked = checkedCount > (valuesCount / 2 + 1);\n\n                            for (i = 0; i < reactComp.values.length; i++) {\n                                val = reactComp.values[i];\n                                checkbox = elems.checkboxes[val];\n                                if (checkboxVisible(checkbox)) {\n                                    if ((!excludeUnchecked && checkbox.checked) || (excludeUnchecked && !checkbox.checked)) {\n                                        staticValue.push(val);\n                                    }\n                                }\n                            }\n                        }\n                        return {\n                            values: staticValue,\n                            toExclude: excludeUnchecked\n                        };\n                    }\n                };\n\n                this.updateCheckboxes = function(checkedList) {\n                    var values = checkedList ? checkedList.values : null;\n                    var allchecked = utils.isArray(values) ?\n                        null :\n                        (values == null || values === filtering.ALL ?\n                            true :\n                            (values === filtering.NONE ?\n                                false :\n                                !!values\n                            )\n                        );\n                    for (var i = 0; i < reactComp.values.length; i++) {\n                        var val = reactComp.values[i];\n                        var checkbox = elems.checkboxes[val];\n                        if (checkboxVisible(checkbox)) {\n                            if (allchecked != null) {\n                                checkbox.checked = allchecked;\n                            } else {\n                                var valInList = values.indexOf(val) >= 0;\n                                checkbox.checked = checkedList.toExclude ? !valInList : valInList;\n                            }\n                        }\n                    }\n                };\n\n                this.updateAllCheckbox = function() {\n                    if (!isSearchMode) {\n                        var allchecked = null;\n                        for (var i = 0; i < reactComp.values.length; i++) {\n                            var checkbox = elems.checkboxes[reactComp.values[i]];\n                            if (allchecked == null) {\n                                allchecked = checkbox.checked;\n                            } else {\n                                if (allchecked !== checkbox.checked) {\n                                    allchecked = INDETERMINATE;\n                                    break;\n                                }\n                            }\n                        }\n\n                        if (allchecked === INDETERMINATE) {\n                            elems.allCheckbox.indeterminate = true;\n                            elems.allCheckbox.checked = false;\n                        } else {\n                            elems.allCheckbox.indeterminate = false;\n                            elems.allCheckbox.checked = allchecked;\n                        }\n                    }\n                };\n            }\n\n            module.exports.Dropdown = react.createClass({\n                openOrClose: function(e) {\n                    var valueNode = this.refs.valueElement.getDOMNode();\n                    var valuesListNode = this.refs.valuesList.getDOMNode();\n                    if (e.target === valueNode && valuesListNode.style.display === 'none') {\n                        valuesListNode.style.display = 'block';\n                    } else {\n                        valuesListNode.style.display = 'none';\n                    }\n                },\n                onMouseEnter: function() {\n                    var valueNode = this.refs.valueElement.getDOMNode();\n                    valueNode.className = \"orb-tgl-btn-down\";\n                    valueNode.style.backgroundPosition = 'right center';\n                },\n                onMouseLeave: function() {\n                    this.refs.valueElement.getDOMNode().className = \"\";\n                },\n                componentDidMount: function() {\n                    document.addEventListener('click', this.openOrClose);\n                },\n                componentWillUnmount: function() {\n                    document.removeEventListener('click', this.openOrClose);\n                },\n                selectValue: function(e) {\n                    var listNode = this.refs.valuesList.getDOMNode();\n                    var target = e.target;\n                    var isli = false;\n                    while (!isli && target != null) {\n                        if (target.parentNode == listNode) {\n                            isli = true;\n                            break;\n                        }\n                        target = target.parentNode;\n                    }\n\n                    if (isli) {\n                        var value = target.textContent;\n                        var valueElement = this.refs.valueElement.getDOMNode();\n                        if (valueElement.textContent != value) {\n                            valueElement.textContent = value;\n                            if (this.props.onValueChanged) {\n                                this.props.onValueChanged(value);\n                            }\n                        }\n                    }\n                },\n                render: function() {\n                    function createSelectValueFunc(value) {\n                        return function() {\n                            this.selectValue(value);\n                        };\n                    }\n\n                    var values = [];\n                    for (var i = 0; i < this.props.values.length; i++) {\n                        values.push(React.createElement(\"li\", {\n                            key: 'item' + i,\n                            dangerouslySetInnerHTML: {\n                                __html: this.props.values[i]\n                            }\n                        }));\n                    }\n\n                    return React.createElement(\"div\", {\n                            className: \"orb-select\"\n                        },\n                        React.createElement(\"div\", {\n                            ref: \"valueElement\",\n                            dangerouslySetInnerHTML: {\n                                __html: this.props.selectedValue\n                            },\n                            onMouseEnter: this.onMouseEnter,\n                            onMouseLeave: this.onMouseLeave\n                        }),\n                        React.createElement(\"ul\", {\n                                ref: \"valuesList\",\n                                style: {\n                                    display: 'none'\n                                },\n                                onClick: this.selectValue\n                            },\n                            values\n                        )\n                    );\n                }\n            });\n\n            module.exports.Grid = react.createClass({\n                render: function() {\n                    var data = this.props.data;\n                    var headers = this.props.headers;\n                    var tableClasses = this.props.theme.getGridClasses();\n\n                    var rows = [];\n\n                    if (headers && headers.length > 0) {\n                        var headerRow = [];\n                        for (var h = 0; h < headers.length; h++) {\n                            headerRow.push(React.createElement(\"th\", {\n                                key: 'h' + h\n                            }, headers[h]));\n                        }\n                        rows.push(React.createElement(\"tr\", {\n                            key: 'h'\n                        }, headerRow));\n                    }\n\n                    if (data && data.length > 0) {\n                        for (var i = 0; i < data.length; i++) {\n                            var row = [];\n                            if (utils.isArray(data[i])) {\n                                for (var j = 0; j < data[i].length; j++) {\n                                    row.push(React.createElement(\"td\", {\n                                        key: i + '' + j\n                                    }, data[i][j]));\n                                }\n                            } else {\n                                for (var prop in data[i]) {\n                                    if (data[i].hasOwnProperty(prop)) {\n                                        row.push(React.createElement(\"td\", {\n                                            key: i + '' + prop\n                                        }, data[i][prop]));\n                                    }\n                                }\n                            }\n                            rows.push(React.createElement(\"tr\", {\n                                key: i\n                            }, row));\n                        }\n                    }\n\n                    return React.createElement(\"table\", {\n                            className: tableClasses.table\n                        },\n                        React.createElement(\"tbody\", null,\n                            rows\n                        )\n                    );\n                }\n            });\n\n            function createOverlay() {\n                var overlayElement = document.createElement('div');\n                overlayElement.className = 'orb-overlay orb-overlay-hidden';\n                document.body.appendChild(overlayElement);\n                return overlayElement;\n            }\n\n            var Dialog = module.exports.Dialog = react.createClass({\n                statics: {\n                    create: function() {\n                        var dialogFactory = React.createFactory(Dialog);\n                        var overlay = createOverlay();\n\n                        return {\n                            show: function(props) {\n                                React.render(dialogFactory(props), overlay);\n                            }\n                        };\n                    }\n                },\n                overlayElement: null,\n                setOverlayClass: function(visible) {\n                    this.overlayElement.className = this.props.theme.getDialogClasses(visible).overlay;\n                },\n                componentDidMount: function() {\n                    this.overlayElement = this.getDOMNode().parentNode;\n                    this.setOverlayClass(true);\n                    this.overlayElement.addEventListener('click', this.close);\n\n                    var dialogElement = this.overlayElement.children[0];\n                    var dialogBodyElement = dialogElement.children[0].children[1];\n\n                    var screenWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n                    var screenHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n                    var maxHeight = 2 * screenHeight / 3;\n                    maxHeight = maxHeight < 301 ? 301 : maxHeight;\n                    var dWidth = dialogElement.offsetWidth + (dialogElement.offsetHeight > maxHeight ? 11 : 0);\n                    var dHeight = dialogElement.offsetHeight > maxHeight ? maxHeight : dialogElement.offsetHeight;\n\n                    dialogElement.style.top = (screenHeight > dHeight ? (screenHeight - dHeight) / 2 : 0) + 'px';\n                    dialogElement.style.left = (screenWidth > dWidth ? (screenWidth - dWidth) / 2 : 0) + 'px';\n                    dialogElement.style.height = dHeight + 'px';\n                    dialogBodyElement.style.width = dWidth + 'px';\n                    dialogBodyElement.style.height = (dHeight - 45) + 'px';\n                },\n                close: function(e) {\n                    if (e.target == this.overlayElement || e.target.className === 'button-close') {\n                        this.overlayElement.removeEventListener('click', this.close);\n                        React.unmountComponentAtNode(this.overlayElement);\n                        this.setOverlayClass(false);\n                    }\n                },\n                render: function() {\n                    if (this.props.comp) {\n                        var comp = React.createElement(this.props.comp.type, this.props.comp.props);\n                        var classes = this.props.theme.getDialogClasses();\n\n                        return React.createElement(\"div\", {\n                                className: classes.dialog,\n                                style: this.props.style || {}\n                            },\n                            React.createElement(\"div\", {\n                                    className: classes.content\n                                },\n                                React.createElement(\"div\", {\n                                    className: classes.header\n                                }, React.createElement(\"div\", {\n                                    className: \"button-close\",\n                                    onClick: this.close\n                                }), React.createElement(\"div\", {\n                                    className: classes.title\n                                }, this.props.title)),\n                                React.createElement(\"div\", {\n                                        className: classes.body\n                                    },\n                                    comp\n                                )\n                            )\n                        );\n                    }\n                }\n            });\n\n            module.exports.Toolbar = react.createClass({\n                _toInit: [],\n                componentDidMount: function() {\n                    for (var i = 0; i < this._toInit.length; i++) {\n                        var btn = this._toInit[i];\n                        btn.init(this.props.pivotTableComp, this.refs[btn.ref].getDOMNode());\n                    }\n                },\n                componentDidUpdate: function() {\n                    for (var i = 0; i < this._toInit.length; i++) {\n                        var btn = this._toInit[i];\n                        btn.init(this.props.pivotTableComp, this.refs[btn.ref].getDOMNode());\n                    }\n                },\n                createCallback: function(action) {\n                    if (action != null) {\n                        var pgridComponent = this.props.pivotTableComp;\n                        return function(e) {\n                            action(pgridComponent, e.target);\n                        };\n                    }\n                    return null;\n                },\n                render: function() {\n\n                    var config = this.props.pivotTableComp.pgridwidget.pgrid.config;\n\n                    if (config.toolbar && config.toolbar.visible) {\n\n                        var configButtons = config.toolbar.buttons ?\n                            defaultToolbarConfig.buttons.concat(config.toolbar.buttons) :\n                            defaultToolbarConfig.buttons;\n\n                        var buttons = [];\n                        for (var i = 0; i < configButtons.length; i++) {\n                            var btnConfig = configButtons[i];\n                            var refName = 'btn' + i;\n\n                            if (btnConfig.type == 'separator') {\n                                buttons.push(React.createElement(\"div\", {\n                                    key: i,\n                                    className: \"orb-tlbr-sep\"\n                                }));\n                            } else if (btnConfig.type == 'label') {\n                                buttons.push(React.createElement(\"div\", {\n                                    key: i,\n                                    className: \"orb-tlbr-lbl\"\n                                }, btnConfig.text));\n                            } else {\n                                buttons.push(React.createElement(\"div\", {\n                                    key: i,\n                                    className: 'orb-tlbr-btn ' + btnConfig.cssClass,\n                                    title: btnConfig.tooltip,\n                                    ref: refName,\n                                    onClick: this.createCallback(btnConfig.action)\n                                }));\n                            }\n                            if (btnConfig.init) {\n                                this._toInit.push({\n                                    ref: refName,\n                                    init: btnConfig.init\n                                });\n                            }\n                        }\n\n                        return React.createElement(\"div\", null,\n                            buttons\n                        );\n                    }\n\n                    return React.createElement(\"div\", null);\n                }\n            });\n\n            var excelExport = _dereq_('../orb.export.excel');\n\n            var defaultToolbarConfig = {\n                exportToExcel: function(pgridComponent, button) {\n                    var a = document.createElement('a');\n                    a.download = \"orbpivotgrid.xls\";\n                    a.href = excelExport(pgridComponent.props.pgridwidget);\n                    document.body.appendChild(a);\n                    a.click();\n                    document.body.removeChild(a);\n                },\n                expandAllRows: function(pgridComponent, button) {\n                    pgridComponent.toggleFieldExpansion(axe.Type.ROWS, null, true);\n                },\n                collapseAllRows: function(pgridComponent, button) {\n                    pgridComponent.toggleFieldExpansion(axe.Type.ROWS, null, false);\n                },\n                expandAllColumns: function(pgridComponent, button) {\n                    pgridComponent.toggleFieldExpansion(axe.Type.COLUMNS, null, true);\n                },\n                collapseAllColumns: function(pgridComponent, button) {\n                    pgridComponent.toggleFieldExpansion(axe.Type.COLUMNS, null, false);\n                },\n                updateSubtotalsButton: function(axetype, pgridComponent, button) {\n                    var subTotalsState = pgridComponent.pgridwidget.areSubtotalsVisible(axetype);\n                    button.style.display = subTotalsState === null ? 'none' : '';\n\n                    var classToAdd = '';\n                    var classToRemove = '';\n                    if (subTotalsState) {\n                        classToAdd = 'subtotals-visible';\n                        classToRemove = 'subtotals-hidden';\n                    } else {\n                        classToAdd = 'subtotals-hidden';\n                        classToRemove = 'subtotals-visible';\n                    }\n\n                    reactUtils.removeClass(button, classToRemove);\n                    reactUtils.addClass(button, classToAdd);\n                },\n                initSubtotals: function(axetype) {\n                    var self = this;\n                    return function(pgridComponent, button) {\n                        self.updateSubtotalsButton(axetype, pgridComponent, button);\n                    };\n                },\n                toggleSubtotals: function(axetype) {\n                    var self = this;\n                    return function(pgridComponent, button) {\n                        pgridComponent.toggleSubtotals(axetype);\n                        self.updateSubtotalsButton(axetype, pgridComponent, button);\n                    };\n                },\n                updateGrandtotalButton: function(axetype, pgridComponent, button) {\n                    var subTotalsState = pgridComponent.pgridwidget.isGrandtotalVisible(axetype);\n                    button.style.display = subTotalsState === null ? 'none' : '';\n\n                    var classToAdd = '';\n                    var classToRemove = '';\n                    if (subTotalsState) {\n                        classToAdd = 'grndtotal-visible';\n                        classToRemove = 'grndtotal-hidden';\n                    } else {\n                        classToAdd = 'grndtotal-hidden';\n                        classToRemove = 'grndtotal-visible';\n                    }\n\n                    reactUtils.removeClass(button, classToRemove);\n                    reactUtils.addClass(button, classToAdd);\n                },\n                initGrandtotal: function(axetype) {\n                    var self = this;\n                    return function(pgridComponent, button) {\n                        self.updateGrandtotalButton(axetype, pgridComponent, button);\n                    };\n                },\n                toggleGrandtotal: function(axetype) {\n                    var self = this;\n                    return function(pgridComponent, button) {\n                        pgridComponent.toggleGrandtotal(axetype);\n                        self.updateGrandtotalButton(axetype, pgridComponent, button);\n                    };\n                }\n            };\n\n            defaultToolbarConfig.buttons = [{\n                type: 'label',\n                text: 'Rows:'\n            }, {\n                type: 'button',\n                tooltip: 'Expand all rows',\n                cssClass: 'expand-all',\n                action: defaultToolbarConfig.expandAllRows\n            }, {\n                type: 'button',\n                tooltip: 'Collapse all rows',\n                cssClass: 'collapse-all',\n                action: defaultToolbarConfig.collapseAllRows\n            }, {\n                type: 'button',\n                tooltip: 'Toggle rows sub totals',\n                init: defaultToolbarConfig.initSubtotals(axe.Type.ROWS),\n                action: defaultToolbarConfig.toggleSubtotals(axe.Type.ROWS)\n            }, {\n                type: 'button',\n                tooltip: 'Toggle rows grand total',\n                init: defaultToolbarConfig.initGrandtotal(axe.Type.ROWS),\n                action: defaultToolbarConfig.toggleGrandtotal(axe.Type.ROWS)\n            }, {\n                type: 'separator'\n            }, {\n                type: 'label',\n                text: 'Columns:'\n            }, {\n                type: 'button',\n                tooltip: 'Expand all columns',\n                cssClass: 'expand-all',\n                action: defaultToolbarConfig.expandAllColumns\n            }, {\n                type: 'button',\n                tooltip: 'Collapse all columns',\n                cssClass: 'collapse-all',\n                action: defaultToolbarConfig.collapseAllColumns\n            }, {\n                type: 'button',\n                tooltip: 'Toggle columns sub totals',\n                init: defaultToolbarConfig.initSubtotals(axe.Type.COLUMNS),\n                action: defaultToolbarConfig.toggleSubtotals(axe.Type.COLUMNS)\n            }, {\n                type: 'button',\n                tooltip: 'Toggle columns grand total',\n                init: defaultToolbarConfig.initGrandtotal(axe.Type.COLUMNS),\n                action: defaultToolbarConfig.toggleGrandtotal(axe.Type.COLUMNS)\n            }, {\n                type: 'separator'\n            }, {\n                type: 'label',\n                text: 'Export:'\n            }, {\n                type: 'button',\n                tooltip: 'Export to Excel',\n                cssClass: 'export-xls',\n                action: defaultToolbarConfig.exportToExcel\n            }, ];\n\n        }, {\n            \"../orb.axe\": 3,\n            \"../orb.export.excel\": 6,\n            \"../orb.filtering\": 7,\n            \"../orb.ui.header\": 14,\n            \"../orb.utils\": 17,\n            \"./orb.react.utils\": 19,\n            \"react\": undefined\n        }],\n        19: [function(_dereq_, module, exports) {\n\n            module.exports.forEach = function(list, func, defStop) {\n                var ret;\n                if (list) {\n                    for (var i = 0, l = list.length; i < l; i++) {\n                        ret = func(list[i], i);\n                        if (ret !== undefined && defStop === true) {\n                            break;\n                        }\n                    }\n                }\n                return ret;\n            };\n\n            module.exports.removeClass = function(element, classname) {\n                if (element && classname) {\n                    while (element.className.indexOf(classname) >= 0) {\n                        element.className = element.className.replace(classname, '');\n                    }\n                }\n            };\n\n            module.exports.addClass = function(element, classname) {\n                if (element && classname) {\n                    if (element.className.indexOf(classname) < 0) {\n                        element.className += ' ' + classname;\n                    }\n                }\n            };\n\n            module.exports.getOffset = function(element) {\n                if (element) {\n                    var rect = element.getBoundingClientRect();\n                    return {\n                        x: rect.left,\n                        y: rect.top\n                    };\n                }\n                return {\n                    x: 0,\n                    y: 0\n                };\n            };\n\n            module.exports.getParentOffset = function(element) {\n                if (element) {\n                    var rect = element.getBoundingClientRect();\n                    var rectParent = element.parentNode != null ? element.parentNode.getBoundingClientRect() : {\n                        top: 0,\n                        left: 0\n                    };\n                    return {\n                        x: rect.left - rectParent.left,\n                        y: rect.top - rectParent.top\n                    };\n                }\n                return {\n                    x: 0,\n                    y: 0\n                };\n            };\n\n            module.exports.getSize = function(element) {\n                if (element) {\n                    var rect = element.getBoundingClientRect();\n                    return {\n                        width: rect.right - rect.left,\n                        height: rect.bottom - rect.top\n                    };\n                }\n                return {\n                    width: 0,\n                    height: 0\n                };\n            };\n\n            module.exports.getStyle = function(element, styleProps, keepString) {\n                var values = [];\n                if (element && styleProps) {\n                    var currStyle, f;\n                    if (element.currentStyle) {\n                        currStyle = element.currentStyle;\n                        f = function(prop) {\n                            return currStyle[prop];\n                        };\n                    } else if (window && window.getComputedStyle) {\n                        currStyle = window.getComputedStyle(element, null);\n                        f = function(prop) {\n                            return currStyle.getPropertyValue(prop);\n                        };\n                    }\n\n                    for (var i = 0; i < styleProps.length; i++) {\n                        var val = f(styleProps[i]);\n                        values.push(val && keepString !== true ? Math.ceil(parseFloat(val)) : val);\n                    }\n                }\n                return values;\n            };\n\n            module.exports.isVisible = function(element) {\n                if (element) {\n                    return element.style.display !== 'none' && (element.offsetWidth !== 0 || element.offsetHeight !== 0);\n                }\n                return false;\n            };\n\n            module.exports.updateTableColGroup = function(tableNode, widths) {\n                if (tableNode) {\n                    var colGroupNode = tableNode.firstChild;\n                    if (colGroupNode && colGroupNode.nodeName === 'COLGROUP') {\n                        tableNode.style.tableLayout = 'auto';\n                        tableNode.style.width = '';\n\n                        colGroupNode.innerHTML = '';\n                        for (var i = 0; i < widths.length; i++) {\n                            var col = document.createElement('col');\n                            col.style.width = widths[i] + 'px';\n                            colGroupNode.appendChild(col);\n                        }\n                        tableNode.style.tableLayout = 'fixed';\n                    }\n                }\n            };\n        }, {}]\n    }, {}, [1])(1)\n});\n"],"sourceRoot":"/source/"}